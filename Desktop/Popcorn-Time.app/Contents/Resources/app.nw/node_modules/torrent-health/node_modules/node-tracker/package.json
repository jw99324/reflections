{
  "name": "node-tracker",
  "version": "0.0.2",
  "description": "Library to query both UDP and HTTP trackers",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "https://git.popcorntime.io/stash/scm/~xeoncore/node-tracker.git"
  },
  "keywords": [
    "torrent",
    "swarm",
    "tracker",
    "udp",
    "http",
    "scrape",
    "bittorrent"
  ],
  "author": {
    "name": "jduncanator",
    "url": "https://github.com/jduncanator"
  },
  "contributors": {
    "name": "XeonCore",
    "email": "xeoncore@get-popcorn.com",
    "url": "https://github.com/xeoncore"
  },
  "license": "GPL-3.0",
  "dependencies": {
    "URIjs": "^1.13.2",
    "bencode": "^0.6.0",
    "compact2string": "^1.2.0",
    "hat": "0.0.3",
    "request": "^2.39.0",
    "underscore": "^1.6.0"
  },
  "readme": "## node-tracker\n\n### What is it?\nnode-tracker is an implementation of both the [UDP](http://www.bittorrent.org/beps/bep_0015.html) and [HTTP](http://www.bittorrent.org/beps/bep_0003.html) tracker protocol's that the BitTorrent protocol use to exchange information on peers. The library supports [compact peer lists](http://www.bittorrent.org/beps/bep_0023.html) as well as some [UDP tracker extensions](http://www.bittorrent.org/beps/bep_0041.html).\n\nThis library was originally written by [jduncanator](https://github.com/jduncanator) for his swarm-tracker library.\n\n### How to use it?\n\nA really simple example:\n\n    var Tracker = require('node-tracker')\n    var test1 = new Tracker('udp://tracker.openbittorrent.com:80/announce')\n    var test2 = new Tracker('udp://open.demonii.com:1337/announce')\n    var test3 = new Tracker('udp://tracker.istole.it:80/announce')\n    var test4 = new Tracker('http://tracker.ex.ua/announce')\n    // Wait for the trackers to be ready\n    setTimeout(function() {\n        test1.scrape(['5ead8155bb9ced9d36f3196b120e897c61b2af49','8a943f9c60ca01698cb213faf6e489e469246121'], function(err, msg) { console.log(msg); })\n        test2.scrape(['5ead8155bb9ced9d36f3196b120e897c61b2af49','8a943f9c60ca01698cb213faf6e489e469246121'], function(err, msg) { console.log(msg); })\n        test3.scrape(['5ead8155bb9ced9d36f3196b120e897c61b2af49','8a943f9c60ca01698cb213faf6e489e469246121'], function(err, msg) { console.log(msg); })\n        test4.scrape(['5ead8155bb9ced9d36f3196b120e897c61b2af49','8a943f9c60ca01698cb213faf6e489e469246121'], function(err, msg) { console.log(msg); })\n    }, 1000);",
  "readmeFilename": "README.md",
  "_id": "node-tracker@0.0.2",
  "_shasum": "2e7b6ba6a314c2d8a8c068c90b168f6d88b84041",
  "_resolved": "git://github.com/Cuevana/node-tracker#d82b8578a8c1e86eec96b2657603f25d5e70fda1",
  "_from": "node-tracker@git://github.com/Cuevana/node-tracker"
}
