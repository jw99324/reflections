(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    605297,      11566]
NotebookOptionsPosition[    600095,      11393]
NotebookOutlinePosition[    600483,      11410]
CellTagsIndexPosition[    600440,      11407]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Perez, Saez, Weed
Free Damped Motion (Extended)\
\>", "Title",
 CellChangeTimes->{{3.6382678903004627`*^9, 3.6382679148868017`*^9}}],

Cell[CellGroupData[{

Cell["Background Stuff:", "Chapter",
 CellChangeTimes->{{3.638267946967658*^9, 3.638267950750339*^9}}],

Cell[CellGroupData[{

Cell["Background Equations", "Section",
 CellChangeTimes->{{3.6333609679638395`*^9, 3.633360970961996*^9}, {
  3.636734468179612*^9, 3.6367344719612575`*^9}}],

Cell[TextData[{
 "5.1.1 Spring/Mass systems: Free Undamped Motion\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["d", "2"], "x"}], 
      SuperscriptBox["dt", "2"]], "+", 
     RowBox[{
      SuperscriptBox["\[Omega]", "2"], "x"}]}], "=", "0"}], TraditionalForm]],
  
  FontSize->36],
 StyleBox["\t\t(1)\n",
  FontSize->36],
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Omega]", "2"], "=", 
      FractionBox["k", "m"]}], ")"}],
    FontSize->24], TraditionalForm]],
  FontSize->36],
 "\t\t\n\n\n5.1.2: Spring/Mass Systems: Free Damped Motion\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["d", "2"], "x"}], 
      SuperscriptBox["dt", "2"]], "+", 
     RowBox[{"2", "\[Lambda]", 
      FractionBox["dx", "dt"]}], "+", 
     RowBox[{
      SuperscriptBox["\[Omega]", "2"], "x"}]}], "=", "0"}], TraditionalForm]],
  
  FontSize->36],
 StyleBox["\t\t(2)\n",
  FontSize->36],
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"2", "\[Lambda]"}], "=", 
      FractionBox["\[Beta]", "m"]}], ",", "  ", 
     RowBox[{
      SuperscriptBox["\[Omega]", "2"], "=", 
      FractionBox["k", "m"]}]}], ")"}], TraditionalForm]],
  FontSize->24],
 "\t\nor\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"m", 
      FractionBox[
       RowBox[{
        SuperscriptBox["d", "2"], "x"}], 
       SuperscriptBox["dt", "2"]]}], "+", 
     RowBox[{"\[Beta]", 
      FractionBox["dx", "dt"]}], "+", 
     RowBox[{"k", " ", "x"}]}], "=", 
    RowBox[{"0", "                  ", 
     RowBox[{"(", "3", ")"}]}]}], TraditionalForm]],
  FontSize->36],
 "\n\n"
}], "Text",
 CellChangeTimes->{{3.6085146464497695`*^9, 3.6085146574794006`*^9}, {
   3.6085146893882256`*^9, 3.608514691787363*^9}, {3.60851482111876*^9, 
   3.60851487305173*^9}, {3.6085149265027876`*^9, 3.6085150469286757`*^9}, {
   3.608515095030427*^9, 3.6085151709677706`*^9}, {3.608515223136754*^9, 
   3.6085152667162466`*^9}, {3.608515308284624*^9, 3.608515376938551*^9}, {
   3.608515496731403*^9, 3.608515518796665*^9}, {3.608515557150859*^9, 
   3.608515858711107*^9}, {3.6085158971433053`*^9, 3.608516033287092*^9}, {
   3.608516066576996*^9, 3.6085161025810556`*^9}, {3.6085167629998293`*^9, 
   3.6085167919084826`*^9}, {3.617957730131983*^9, 3.617957731614068*^9}, {
   3.617957780039262*^9, 3.6179578194933443`*^9}, {3.6179578857374964`*^9, 
   3.6179579128045373`*^9}, {3.6179580076799884`*^9, 3.617958009146445*^9}, {
   3.6179581298324223`*^9, 3.617958233417737*^9}, 3.6179595217719417`*^9, {
   3.61795957050815*^9, 3.617959574377124*^9}, {3.6179596442682595`*^9, 
   3.617959689214876*^9}, {3.6333549613888655`*^9, 3.6333549656319866`*^9}, {
   3.63336110378596*^9, 3.6333612116867895`*^9}, {3.633361572673644*^9, 
   3.633361615142288*^9}, {3.633428385583096*^9, 3.6334285759691687`*^9}, {
   3.634053375179511*^9, 3.6340533754646535`*^9}, {3.6367345204501762`*^9, 
   3.636734696989667*^9}, {3.6367347270737114`*^9, 3.636734805674693*^9}, {
   3.636734886485221*^9, 3.636734901076428*^9}, {3.6369765729678235`*^9, 
   3.636976633648387*^9}},
 FontFamily->"Gill Sans MT",
 FontSize->20]
}, Open  ]],

Cell[CellGroupData[{

Cell["Part 1: Free Undamped Motion", "Section",
 CellChangeTimes->{{3.636734816674388*^9, 3.636734826391185*^9}}],

Cell[TextData[{
 "(a) Use DSolve in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to verify the solution we found to (1).\n"
}], "Text",
 CellChangeTimes->{{3.6085146464497695`*^9, 3.6085146574794006`*^9}, {
   3.6085146893882256`*^9, 3.608514691787363*^9}, {3.60851482111876*^9, 
   3.60851487305173*^9}, {3.6085149265027876`*^9, 3.6085150469286757`*^9}, {
   3.608515095030427*^9, 3.6085151709677706`*^9}, {3.608515223136754*^9, 
   3.6085152667162466`*^9}, {3.608515308284624*^9, 3.608515376938551*^9}, {
   3.608515496731403*^9, 3.608515518796665*^9}, {3.608515557150859*^9, 
   3.608515858711107*^9}, {3.6085158971433053`*^9, 3.608516033287092*^9}, {
   3.608516066576996*^9, 3.6085161025810556`*^9}, {3.6085167629998293`*^9, 
   3.6085167919084826`*^9}, {3.617957730131983*^9, 3.617957731614068*^9}, {
   3.617957780039262*^9, 3.6179578194933443`*^9}, {3.6179578857374964`*^9, 
   3.6179579128045373`*^9}, {3.6179580076799884`*^9, 3.617958009146445*^9}, {
   3.6179581298324223`*^9, 3.617958233417737*^9}, 3.6179595217719417`*^9, {
   3.61795957050815*^9, 3.617959574377124*^9}, {3.6179596442682595`*^9, 
   3.617959689214876*^9}, {3.6333549613888655`*^9, 3.6333549656319866`*^9}, {
   3.63336110378596*^9, 3.6333612116867895`*^9}, {3.633361572673644*^9, 
   3.633361615142288*^9}, {3.633428385583096*^9, 3.6334285759691687`*^9}, {
   3.634053375179511*^9, 3.6340533754646535`*^9}, {3.6367345204501762`*^9, 
   3.636734696989667*^9}, {3.6367347270737114`*^9, 3.636734805674693*^9}, {
   3.6367348399356594`*^9, 3.636734878394562*^9}},
 FontFamily->"Gill Sans MT",
 FontSize->20],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "''"}], "[", "t", "]"}], "+", 
      RowBox[{
       SuperscriptBox["\[Omega]", "2"], " ", 
       RowBox[{"x", "[", "t", "]"}]}]}], " ", "\[Equal]", " ", "0"}], "}"}], 
   ",", 
   RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.63792137420393*^9, 3.6379214873499327`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"t", " ", "\[Omega]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"C", "[", "2", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"t", " ", "\[Omega]"}], "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.6379214454603357`*^9, 3.637921490034296*^9}]
}, Open  ]],

Cell["\<\
(b) A 4 ft spring measures 8 ft after a 8 lb mass is attached.  Find the \
equation of motion if the mass is released from equilibrium with downward \
velocity of 5 ft/s and there is no damping. (Remember that F=ks where s is \
displacement and F=ma.)\
\>", "Text",
 CellChangeTimes->{{3.6085146464497695`*^9, 3.6085146574794006`*^9}, {
   3.6085146893882256`*^9, 3.608514691787363*^9}, {3.60851482111876*^9, 
   3.60851487305173*^9}, {3.6085149265027876`*^9, 3.6085150469286757`*^9}, {
   3.608515095030427*^9, 3.6085151709677706`*^9}, {3.608515223136754*^9, 
   3.6085152667162466`*^9}, {3.608515308284624*^9, 3.608515376938551*^9}, {
   3.608515496731403*^9, 3.608515518796665*^9}, {3.608515557150859*^9, 
   3.608515858711107*^9}, {3.6085158971433053`*^9, 3.608516033287092*^9}, {
   3.608516066576996*^9, 3.6085161025810556`*^9}, {3.6085167629998293`*^9, 
   3.6085167919084826`*^9}, {3.617957730131983*^9, 3.617957731614068*^9}, {
   3.617957780039262*^9, 3.6179578194933443`*^9}, {3.6179578857374964`*^9, 
   3.6179579128045373`*^9}, {3.6179580076799884`*^9, 3.617958009146445*^9}, {
   3.6179581298324223`*^9, 3.617958233417737*^9}, 3.6179595217719417`*^9, {
   3.61795957050815*^9, 3.617959574377124*^9}, {3.6179596442682595`*^9, 
   3.617959689214876*^9}, {3.6333549613888655`*^9, 3.6333549656319866`*^9}, {
   3.63336110378596*^9, 3.6333612116867895`*^9}, {3.633361572673644*^9, 
   3.633361615142288*^9}, {3.633428385583096*^9, 3.6334285759691687`*^9}, {
   3.634053375179511*^9, 3.6340533754646535`*^9}, {3.6367345204501762`*^9, 
   3.636734696989667*^9}, {3.6367347270737114`*^9, 3.636734805674693*^9}, {
   3.6367348399356594`*^9, 3.636734878394562*^9}, {3.636734973875352*^9, 
   3.636735029151017*^9}, {3.6369767627174444`*^9, 3.6369767649194245`*^9}, {
   3.63698154473991*^9, 3.6369815719546647`*^9}, 3.63792154779493*^9},
 FontFamily->"Gill Sans MT",
 FontSize->20],

Cell[TextData[{
 "F = ks\n8lb (Force) = k* displacement = k*4\nk = 2lb/ft\n\nF = ma\n8 = m*32\
\n1/4 = m\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Omega]", "2"], " ", "=", " ", 
    RowBox[{
     FractionBox["k", "m"], "=", " ", 
     RowBox[{
      FractionBox["2", 
       RowBox[{"1", "/", "4"}]], "=", "8"}]}]}], TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Lambda]", "="}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "0\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["d", "2"], "x"}], 
      SuperscriptBox["dt", "2"]], "+", 
     RowBox[{"8", "x"}]}], "=", "0"}], TraditionalForm]],
  FontSize->36],
 "\n\nx(0) = 0 (hasn\[CloseCurlyQuote]t moved at all- it\[CloseCurlyQuote]s a \
4 ft spring, but it hasn\[CloseCurlyQuote]t moved at all the instant you put \
the weight on- 0, measure of displacement rather than position)\nx\
\[CloseCurlyQuote](0) = 5 (velocity at time 0) \n"
}], "Text",
 CellChangeTimes->{{3.6379218318145247`*^9, 3.637921854416994*^9}, {
   3.6379219462266617`*^9, 3.637922164604686*^9}, {3.6379222177800207`*^9, 
   3.6379222563104753`*^9}, {3.6382677131877613`*^9, 3.638267714943192*^9}, {
   3.638269203389532*^9, 3.638269225005425*^9}, 3.638269272524601*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"x", "''"}], "[", "t", "]"}], "+", 
       RowBox[{"8", 
        RowBox[{"x", "[", "t", "]"}]}]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"x", "[", "0", "]"}], "==", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "'"}], "[", "0", "]"}], "==", "5"}]}], "}"}], ",", 
   RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.637922310117526*^9, 3.637922357457017*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"5", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", 
        SqrtBox["2"], " ", "t"}], "]"}]}], 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.63792235979502*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Part 2: Free Damped Motion (Specific)", "Section",
 CellChangeTimes->{{3.636734816674388*^9, 3.636734826391185*^9}, {
  3.6367350394612293`*^9, 3.636735044870013*^9}, {3.6367355450018606`*^9, 
  3.6367355614563704`*^9}}],

Cell[TextData[{
 "(a) Use DSolve in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to find a general solution to (2).\n"
}], "Text",
 CellChangeTimes->{{3.6085146464497695`*^9, 3.6085146574794006`*^9}, {
   3.6085146893882256`*^9, 3.608514691787363*^9}, {3.60851482111876*^9, 
   3.60851487305173*^9}, {3.6085149265027876`*^9, 3.6085150469286757`*^9}, {
   3.608515095030427*^9, 3.6085151709677706`*^9}, {3.608515223136754*^9, 
   3.6085152667162466`*^9}, {3.608515308284624*^9, 3.608515376938551*^9}, {
   3.608515496731403*^9, 3.608515518796665*^9}, {3.608515557150859*^9, 
   3.608515858711107*^9}, {3.6085158971433053`*^9, 3.608516033287092*^9}, {
   3.608516066576996*^9, 3.6085161025810556`*^9}, {3.6085167629998293`*^9, 
   3.6085167919084826`*^9}, {3.617957730131983*^9, 3.617957731614068*^9}, {
   3.617957780039262*^9, 3.6179578194933443`*^9}, {3.6179578857374964`*^9, 
   3.6179579128045373`*^9}, {3.6179580076799884`*^9, 3.617958009146445*^9}, {
   3.6179581298324223`*^9, 3.617958233417737*^9}, 3.6179595217719417`*^9, {
   3.61795957050815*^9, 3.617959574377124*^9}, {3.6179596442682595`*^9, 
   3.617959689214876*^9}, {3.6333549613888655`*^9, 3.6333549656319866`*^9}, {
   3.63336110378596*^9, 3.6333612116867895`*^9}, {3.633361572673644*^9, 
   3.633361615142288*^9}, {3.633428385583096*^9, 3.6334285759691687`*^9}, {
   3.634053375179511*^9, 3.6340533754646535`*^9}, {3.6367345204501762`*^9, 
   3.636734696989667*^9}, {3.6367347270737114`*^9, 3.636734805674693*^9}, {
   3.6367348399356594`*^9, 3.636734878394562*^9}, {3.6367351292770567`*^9, 
   3.6367351410232735`*^9}},
 FontFamily->"Gill Sans MT",
 FontSize->20],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"x", "''"}], "[", "t", "]"}], " ", "+", " ", 
     RowBox[{"2", " ", "\[Lambda]", " ", 
      RowBox[{
       RowBox[{"x", "'"}], "[", "t", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[Omega]", "2"], " ", 
      RowBox[{"x", "[", "t", "]"}]}]}], "\[Equal]", "0"}], ",", " ", 
   RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.638267986662552*^9, 3.638268024030239*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"t", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Lambda]"}], "-", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Lambda]", "2"], "-", 
            SuperscriptBox["\[Omega]", "2"]}]]}], ")"}]}]], " ", 
      RowBox[{"C", "[", "1", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"t", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Lambda]"}], "+", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Lambda]", "2"], "-", 
            SuperscriptBox["\[Omega]", "2"]}]]}], ")"}]}]], " ", 
      RowBox[{"C", "[", "2", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.638268027727666*^9}]
}, Open  ]],

Cell[TextData[{
 "(b) A 4 ft spring measures 8 ft after a 8 lb mass is attached.  Find the \
equation of motion if the mass is released from equilibrium with downward \
velocity of 5 ft/s and damping is ",
 Cell[BoxData[
  FormBox[
   SqrtBox["2"], TraditionalForm]]],
 " times the instantaneous velocity.  (In other words, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Beta]", "=", 
    SqrtBox["2"]}], TraditionalForm]]],
 ".) "
}], "Text",
 CellChangeTimes->{{3.6085146464497695`*^9, 3.6085146574794006`*^9}, {
   3.6085146893882256`*^9, 3.608514691787363*^9}, {3.60851482111876*^9, 
   3.60851487305173*^9}, {3.6085149265027876`*^9, 3.6085150469286757`*^9}, {
   3.608515095030427*^9, 3.6085151709677706`*^9}, {3.608515223136754*^9, 
   3.6085152667162466`*^9}, {3.608515308284624*^9, 3.608515376938551*^9}, {
   3.608515496731403*^9, 3.608515518796665*^9}, {3.608515557150859*^9, 
   3.608515858711107*^9}, {3.6085158971433053`*^9, 3.608516033287092*^9}, {
   3.608516066576996*^9, 3.6085161025810556`*^9}, {3.6085167629998293`*^9, 
   3.6085167919084826`*^9}, {3.617957730131983*^9, 3.617957731614068*^9}, {
   3.617957780039262*^9, 3.6179578194933443`*^9}, {3.6179578857374964`*^9, 
   3.6179579128045373`*^9}, {3.6179580076799884`*^9, 3.617958009146445*^9}, {
   3.6179581298324223`*^9, 3.617958233417737*^9}, 3.6179595217719417`*^9, {
   3.61795957050815*^9, 3.617959574377124*^9}, {3.6179596442682595`*^9, 
   3.617959689214876*^9}, {3.6333549613888655`*^9, 3.6333549656319866`*^9}, {
   3.63336110378596*^9, 3.6333612116867895`*^9}, {3.633361572673644*^9, 
   3.633361615142288*^9}, {3.633428385583096*^9, 3.6334285759691687`*^9}, {
   3.634053375179511*^9, 3.6340533754646535`*^9}, {3.6367345204501762`*^9, 
   3.636734696989667*^9}, {3.6367347270737114`*^9, 3.636734805674693*^9}, {
   3.6367348399356594`*^9, 3.636734878394562*^9}, {3.636734973875352*^9, 
   3.636735029151017*^9}, {3.636735168886764*^9, 3.636735229322039*^9}, 
   3.638268052243574*^9},
 FontFamily->"Gill Sans MT",
 FontSize->20],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{"2", "\[Lambda]"}], "=", 
      FractionBox["\[Beta]", "m"]}], ",", "  ", 
     RowBox[{
      SuperscriptBox["\[Omega]", "2"], "=", 
      FractionBox["k", "m"]}]}], "Text"], TraditionalForm]],
  FontSize->24],
 "\n2\[Lambda] = ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"Sqrt", "[", "2", "]"}], 
    RowBox[{"1", "/", "4"}]], TraditionalForm]]],
 "\n\[Lambda] = 2",
 Cell[BoxData[
  FormBox[
   SqrtBox["2"], TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Omega]", "2"], "=", 
    FractionBox["2", 
     RowBox[{"1", "/", "4"}]]}], TraditionalForm]], "Text",
  FontSize->24],
 "\n",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["\[Omega]", "2"], "=", "8"}]],
  CellChangeTimes->{{3.6382682066903*^9, 3.638268218162734*^9}}],
 "\n\[Omega] = 2",
 Cell[BoxData[
  FormBox[
   SqrtBox["2"], TraditionalForm]]],
 "\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["d", "2"], "x"}], 
      SuperscriptBox["dt", "2"]], "+", 
     RowBox[{"2", "\[Lambda]", 
      FractionBox["dx", "dt"]}], "+", 
     RowBox[{
      SuperscriptBox["\[Omega]", "2"], "x"}]}], "=", "0"}], TraditionalForm]],
  
  FontSize->36],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["d", "2"], "x"}], 
      SuperscriptBox["dt", "2"]], "+", 
     RowBox[{"4", 
      SqrtBox["2"], 
      FractionBox["dx", "dt"]}], "+", 
     RowBox[{"8", "x"}]}], "=", "0"}], TraditionalForm]],
  FontSize->18]
}], "Text",
 CellChangeTimes->{{3.638268057331102*^9, 3.638268112954446*^9}, {
  3.638268154362327*^9, 3.638268228089349*^9}, {3.63826842201867*^9, 
  3.63826849043386*^9}}],

Cell["\<\
x(0) = 0 (hasn\[CloseCurlyQuote]t moved at all- it\[CloseCurlyQuote]s a 4 ft \
spring, but it hasn\[CloseCurlyQuote]t moved at all the instant you put the \
weight on- 0, measure of displacement rather than position)
x\[CloseCurlyQuote](0) = 5 (velocity at time 0) \
\>", "Text",
 CellChangeTimes->{3.6382685253355207`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"x", "''"}], "[", "t", "]"}], " ", "+", " ", 
       RowBox[{"4", " ", 
        RowBox[{"Sqrt", "[", "2", "]"}], " ", 
        RowBox[{
         RowBox[{"x", "'"}], "[", "t", "]"}]}], " ", "+", " ", 
       RowBox[{"8", " ", 
        RowBox[{"x", "[", "t", "]"}]}]}], "\[Equal]", "0"}], ",", " ", 
     RowBox[{
      RowBox[{"x", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", "5"}]}], "}"}], ",", 
   RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.6382684932177553`*^9, 3.638268501198421*^9}, {
  3.638268532174418*^9, 3.638268578573297*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], "\[Rule]", 
    RowBox[{"5", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SqrtBox["2"], " ", "t"}]], " ", "t"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.638268579976151*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Part 3: Free Damped Motion (Extended)", "Section",
 CellChangeTimes->{{3.636735530115447*^9, 3.6367355417225666`*^9}, {
  3.6367360533074255`*^9, 3.636736056041338*^9}}],

Cell["\<\
(a) Plot both of your results from Part 1(b) and Part 2(b), explain the \
differences in the two graphs and describe the motion of the spring in each \
case.  Clearly label your graph.\
\>", "Text",
 CellChangeTimes->{{3.6085146464497695`*^9, 3.6085146574794006`*^9}, {
   3.6085146893882256`*^9, 3.608514691787363*^9}, {3.60851482111876*^9, 
   3.60851487305173*^9}, {3.6085149265027876`*^9, 3.6085150469286757`*^9}, {
   3.608515095030427*^9, 3.6085151709677706`*^9}, {3.608515223136754*^9, 
   3.6085152667162466`*^9}, {3.608515308284624*^9, 3.608515376938551*^9}, {
   3.608515496731403*^9, 3.608515518796665*^9}, {3.608515557150859*^9, 
   3.608515858711107*^9}, {3.6085158971433053`*^9, 3.608516033287092*^9}, {
   3.608516066576996*^9, 3.6085161025810556`*^9}, {3.6085167629998293`*^9, 
   3.6085167919084826`*^9}, {3.617957730131983*^9, 3.617957731614068*^9}, {
   3.617957780039262*^9, 3.6179578194933443`*^9}, {3.6179578857374964`*^9, 
   3.6179579128045373`*^9}, {3.6179580076799884`*^9, 3.617958009146445*^9}, {
   3.6179581298324223`*^9, 3.617958233417737*^9}, 3.6179595217719417`*^9, {
   3.61795957050815*^9, 3.617959574377124*^9}, {3.6179596442682595`*^9, 
   3.617959689214876*^9}, {3.6333549613888655`*^9, 3.6333549656319866`*^9}, {
   3.63336110378596*^9, 3.6333612116867895`*^9}, {3.633361572673644*^9, 
   3.633361615142288*^9}, {3.633428385583096*^9, 3.6334285759691687`*^9}, {
   3.634053375179511*^9, 3.6340533754646535`*^9}, {3.6367345204501762`*^9, 
   3.636734696989667*^9}, {3.6367347270737114`*^9, 3.636734805674693*^9}, {
   3.6367348399356594`*^9, 3.636734878394562*^9}, {3.6367351292770567`*^9, 
   3.6367351410232735`*^9}, {3.6367356668410883`*^9, 3.636735715726284*^9}, {
   3.6369773024477654`*^9, 3.636977339332932*^9}, {3.6369775959651594`*^9, 
   3.6369776114852624`*^9}, {3.63697770224041*^9, 3.63697777730842*^9}, 
   3.637314754278358*^9, 3.638268606596798*^9},
 FontFamily->"Gill Sans MT",
 FontSize->20],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p1", " ", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"5", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SqrtBox["2"], " ", "t"}]], " ", "t"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], ",", " ", 
    RowBox[{
    "PlotLegends", "\[Rule]", 
     "\"\<5 \!\(\*SuperscriptBox[\(\[ExponentialE]\), \(\(-2\)\\\ \
\*SqrtBox[\(2\)]\\\ t\)]\) t\>\""}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", "Orange"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.638268612710237*^9, 3.6382686968270197`*^9}, {
  3.638268746853043*^9, 3.638268848972693*^9}, {3.638269462862648*^9, 
  3.638269464576688*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0.5, 0]], 
       LineBox[CompressedData["
1:eJwtV3c0Ft7/tx/Ze4/H8yBRUqHCc+87I7OojEQyS/jYI7JVZiKiQkMlLaRh
Jjt7h5T9pOxVRhnffuf87h/3nnte5/1+vV7ve+499y1l73HSiY6Ghiby3/R/
K42cDRfD41+I5v9H+Q7wSlK1xLas8hO77MJwogtIPVUJw/wK1Zhb8BF+c7zB
wPVIKr4+vMAmsFiES50Z2Nwu38XbQlz7YmsrsN2RB+ffn3mArRuz+I6/qsYX
rb7tLErNwZ77gwoCphqwm3NQTNHrZ7jFX6lecqgZe/oJTRa1vcS26jTUne/b
cLmuvJn1ldd4/b5yvyhrF661Oy9wtqIIv50386jt6cVHnd8dHTQqwQxcvyur
JvtwgztDwNmvpfiV+62mO8v9uOVydt/ZtQ+4T6Jvk+XHAD4euUgYuvYR/2cU
onqo8yt21iaK5cdVYpu8D6edX3/DUwYeRnuFq3FVyEb7hOkQVmhLc/QYqcZm
Wn86y4SGsduJiuD8pzVY4Fnirofdw3jOgv3VXtU6PLv3RGJL+gje+1W5zmOz
DovJ3uBO+TmCPW2sB/Nr6zFt3cB+a5VRvOj4gl3pVAM+Mf/qh3PNKFZkFTI4
rdCIM0wKlPVYxrDL6yvXwumbsOnnjdU/RmP4qcVide7XJhyZExqWHT+GqZtn
tzveNOOPzE7q5+rHsNTjJvX1+BbMT3SrMdkcwzYGBy9JObZiJED4dktpHPen
cS168bXjVeMrbckJ45ifErLn7kw7DiSUUyLfjeNni7+U7ew7cAlTmdfhr+O4
QVvhlF9bB146vWXRtTmOJ9LtvGLVOvGv2NM7L4hTMcN0+o2snE4s72fhyK1G
xWTU9uo1TxeW8Uz6PnmKijWTGVrqQrtwo213H7MrFdtS1aa+THVhJyOd6qth
VBx60It5zrwbp0/axwUkU3FW3FNZuppu7FA+HfDrARWXDw5qC+ztwQHw/hBP
HhUPKPE5yGf0YJVH/1G/F1PxWpRBBCJ8xvwJh2muVFGxYF/4/ZM+n/FhD5NI
mgYqVpUv+nB++DO+Mu772b2Fik1DZr8GGfbiHm+bb6NtVOzdQf6TWNSLA05z
/HZtp+Jk8hmhR+Q+7Hqfa0PiH17gn6RadKMPZ3E+N2ZrpuK2xnrT5r99eNR8
uUu7nopnxDa9hy/0Y9b+0YX+j1TM6nkgebm7H5+IQff7i6hYvuZiPgG+4F6I
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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{-9.999999591836735, 9.999999591836735}, {0, 1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
    "\"5 \\!\\(\\*SuperscriptBox[\\(\[ExponentialE]\\), \\(\\(-2\\)\\\\ \
\\*SqrtBox[\\(2\\)]\\\\ t\\)]\\) t\"", TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.638268698212435*^9, {3.6382687593740053`*^9, 3.638268849852927*^9}, 
   3.638269464999927*^9}]
}, Open  ]],

Cell[TextData[{
 "This graph is an example of a critcally damped harmonic oscillator because ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Omega]", "2"], "-", 
     SuperscriptBox["\[Lambda]", "2"]}], "=", 
    RowBox[{
    "0.", "  ", "Therefore", " ", "the", " ", "system", " ", "is", " ", 
     "said", " ", "to", " ", "be", " ", "critically", " ", "damped", " ", 
     "because", " ", "any", " ", "slight", " ", "decrease", " ", "in", " ", 
     "the", " ", "damping", " ", "force", " ", "would", " ", "result", " ", 
     "in", " ", "oscillatory", " ", 
     RowBox[{"motion", "."}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.63826901997311*^9, 3.6382690227648287`*^9}, {
  3.638269178518651*^9, 3.6382691915559072`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p2", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    FractionBox[
     RowBox[{"5", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", 
        SqrtBox["2"], " ", "t"}], "]"}]}], 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", " ", 
    RowBox[{
    "PlotLegends", "\[Rule]", 
     "\"\<\!\(\*FractionBox[\(5\\\ Sin[2\\\ \*SqrtBox[\(2\)]\\\ t]\), \(2\\\ \
\*SqrtBox[\(2\)]\)]\)\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.638268699826189*^9, 3.638268713470047*^9}, 
   3.638268859912982*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwUm3c81d8fx+2RvS8uLkmDiISW8y6lJaGopGEkI6uMQkVKG5WUGeqbUlGS
kBzJShkhW7L35rr3fj7V7/P7y+P1OJ/zXp/355z3kwd1Jx+bkzxcXFyX+bi4
/v8z+aKTgL7LLVP5qD9PUlTfmqbYj284yHBHfSJSJvvdolHb3ptnGIzz6KzO
lz2fTz1GQTsOi/MzbqDVP2wt3V2zkXkZOCyqxaNR5ZaQcEeMXl82jJhWe4EK
9j1J1bCsQz2OWfITagXoNM/6LFHubjT65J/z+HAB4mIk256Y7UazA1Zvx94W
IvX1201u+f1GfB5ze0bNitC+4z0f9zj2IK0zJuFDpzAaNQ3ofr+pDxlt6VmY
bilFF4ZD1df0DKIQa88TY2pf0RmDf1UGPybQ3wgjxe7bX9HbM9lSj7ZNorA8
7oYG9ld05M690b0fJtEV5UdmhY3VyIbv/ERqwhSKGijTunHtO1rmtxksX02j
1POqE1pTdSjZUFOm6+AskmqetxHTrUe8fx5wX7g1i2x87PWuudSjvgvcZ98W
z6KfacuGg3/UI90GadPGpXOoXaDosNPLH2jytU9i+/Ac6qsf3qR/vBGdEpGU
5jm6gDQ9LBVfPmhE2b1701xuLCBX3twFze+NaMHM1GH3+wU0vO5SFm19E6r4
bXMsUYSJxhPkGFwyP9HpE81nTXKYaLVhCHl+108UvTdmdXw7E3nX/G6du/QT
FSiG+wbwLKKZfy/vDo3/RBF5Q6wkq0XEdNnKW1fRjJ6HLI2KHlxExn8zunf+
aUZeGtKL75aw0LmHYkWla1uQ9mycwF5dFiK+tvrnpbaglqLNfW1nWYhLz2cw
ObgVcR3Nqt7JYiFhduLX07rt6OIj27yWATYyudYWvNuxHXGpxshr/WMjNzkF
nRWx7UjjYKXCjAIHVejfi+pjt6NtnSlLiB0cdMXj+n778g6UvOdE+o80Dspl
lfOZsDqQ6KPm4cU8DuqL5M2T0+5EpzxP6D38xkFbn1yk/YjpRLqql1XRHAdx
dfp37XDoQjPufZUrNxFojUdO1LLoLrTMEZDYXgIdZ00h3tIudH25WYnrUQIV
y3qmFy//heYZ5x8GhxJoIv35/iT7X2jIM9XK8BaB6PqDfMF3fqHzdYfanOIJ
FLLX8dS6uV9o5vP9zSq5BMrsSKHJaHUjUoH/3vMSArW7d36dPtSNQvFQRsZ3
AplEHtR5VdyN6nx2reDqI5Cb7IOuGzPdKCeuU/3wBIEsrN0r10r/RvVXRQjN
Rcp+97NzUtt/I3d3nhuywiS692y7ddix32hV6PI+YykSZXr1r5wK+o3yjz49
VUMjUalhBM+xu7/RYsOy6SY1ErUT6h3fM38jOXWtw5ZaJJotLXm3sew34pRM
hK/XIZHwzeO3M7t+o2y+WIs4fRIxrP+6KC7+RkFZ/5JdjEhkQkvefF2yB1We
Hzr6dAOJrLo3yi+u7EGsBw2BtqYkcnvWPnnSrAd9l1ZsDtpCojCv85VNDj2o
0LTfU2QbiR4a0lLNAnvQBFNXW9KcRFlE3rmc6B6kOlIuHLmDRBWlttbqL3qQ
ZOUOLq+dJPp1Y35lTGkPGvFctqSc0kyr+zz/OnqQ3lzasihKi9MMOrwWelDa
54b9VdR+re76d53ivejlpcePzlL2TZ/53N6zohcV8Jdyoin/tl7iJwu39KK1
GyoiVLaS6LTh680rj/Qi0x5hoCMSXSH2yD/yp/SxItPbG0mUVDo6KRDVi9RP
/brrZUyi3Bs3KgMyetHRF1ssSwxI9N1qRWp/SS/CJ67furKaRH0Klef2t/ei
v92aLoXLScT5ddK6dK4XiYocXnBUJ5H0M75V+mJ9yOrLuuMhSiRa5fWEJ1Wr
D13bnlAmIEOirYZbO8ShDyWcX7uHT4REfqWXbo+f6UNrPT6csGMTiCUV+7rj
Vh8KftSk3zVFoIuOz2urn/ahNsd6684BAt3m+iH5orkPKdrvM9tWTyAZqwH9
R1N96L+83AuvywiU8Jhtc02oH60W/dganU+g56YaD05u6EcNZkm/SlIIpBdl
lHdgfz8azv8hIHmXQHldu1vMTvcjqXH73W2XCVQWelZRI6UfMblpGzpcCPS7
sCz5F/cAWtqcO/xUg0CnlrQV1ygNoPvPdQRqJAk0eXiiu2jtAMpFs6/9/nIQ
yZLTSDw5gPhqr/EatHIQzfjUs4NfB1CqYPbS+Ksc9DgypNK8dwA9Xd//K9uH
g7Sao4fXEQNobGrGwPwwBxkG5K+SXT2I1LIDjsyt4iCrd8LZ9TGDiOfbB12H
KjZq4VGtxy8G0ZrTOozQLDY6ZmMwk1U6iCL1uw+oxbLR6Rn7tXfmB9FSres3
Z46y0XW9Vx92HRpC538rFTWOsRB+aVlSqjaM7rX4B4vMLCJzwqnnrckwSp6p
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
G5v/H3QdsYI=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 10}, {-1.767765045208126, 1.7677660366377899`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
    "\"\\!\\(\\*FractionBox[\\(5\\\\ Sin[2\\\\ \\*SqrtBox[\\(2\\)]\\\\ t]\\), \
\\(2\\\\ \\*SqrtBox[\\(2\\)]\\)]\\)\"", TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.638268715271459*^9, 3.6382688608892603`*^9}]
}, Open  ]],

Cell["\<\
This graph is an example of a harmonic oscillator with no damping. \
\>", "Text",
 CellChangeTimes->{{3.638269293906267*^9, 3.63826931003305*^9}}],

Cell["", "Text",
 CellChangeTimes->{{3.638269090162972*^9, 3.638269175262169*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"5", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", 
         SqrtBox["2"], " ", "t"}], "]"}]}], 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]], ",", 
     RowBox[{"5", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        SqrtBox["2"], " ", "t"}]], " ", "t"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", " ", "\[Rule]", " ", "Automatic"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.638268716429914*^9, 3.6382687321075363`*^9}, {
  3.638268824446582*^9, 3.63826883731656*^9}, {3.638269406627161*^9, 
  3.638269453977582*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwUm3c81d8fx+2RvS8uLkmDiISW8y6lJaGopGEkI6uMQkVKG5WUGeqbUlGS
kBzJShkhW7L35rr3fj7V7/P7y+P1OJ/zXp/355z3kwd1Jx+bkzxcXFyX+bi4
/v8z+aKTgL7LLVP5qD9PUlTfmqbYj284yHBHfSJSJvvdolHb3ptnGIzz6KzO
lz2fTz1GQTsOi/MzbqDVP2wt3V2zkXkZOCyqxaNR5ZaQcEeMXl82jJhWe4EK
9j1J1bCsQz2OWfITagXoNM/6LFHubjT65J/z+HAB4mIk256Y7UazA1Zvx94W
IvX1201u+f1GfB5ze0bNitC+4z0f9zj2IK0zJuFDpzAaNQ3ofr+pDxlt6VmY
bilFF4ZD1df0DKIQa88TY2pf0RmDf1UGPybQ3wgjxe7bX9HbM9lSj7ZNorA8
7oYG9ld05M690b0fJtEV5UdmhY3VyIbv/ERqwhSKGijTunHtO1rmtxksX02j
1POqE1pTdSjZUFOm6+AskmqetxHTrUe8fx5wX7g1i2x87PWuudSjvgvcZ98W
z6KfacuGg3/UI90GadPGpXOoXaDosNPLH2jytU9i+/Ac6qsf3qR/vBGdEpGU
5jm6gDQ9LBVfPmhE2b1701xuLCBX3twFze+NaMHM1GH3+wU0vO5SFm19E6r4
bXMsUYSJxhPkGFwyP9HpE81nTXKYaLVhCHl+108UvTdmdXw7E3nX/G6du/QT
FSiG+wbwLKKZfy/vDo3/RBF5Q6wkq0XEdNnKW1fRjJ6HLI2KHlxExn8zunf+
aUZeGtKL75aw0LmHYkWla1uQ9mycwF5dFiK+tvrnpbaglqLNfW1nWYhLz2cw
ObgVcR3Nqt7JYiFhduLX07rt6OIj27yWATYyudYWvNuxHXGpxshr/WMjNzkF
nRWx7UjjYKXCjAIHVejfi+pjt6NtnSlLiB0cdMXj+n778g6UvOdE+o80Dspl
lfOZsDqQ6KPm4cU8DuqL5M2T0+5EpzxP6D38xkFbn1yk/YjpRLqql1XRHAdx
dfp37XDoQjPufZUrNxFojUdO1LLoLrTMEZDYXgIdZ00h3tIudH25WYnrUQIV
y3qmFy//heYZ5x8GhxJoIv35/iT7X2jIM9XK8BaB6PqDfMF3fqHzdYfanOIJ
FLLX8dS6uV9o5vP9zSq5BMrsSKHJaHUjUoH/3vMSArW7d36dPtSNQvFQRsZ3
AplEHtR5VdyN6nx2reDqI5Cb7IOuGzPdKCeuU/3wBIEsrN0r10r/RvVXRQjN
Rcp+97NzUtt/I3d3nhuywiS692y7ddix32hV6PI+YykSZXr1r5wK+o3yjz49
VUMjUalhBM+xu7/RYsOy6SY1ErUT6h3fM38jOXWtw5ZaJJotLXm3sew34pRM
hK/XIZHwzeO3M7t+o2y+WIs4fRIxrP+6KC7+RkFZ/5JdjEhkQkvefF2yB1We
Hzr6dAOJrLo3yi+u7EGsBw2BtqYkcnvWPnnSrAd9l1ZsDtpCojCv85VNDj2o
0LTfU2QbiR4a0lLNAnvQBFNXW9KcRFlE3rmc6B6kOlIuHLmDRBWlttbqL3qQ
ZOUOLq+dJPp1Y35lTGkPGvFctqSc0kyr+zz/OnqQ3lzasihKi9MMOrwWelDa
54b9VdR+re76d53ivejlpcePzlL2TZ/53N6zohcV8Jdyoin/tl7iJwu39KK1
GyoiVLaS6LTh680rj/Qi0x5hoCMSXSH2yD/yp/SxItPbG0mUVDo6KRDVi9RP
/brrZUyi3Bs3KgMyetHRF1ssSwxI9N1qRWp/SS/CJ67furKaRH0Klef2t/ei
v92aLoXLScT5ddK6dK4XiYocXnBUJ5H0M75V+mJ9yOrLuuMhSiRa5fWEJ1Wr
D13bnlAmIEOirYZbO8ShDyWcX7uHT4REfqWXbo+f6UNrPT6csGMTiCUV+7rj
Vh8KftSk3zVFoIuOz2urn/ahNsd6684BAt3m+iH5orkPKdrvM9tWTyAZqwH9
R1N96L+83AuvywiU8Jhtc02oH60W/dganU+g56YaD05u6EcNZkm/SlIIpBdl
lHdgfz8azv8hIHmXQHldu1vMTvcjqXH73W2XCVQWelZRI6UfMblpGzpcCPS7
sCz5F/cAWtqcO/xUg0CnlrQV1ygNoPvPdQRqJAk0eXiiu2jtAMpFs6/9/nIQ
yZLTSDw5gPhqr/EatHIQzfjUs4NfB1CqYPbS+Ksc9DgypNK8dwA9Xd//K9uH
g7Sao4fXEQNobGrGwPwwBxkG5K+SXT2I1LIDjsyt4iCrd8LZ9TGDiOfbB12H
KjZq4VGtxy8G0ZrTOozQLDY6ZmMwk1U6iCL1uw+oxbLR6Rn7tXfmB9FSres3
Z46y0XW9Vx92HRpC538rFTWOsRB+aVlSqjaM7rX4B4vMLCJzwqnnrckwSp6p
LkytW0TfdwfxpFkPo0ED4wOlrxdR+8jjbZcihlHM7wit127Uebl8pmrj0DAS
//i1bm0bE+k+vf8jN2sEbatc4pb63wKSfbRmseTrCHqlN7a+6/wCIm7V0Gv6
R5BR6o+9j/cuoKqzgm4DSqMIjzTpf5ibR05mIX/lro2ijwGZm2w2zKMHvU7a
QcfH0IFrmtcZObOIZBhcXS85gUQ015nNZkyiXtm6zO3aE8hl1/bp2XWT6KvQ
6Xpr8wnk/PHMnPmXCRQ3/Z+yR+gEIq+FbJ7rGEdrShRzEoYnkMAGiZD/+MeQ
83HubqJkEmWn2St/3jSEBizd6N0m0yjP027sX/wvJFtxWvPi9mlUtoXv2Ztn
XWjrZj8dFZtpxFPxtqImpxOlagdvOuI5jQ5uFlx34ms7chC67dCSPI24dnSZ
eE43o4bP2Ul1PDPo1MrdCQkHalGx4SK95PsMinc5bRVGu4wnXhKax9tmUKVj
SkZbwyNMX8q1+u/ADIoRCKkOsXiKz0sJb970bwa57Gl5kSaUgw0nlY7m688i
6ZziW3v6S3Bmhmnym7hZ9Mx5cxv/rnr8UClSJe3EHBqZO8x36E03ZvbVZlh6
z6HC5++F9hz5jQ+8VjAgQ+bQlepW7yW/fmNpeGF+8OEcunD8kcex3h58++R3
H7HaOXRK+Y680GAfDnsjXXp+4zzSv/jZvKF5CLuZP3a1kV9Ad9Lu/3bYPYUr
JIan/y1dQOeHz/6c+ziFl7WtCXmtv4D6FT3S3OSnca9nabQQ9Z7LB/4kr4qc
xg53B/KLIxbQWRuBHSqOM9iqU1tEe2YBbchTdn7OO4ez/vN/0Pp3Af062tQj
ZTSHxXw+qUWKMpHk4QoJEbc5XM29z7BnOROd/bpjLKN6Dm9bfubow2NMZEn2
W52+OY/Xn8nP5v3ORNfbL+jrzi3g+n8bj/lRfamkGXdxpwoTu97Bot2DTGTk
IKg7aM7E955XuBdyL6KqkGzR54+YePRX01I/40Uk3yPSoGO0iMNOH2r4tW0R
xUvVLd/lsIjlOR1hFjaLKEXXpr0nfBGbyfV1LfdaRKe+yAhf/baIk/bMPPyV
vohaDugqhR5iYYM2f3OLN4uoY79vrUswC1e5suYLPi0ioBvd/5LIwvPh/6wf
tC4iqzBdx9+dLLw3X0zUQpyFtJfWmkYcYuP+7XcLC5RZaFqf955QIBsHN8q6
L1/JQoXcHz3/3mPjZ5PKFTzbWOgZTXHl+m9s/FdzVVjBeRYy3lda2GbIwbE5
r3WXX2MhtSMblRv2cvAq0O+KjWWh+oXNW41cOdjuiMkG32wWCg8/+hk94ODx
4Y/DXUUsNDHhKdn/koMvB6KHe6pZKPH9uMzsZw7Ovms+rzXAQjtjzu3eNc7B
5mrV6bGzLGQpPh51l4vAna/2WvNwsZHy34zMLbIEFqo6kNWlxEa1v6OzW9YT
+MRfJ7dYKzaKvtGWWneBwMxbg/I8x9iIz3tw/Z47BL6t6FHu48lGfrKb72on
EbjA0E9jTyQbJYf16SrmE9iqdL4+/z4bRVQ1tCwrJ/DgvnOXtNLY6NxeS764
HwSW9rzUyV3ERuDG3fh4mMDPWTy3fL6ykXaE65zJHIFNIyPXdzWzUWfJ+/uG
fwjcJLNkeHc/G/0TzAq5J0Bij7Q7cfkzbGTAcy3QRoLEXHpS2/8/p13cPmvj
r0DiuKLYufuiHLTCg963qEpind20dG4lDmKKZpGdy0j8pSXRymc5B73/9P3c
Uh0SxzrZzi+speay5tYeb30Su06IPwoFDqrfelhijRGJTc5VbeTdy0EX6H9H
XDeQeAnv5e4b1LmvnaNyVMaUxJ13NkZIunIQnsi1W7eFxK9pC1oPz3DQjVen
Kr+bkfjik6xqlUscdGlJeHrbdhJb6bp5P73FQfGpc11HdpBYo0BdWvsRB0nl
HT6zfyeJ58063r99ykEvXRbsSyhdURt72OQtFX/2mwfplH542PJP8ScOuhat
spRD7XfrF0zbXs1By8cDBCrNSbzB5/O2780cJB6TuF2Y8ifKCR626eMgQpg2
UrKVxL+uGN5um+Ig9wg6SZ26+I3EpN4JkoOe3Ai/HbOJxJcTMhoHhQg0+LUi
87kJiQ8scwzykqPmvBJpDyNDEi97o6Q8r06gRnuD3+v1SMzc0FQcrEug9NuP
lr1bSeKq8jtO3BsJRLQctU1fSuLTHVyZ4gcIdMUxdaJXjsSmroV7H5wg0P5L
V+MNxUksOXN2RtmLQF7aj/JIfhK/ExgyWRlJoMqfcsPTVD9cuZvamX2PQO+W
kAdURglsR7cPM3pMPX+Dr7+km8Ac/ZpKM2puEO+wNPL+SuDvRZGe1dRcIanG
d+rcJwKn7AAJ6x8EOhNYEst5Q+AtR9/ZHRslUGRs/69TcVQ/Dp/m9DMJtPFC
3IX91wncf0YrxZOXRLdMe1TyzxP4+vX4gXN0Ep1x3Hdlwp7A9jL7b/xbQaKG
F549xbsJrJMiujpyHYnW5Ep4L9lA4Lp3l/zvW5IoxZ9+QkqBwPLdJ3mzwkh0
2/TQ5uFqDh52V8swvEMiroCyhNg8Di6cb939MZ5Er0X0/n5K4+CjSyzuVeWQ
6PgJvTM3Ajn46ToD9b5+EoUoV7WKK3Gw/u2/prRdf5DPXi/BDbvY2MCddHlt
9wcZ/ny0ImIVGxuac25udfmDzh4NWbtRhI2NuJjNpy/9QUZ7eTs41Sy8yX/C
+/P7P6hdI4n53YyFdzp0pnho/EXcvYKkh/Ii3r2+veyf3l8kSzHe3zkm3iPf
Ohq7+S+yvndaT+w7E1vWNxrhQ38R8pLJSgtm4gPbvtXKRP9FN0FJGv9YwCd0
Cv8WEX/RQPvaFU/d5rGTcL6mjfA/lHjL+7TL+nnsPPh+95D8P7TCS5D2Rnge
u6a+jZMy+IfE1wrOTzyfw6dlX+i6uv1Deu5BgRq9sziIfHhM4uc/FCd5KOY0
zOAdgxu61xzkAv0Chugv9zHs2tg0fu0oF1x+rdeQxRnFV0q8Ob+cuaBq82Nh
1s1R/DkhXe6OLxeM3jwXS74YwRv3LbEYucEFbXJa6qK9Q1gvvy0/rYgLck8U
7dm8qR8r3Dx3T1qDG6ZmDVLX2bThodV52+fHuWEmIWEu8Uk+0rjgdVJ7jhuO
SCVFH7xShBy+a151YnPD7XV8RdsMSlC9x/2yen4eaNh4KvOyVBkqzPA1e63K
AzcTfvOs/PYN3VbX3uJqxQNe24Z5Ltz9ifTlUje1vuOBy7op7iK7etFpl4MO
EoU8sNr/kkB4cS969k481LyEB8qTYxhJa/uQks2Fj7nfeSBUUplVQO9HfNH2
G+4O8ED+nb/f7EYHULOQnMluBV7YNSAoscZvBIWQN9YWBfPCt5qFDFuJaVTr
7xwbHM4LCiE9HzPNpxFjYtOCyXVe2JzLv/vJBWqO6prKe/+AFzaKKC2cH51G
oth2Q/YbXjj9yr8rEc+glHD1LemDvGAnuKznpd0cmmZz0k5M8EIRn1hn5rU5
tPVME4/aPC840Ud/bMifQ0NO18oSufnAPanihDBtHq3ZNrHjAZ0PTgU/CDJr
mEefBQosr9vwwYfmPo8da5hI9tK9bPPDfBBl5L+7/TATuS56SvKf4AOh28+U
Jy8z0ZJh1YZwLz6oNy2Zim1kIpuvV2xDrvPBk/7s6xXei+jplmN566P5YLAr
XmRnLDX/FhgrsB7wwXHZkitmBYsoMXO01f8JH7xZ/lPmP24W6r9l5eBdzAf7
5o+7kLdYyIhv1Sedcj64RcsxM37NQtdDeVXHvvHBlN+WzoEaFlrtldd9qo0P
fLG8baIYGwVa0p0d5/nAm/jWtp+6B6sqFr6oEXxgKXKlh/aEjZRQneYvbn4Q
Dv+kY4HZqFjv8qC9BD8kNBRIEAtsJCg17H5gFT9EHCy2cHegzvlrDtsfr+GH
PRdWpTCpe2Twbz1j1IgfWiU3C3Hf4KCK8YKWS2b8cFzuuv+tdxwUWXVr+0sH
ftDsyz/uyUOgQMSlznTih0Lrt/LNsgRyzfMnwZ0fVIdWlBdqEcj86dF3zQH8
EO05+3x6J4EEwvTUeaL5IdnIOoz/GoGYzCekxQN+GIi49dPoAXUPeNFaHyby
g7l9/7PudAJVHOGOXv2ciqdUOyeuiOKxhgCPc1n80Cby8/TTKgI92zW6/Usu
PwR8lv1vRRN1zho3koc+88PMFM/r+yNUfFk7Wp9U8sMT5zfSwXNUfMuK3k3W
8IOR+bx6M0kgu6Q10eub+CG8OeRVBj+JzGX+87jSzg8m/WmRk2IkMrqpaF73
mx8WMnyuZcpRfM0dpa40xA+Ld5Kvd1DntPw5nj8uE/xwf+6+a/hSEglMBbZm
z/HD0RZPrqSVFK+fHHvHYfMDV+iUsbYeiQY7j0dv5xKAsj8JM7qGJGre3+QR
IyAA+e1JshkmFP9X7zTvEBWAGK/mm/c3kShvyyd1LRkBkDrSCfMUnz/L1//j
qygAG2aZy75S/B6n96z1o5oAcF3S0JHeTqLIZ0q5AloCkBYtsbOO4v9Aleho
ax0ByNRZ6se1k0SusbyeSQYCcIU3KO0/StuJnDMfMhGANxFtP4spbX55XN0A
CcD9yRoxC0obsU/8Cd0uAD8P396z9/+/X/D92Vq5RwCCnnLHllL+5Id25Urb
CMCpY3WTL82o/I8VRx89JAAf0/e4Cm+h8m8y8Hx+TACi+sMEOzZT+e/JMJ9z
EYCArNW9jA1U/qXKGqae1PqBMqEO6l6rWB/z57qfAKyL94gR1qfyf8PX1hgk
AEe2sWNeaVP5Lz+fq3pRAK6+JjTLllH5p0xEu18RAGeTbHcrNSp/OSfP3JsC
QC/juWRNo/K/3Wz+L0YAzMXirlVKUvnz7tHY/ZDaz1PwPEeIyndmbVv3EwGo
2mbfMkzdy0Zuz3NXZQrA2PPeTYYTBNLqpscEvBGAJ2vFPBd6CcRfw79D5JMA
iAlXTbZ9J5CoV5Jz1xcBwINrw1mYQLJia8OyqwXg7DxfbkAOgTT3nijY3yoA
x8cqTO5Q/a0zwfy5rFsAEgsbDVZQc4fhnTuziwMCsCf3vMrSQAJtqynUTpoT
gB3ZPzdtoOYYCy/rnd4cAXDx/2R0cCuBDogNuwC3IPT4Jr/8qUcg571yKf3i
grBMwS6fRc1Rl2t8JFevEgT78Od8/dT3etNLYPW/NYLgJCjoopjMQffEknf9
MKbWf+3+9+4qB6Xvrb4csF0QssM2iinbctDnGs2FTycE4Yr5vm0l42zEVdvW
ZvlQEDY45DhM/2MhIW9fJiNFECIxrbGkm4UkxQVl5p4KAiPB8AkXZiGGpaHF
wxxBCDd7svdHCAuh2qji7hpBCAmT8vo+uYgu1po98eUTAu3S+WM9hUwU6d2O
t4oIgfVO+0+C95goStyvU1ZaCOJsutoz3Zgo2TJFrkBNCCI3HaR5yjJRUS3r
GvdGIbBCp/6bPLmAiNrXp+/5CUF+w+ecvpk5pPrDMXHbOSGYfi9xV7+Uuh8a
5aqZF4VAReFMjuS9OXSz5cLyI7eFoJ1Tuxi5Zg7Rfu/tXZohBFMf7zzxc5tF
RjMTB993CsHn3PzPxuXTyFdG16x1hzCkWT/8fTZgFA0czFJUVV0C0vYTE1H+
P9GzQ39KHTSXAP1j12HFS03I7bDF6cRVS6h+Mu5ENxrRqP1oMc14Ceza9qz7
bNIPNH1Uy0XGagmcTeUrZ174hkjnlCyhy0vgQTnn+NPeD0jGN8psbmAJJB7o
M4yHL7jJt2tcf3wJ3J5qbFltUI7j/HTifGeXwBa/jSuOLK3EtLPVwxN/l4D7
6pMLh/m+YdVAgahhBREIr07snjr+A68KvdjatUsExlw+fnFb0oa3XPf2qnot
AhtEf3Ht/9OHlXK6D0bligAgr40NIf14vsNq64GPIhCtqs3Vye7Hz/TWKvyu
EoEB5kh3xPwAFm1ZLFnsE4HR352PmvuGcPOycNnlSqIQkB6cofp8DGfvm/07
zhCFpp5FKY7KOL5+3nkkZ7kofLTsBMP743hjzfZi03WiIPTlqXdhyARO9V/i
ZmclCmdjb3iXb5vCnl/uf7waKQpY6ylpaT+Dt03wPdtzRxTIGKWw+OgZrKoQ
GCMVKwqDcxZWl8pmcL3HoZPJaaIwXduqTFs9i42kVSTeF4mCcMe5L0fZs5jL
8ZlT/6woiJc8s9h0YR633VTYm8kWBRHXxUc5L+dxTu51Y18uMdB+Mu6Q0zaP
Twp5ipJiYqDZflhvt+ECrs7Wy5NZKQZ3De/VFvct4Ad/84XNjovB9cXIu32r
FrHo8nLvByfFYFvX2sQJy0V8Zd+PxiFPMbDcObQ24swiPpM6knz7nBjEvXi4
1zJ/EVtuVTJovisGjl8ObbE2ZeFyD62HKx6Jwf6z6Q1Pj1Hz8n0DMjhFDA5X
3vjv4kUWXtW/u0LtpRgsOU+PKy1iYYHIEHv3MjGYv6vRELyWjS9kXcMfq8Vg
8FBS9NQ+Np5vvq8p/kMMEip2tA14snHv8leTOV1iYO471n8gnY3x187LJFMM
3jlXG+gKc7DR7PCQ5R8xKPnGFZeqzsFZSgsWabzioJze7hWznoOTPMUUzCXF
QSjz3ePBUxx8Tsz0ZfRKcUgr3hp/opiDp9btluzVEwcfCzmVnAYOdj1mF2Bo
JA5mqczUC4McfCDbG7VtFQfNlgW1cFECf2sJfqq9Sxx0lHWO5qsSeCvXNeGL
+8ShM/E/Vbc1BNa3ftyo4SAOn18m1unZULx+/qVJgJM4ZLLs5Hc4EZiR/iG5
0k0c3uxsjv7pR2DxubpTpwPEwXRketAumsBXlTu/F4eIQy6vlv6uZAKTZsP6
UpfF4eID22tvMwk8GstFvo8Sh8PjHpZ9Xwjs+EnUUegBtf/22S2v6gjcOkCr
sE8Uh8Ga4m2j7QSuMNKP+ZchDhEZq1PKpgi8+fjmBessccgJ1Lx9gk3g3Gu7
7J/mikPYMYFCXx4Sp7c6au76LA6Pm1ctnZAmsSK3943ESnG4HyYleliJxDEr
gycnasShR2p1jIk6iQVtIvdDE2X/2vI7t5ZT/B58L/9euzjYDbn1Wa8m8UJ6
isrAb3FgdSkE3jKg+PZb5mXjIWq/pZK2iTGJ++fyhm5MiEN1s9zYwY0kPkL/
YtE5Jw624Js2akriUa+Z2fccqt4jZpdWUTx+DqvFR3NLQN0Pp6SybZR/KUvk
LiQBVxpujORTPB/nFDqwVUICdtpvPSJI8f+y3MxbdHkJ4MnpHcmmdC5/mz6T
LgEXVkbdzaG02UHB1rqlEiCmu85GgtINz9ddfLFKAiZ2P9CroOw5cpw1I/Ql
YLfMev0Wyt/0nnvVDiYSIMwMctpKxXMpucTXCEmAGRHQIIhILD41KS9pLgE+
nktjl1P5JIPKpxELCTh0YlNxmhGJde7tcf6yXwJy0U7PQH0Sf+w7L5xsLwGx
avEF/2mTePe659mBjhIQJrvnm94yErdFNttauUlAkLtZhawqid1a+ciVPhJw
+7Ne0wF5Ei+uXJvOGygBkUuvakyLkTgyxHFnV6gEGExd7B3kI7FcTfRkXoQE
JBep7FpPEPipanFszE0JMF6mFT00TeDSz0o9Zo8k4IGVTfYhql+sZXZdU3ks
AX9WVorRawn82yVo9eJ/ElD4ZduBTZ8J/Few6XzmOwmA9xrfYv8j8J3DPIwr
hRLA+pyfXBNHYPrLNRVHP0uA3xac5HKNwBss70hL1UnAy7njd7JcCfz18cf8
0Z9U/fjaTJ1sCXxoZuRYWacEcDpDkgLMCBwQa/4yaFQCmJsD+D6pUOsT/9Sn
eCQh8rbtRHs1BzPkFRaOCEjCZVdfi0e5HDxkqltVJSwJtWeaBAqSOTgwxsE7
XVISXG5mvdDy5uDYtQWFtqqSsCGx3LBUkIMdHOrvlKpLwvMDor0vxtl46dWh
E3rLJMH53f5L7Ho2zmmWExTWkYQeCV6FxodsXH/+zP6i9ZIQprTm0GVVNhYt
0R7XsJWEpoEeYz9JFu6Nt666dEgScrd5NP0cX8QfzgY97TwiCSuu+mi/q1rE
Tsu/OMQ5SUKnqObmjovUepR9jbCvJLh2jnGz+pnY6eiNrOmbkrBm3lNTK34B
mxhn39wbJQmPpgxvhXotYDGpn66ZdyXh0rH93w5vWcD5ZQw1l0eSIGHtVPJq
aB6L6eRHt/wnCbv9J7zrdedxPmfQt7hEEraJT9QwM2ZxVJPoXuUySTA1L3db
FzCLnbMMVp6rlATWk6sZIltnsbjTxR79Wkk48kr1UUT7DHb+KmfzX4ckjL67
H/RZYAaLP9q29jaTqke0CCYSJvHJdekLh3WkICi83dtq/RC+GSUncUFPCgbm
R9+/rBjEWUPXV6QaSEHEbYnRuP2DmBnvc2TQRArcL9XNLzs9gK//3fT5zHYp
+Lz3scDJR304s7Ll9q1jUiBVdnNJaXE3njwspvkpRgosOnsKqIxw0MVzNowF
KbDHHe7Wr2rQivFQ0Wssyv59jffBlXWo9XB4xQQhBa5F+grM6Xpksu7mho88
0nA459HljUsaEWssUcNOUhp2l845njZuQcGH8ewtbWmYrx5xUw/qRhcNBe4v
OkrDoQVbeZO3Q0g3fcneYyel4bTU/c0XdYbRLwkJwXI3aXAxKIoxyRhGaEwh
5J6PNIR9Dnr2N2EEcaWvdF59QRr+evAVRISMocsSe9c6P5IGxupdBvKqU+jq
6P3G2lppONsQu+HZ2Cy60jJQTfyQhoQCUd1XSnPoSplx6Yqf0pChIldjvWsO
XU7peHO5QxqI1lGnc//NoYs2S6OMhqWhhh34WvHwPAoszNmZwi0DyxyfmY28
WkABGXzwjU8GdBuf/Lv0cwH5x9oZswRl4C4Z9OT5nwV0xpuzzEZcBjyftAW/
smAiH42tvALKMmAsqV7jNsBEbjd/fPIylIHoGLcr4hTfnwpa+j7BWAYKw4Zz
3TVYyNUl4FXlBhnotMJr95ixkIupYqL6FhkInM28lhLBQo6zJ8793CsD3pff
/PX/y0InunN8eKxlYMDEU3BGmY1OfOc7pXdABhojd/hPmrDRsWfPbW/YU89/
XWPo6cdG9vbTBptPycB1UdNJh042Orxj6yoPDxko7VJ63kTx/iHDWPWHXjKQ
6OYV8lWcg+zETSRnzsrAuxfZ51cgDtpfemniaZgMSD4ryc2K5yCb7B/9PyJk
wGHupBBPNqWTlnb+jZQBsemKutovHGQVWFl96I4MJMt20xrHOMhilcRz0QQZ
MDd98SVkHYEOV/k8X5ksA0HOR3dtNKd427X+uXmqDJRI+aUF2hEoLP3ui7Bn
MkCruhtzPIBAd2D2RfILGXAub7greoVACb9sMgtfyYC26K/1hvcIlKsk+3I+
RwZunwn0nn1FoM/5/i+l8mRAdqX7+esFBKq1+/lSt0AGJL7NLX9UTqDhe3Gv
3LAM9DtGXV/aSaCFNYuvrpbKQG+dQ03KIIF46g6+Ti+XAcXVWzvuTROILqKY
1fmNstc/db+fh0QrX5zPYtfKAP3N9MAWEYp/d7RnyTfIwOq/wfsUZEhkNrAh
e+1PGXgg+yjTRYlEVhGJ2VatMhAc19+4Up1ER9XJbK8OGfDVu5vpupxEHtjh
zc1fMuBh4CypvJpEQUc/vcnokQEznfcj5gb//3u7ytuyfhnIdQ9SGTUi0d34
i297hmTgq++aB3wbSZRi3P3276gM1Hn92RRnSqKXP1GO8qQMZN+/x/uY4uv8
s6k5JjMy8NlnY7vqNhKVS3G/s52XATn9jlw5iv8bsh3fnVmUAZW+8RsRFL93
7y19F82RgebECBs3iu/HxzRyX/2RgYPJu5eUUZp9IyL3K5cs1HhczY6jtMCK
/txBXlnoqZcw+03tl6nY9p5XUBYSeo5WpVL2GS7/vWcskYW4vpDtrZT/1TwC
eZvFZOGTofiXyK0k2pDqmmcvKQvODGuLV4hEO0wr84JkZKHxOW1q5yYSHehc
/iFWXhZ2bqv/6GBCIsfg6x/eKsrC8TvB5UNrSeRNG/lQS5eF2cE36qO6JArJ
25U/piYLvjJPhp1Xkuj6gcx8oaWykILl19kuJdGD2SUFy7RkoY/rlGYxnUTp
MZ4FW1fKAldlRHOKHImKvusUhurJwhbjSokqfhJ99bhTGG8gC8tt3/RJ/iFQ
s9BkYd46WTjlOSLTMEeg6W3ZH6c3ykLMY1lU3E2gP70SRWKI8v9kf+JIE4GW
hPsWrdoqC5z7wfJRXyne/6T/yWWnLETKGu80e0sg/SP3PoXvkYWcK5H+B54S
yJQ9+ynFUhb2n9J72R1HoEPrcotbD8hC+NNJ05PB1Pfw2qjEwlEWPLvRZ8ON
BNI6scLxtYssHBj88/zpCgIVSyvxiLvJwh61wRfn5aj4gv6Y1XnLgmXGXPaB
CQ46sLWs0jpUFnzaXRI6HnDQxPx7t5xLssC8Hs8VfpGDIjMyhGUiZGFf07Hd
0a4clC96a0/TDVkgOzdkDRtyEL3Fus7uoSyY5H85n1LNRu9vmPl+SKDq9/VY
RkIWG1luWidFS5GFdP999nz32Cgsjba/7aksaBHp3RoH2ajfs7v5SI4s0Gqt
hB+3s9ArLq9fJ2pkweHmrN3aykW0/d2xS5/rZSFs6vOOI+mL6NdJK4ZGkywk
yhKeZOgikvy21qmvXRaK3TY+e71mEfk/4AycHJaFMtq/8b67TLRx1fUJD145
EEwuT3fftICq9z8h/dfLwatzPlaFJrMo52pve+ImOYjM39hhJzSLEj6oF5Qi
OejZ8qUpvmUGeSinBkiay8HXOclf8gEzSLgvafKljRzwx4Ke0KtptPNM3O9e
Tzm4I9r3fqfcJCqPuVFmlSIHvSzWhsmlQ6ikxue2Dq88NBbHwCblemQoCyIP
BeTBYNnTM6qKtei5veRN7iXyoOb3o0qW+Iaih95ca5akNDkqqfmpEh3jnr0c
pioPYkaVafsCixFp6H++ab08vK0Ni2o7eQevTzrnGuorD63ZzuYw/gO/6t05
MHhWHtx/Zq/sZjdgxkpFF+sgeUhtb7WVEGzCQnkFjloXqfXr6twijGbcWsdx
qL8lD4m31W6V7WnHgbwX9mtmyINvtfuK81t7cI5HOHzvkocSkx0++1aNYEOn
E1VaPdTzKn5rdNJHcN5hZBXeLw8p/cPfzimO4oKdf44bjckDOzdC8aDAGC7R
On8plSUP1lE+F7pbx3FNr2+xv4wCXCzaoHRWbxpbtu8zr5NXAJdXPt/MXadx
/Q/d2pVKCgDG0tuKk6ZxU8l41y+GAnRWR5bdF5rB7Sluf3bqKsCbvA6+/I4Z
PGx/YpPKLgVYoyeT3e89hz1sUFmQhQLYBgVOuz+ew+O7VC0a9ilAdZBhW1jd
HJ4y6TxyzU4BKlIuuh+n5jem/KGQGWcFWOpYd7t0cB7zNu4rLL+oAElm9/22
bGHiK9W6WxmXFWA8uWL4lAcTC5SKVQdfVYDa7P9sJO8z8ZK339r0biuAmNUz
775eJpaM3sGOj1eA2G0vAoNDF7HqHmTinasAW+vsMnLiWHjys+efqA8K8N8j
a1/H9yyMTR6VZhcqQPLiwUMPG1n4hNaMxUyJAkx9zDSJE2fjdO4njv41CnCI
MZ9ef5GNz5yr03pQrwAv3n8qeh7PxmZTxNj7RgWQrqt+xJvLxv2dBwIX2xRg
Qe5IHBpi4+X5AreCBxWgbhl92ZcdHMzSXWuVOKIAbF9a8ZNjHFz133G5onEF
+NP02pY3gIM97uc//jOrAKzte2o2p3LwK2+P3LB/CjBs2xYeO83BoQNx59N4
aHD8y0yaIy+B9zp8MS3lp8HRzDcJmXIEntxF/8orSoN/dm05WSYEXrOstiuS
RgPtdh7bwHME5kripGco06B+Ses/GsUrP6SXu1Wp0qDccPav4QMCn+EKmxVe
RoMYO5/hlmwCmwW9+rBqBQ3Ehy5bHSsisOxka+gebRpkqSGho1UEft+hL3hH
nwZu9jEXS38RONLm2PfXhjQY042tWzFCYLuvN+/WGtPAyY3xQGCOwMvhg93U
BhoUnJ9OOUISmJXXpyxpSoNnpQ54OT+Jq1ZL9qzZQgMNnyPfPCi+i3+66Zn1
NhpM7wpP0JQj8YZ7D9bc302Dbpd3E4QGiZcIly6820uDn4LCuoorSdxxabKw
yYoGvKOKma90SfyKqRS2sJ8G26+mmOetJXGo147t8gdpMNE4M7rOhMQW/WeX
GNvTwOGrVLj2JhKrHEmtO3iUBi8/PV6Io/h28sf32HMnaHDy+2/jcxT/Fu9k
H453psEpreL1dRQfR+FlaoWuNGi0K59KpPj5uJFNf7s7DbhCVlj/2kHiNa8v
viBO0yDVq/ggdT9jLs2X3nRfqv79PFzU/Y1/JLSs3XyWBsci5HedonS6FB/7
aCD1/jqLDcOo/Weurym+eJ4GOV6uleKUfbN/DhGPQ2lAu0IXkqH8p95UGuEN
o0FoUw3daguJSblWS7cIGiz/6Z42upnEh9Me5H6PpMG9v8EveteTOE9nv5L+
TRq4pBtYmKwjsXS+ZNiDOzSQcXV7OqZHYh+z2gF2DNVPz+PrSaqe32tv7TkW
SwPWj+FZz6UkXmG/623pQxoo3aXrr6eT+MqAgMLyRBpocT3OdZElcY9vWeit
FBr4fAjNnBQhsSkZ3juVRgP2V2ezFh4SJ1xDOw/8R4OQ1+nvVNkEZkr/eZ3/
nAa2YsvXlk8SeH9KoYzKKxp0XA/9U91HYNH367oHcqj+WGw+s/CNwG4wt213
Hg0UgslnSpjA5d/eZGYV0CBJXd8k9S2BL/ZqBwaV0ODi4Vsva2IJ3O410tHx
hQaO8VfWBl4lsDH72RaopMHmJ2tcwgIIPC2hISZcS4MImRCDj/sJbJHYfcbr
Bw1sMl3ujW8h8Aut5NYfTTRQFr+vFq5HYKfNtKcJHTQ45L7S66cQgZs8xDfq
jFD1Vj23y5ji8zXMb6kx4zToZ/L6RFF8fif8hsDCFA0OpoadtYjkYPNHfA2f
mNT7r2Ct/WfLwfnlHLd9fIrQ6EWK7ptkY1nr/Np3gorwOHTx1ngDG/t1BhjS
RBQhYXle0EIeG6+am/73W0oRhgJP0i0usHESYyjujJoiOGkCnxovG7NePiWb
NRRBQSNm46o+FrY1dnLaqKUIwyZSZs9KWVjcsms132pFkI7Wypm7xMJhIY1l
DzYowmWbgH3suUXs0oxn820VYfOLF5+dS6nztKf6Qd8hKj73qqaYJCb+OPbT
RNxBEcIy/960CGRiae7xi85OivD3nkXvmRVMjLVpIuI+iuCqZVsac20BK4X7
LnW+rghv7DdfLNOfxz+01Q+IfVQEnizpMslNMzjUSGfRuFgR1L+K+2cJz+AV
W4wTnD4rQqdHTT6zeRpftNv7+0OlIkxmWRE3faexTvj5005NirBphZnRJzSF
rzf/uPJhQhH4dmdtM/g9hk3DL793ZCjBniWX+z4W9ePFTUmOoUuV4Nar3+Z8
u/rxG9Z7sYdaSnB6ecjkaFMfXuo7cvK7jhLIBqR9TRzrxULHreSN1ytB1M5K
i6+yPbhxk2qQqI0SZNE3Rd56047dWAUmHyKU4P7Pe6eDaivwPZ+Zj6JDSiDl
0JnlfLURtaAkIc9RJbjrLZv5KKoJ0SV32H6dUIIV35Hg4Yc/UcabpMmr80rQ
snjrjEtGCyqa2aH+j1sZ8s+T53k+d6DBsymRM3RluNEtkvN0tAdtOLfHutlG
Gf7krB5f+noEXdrJTDa0UwbbrQqdw5qjqIyWNnrvsDLkGS6GKCaNon0FzIh9
J5Shx/Ow6bvrY8iFk5ZX5UXZNw7IvmQ/gaJCWcofryvD0D2zW2o+06g37L/B
x8XKwLPaJCIlcw4F1if7ln1WBgXrdwcSWubQEkYcZ7hMGSpzDq005JtHBjhS
3OCbMije5vcydZhHEX9OGZW1KMMrjQb8QHABaQavihyeVobwK4Yq8buZKP+r
hqTYvDIcJXq1pf2YyEJROUF/URnaBzxP0R8ykX++SFbwH2qdWRXU08NE5czx
n6JL6NDZqsJRPLOIXM9mL9NfSod6bt/nL0NZiFOakW2rRQdLZaVt/YksFCWd
uj54JR1m9QsOPSlkoby3MXu/6NGhd6Y1OofJQoLTfgG2m+gwtG+zHr87GyUh
j3/nER2Mz7WEOF5hozXRTjdSttKhgm93OXpM8bfu/uShnXRwfu9pGtbIRs9P
G5aft6WDaGDZbx4jDtpUpLMv5RAdgp9YKTnu5aB6kWVtpUeo5+8p+2524SB2
ptyEiBMdtg8fzfaO4aDdI0zZFG86PLRzLc3o5aBfJlMppX504Lu7WXpsgYPO
XB9aMeRPh5st/KYvhCieXt66aU0IHfpySwpidQg0drLApfQaHZb4tZWpehNI
tHpr9KpbdLguYOjidZFAOrrfC+5F0aHGJ8SfHkWg08xf4s4P6BCh7HAp4SWB
btu7rf/2iA72q2pq3Sj+flU847w2iQ5zkb9M4ioINB7JV8D7hA73RJ7qilG8
JDp2p8/zGR0yw47q2I1S9vcpiDe9oMNrufIVf+YJZPEu1WTTazrMDAgNcv+j
/Cmscn76hrL/hG+VixCJboe8uyOaS4fuoa3FS6VI9Kp7U77/Bzqc9/vrA4ok
+m5W0dtZSOW3c6lkIYPi2Yx9YtuL6VDesO9sDMXfoqJtxq8/08H320+/LxR/
6/g6OcmV00F39cchG4ovLZrGbl+oooMc98dcU4o/T5sEfBj4RgcjJfOiSIpP
byf97dlbR4ezHyMGVgHln+u6aF4DHZ4st1HWNqP8u0gZqzbTYS19h8W17SSa
qEpwjGyjwy6jNx6I4mXx1Zq3JzvpoLX1/un9FE/r3n2dZ/ebDisDsvZ8obTl
glFPcR8dhO+d44+mtPfhEpHlQ3RIWWQk5lH7oz7tMooepcNUfLTUhv//v4B6
44nFCTpUDbj4KVK8XXvV4dbxGTo8i2JXHNhCosmRgfeV83QQ2nFMY3wz5d/S
57ceiw6bnI887F5P+c9hLXlE0OGOq+9mvXWUf/nL67j+0WEwuFGvQ4/yHyxy
wo1HBYYafO/0UXwd9Sv2Zj2/CrgzR87tpPg6a6vqexNhFbjFjqUtofh6con+
EmFJFVh6wp7xVITy51No6CejAn6ej4dCeSh/jWbH2+RV4NMFd/V3LAJ5J9rl
vlCh7BmdbTTpI1DUv+5fUuoqsHXyYNX1FgJlObsLB2uqwHNSaKXxNwJNaYce
262tAvxJPvvevCGQZAz/jRxdFQg4q5Adkk6gNfNR75QMVEDw7emsZ/cJ5FuU
JjRmogLQKD5M9ydQDEN77f5NKrD9mHObmzOB3lzJPfoRqYB4oG+rnA3FzxaV
ObfMVcAyMuBB7GrK/lurrrldKvBl6c7lp5Qo+3Ltgg57VeBUdYR3kgBlv2vc
QeeACtiIGI2v6eKgaS9pwRpHFZhwFpaViOCg49Yj3oSLCtyT+EqmnuagWsOS
5pVuKmAiLa332paDXhFezyK9VWB5boCZkRYHud34uh1CVIDv8uIV2mc2ajmd
+tr7ogrU+fRx3XzGRuZWQXLJ4SpgqlDw5vwtNtJUWDbAvqYCb9OCG37uZ6Pf
T8OuvItVAYtIVBDzi4X2XT843vNQBYQCDx7lLWGhYk/dA5KJKnC0vOMLK5WF
kgw6l3qlqcAUbdLS25GFDpUYf9HKUoGdVzqWxXUuorqOSe6EShWYWbuPz6eI
iUxxuXtVtQqI2D0qcohjolfpST+YNSpgaDawotWHiW66707b36QCty94aoeo
M5H54n8g1qMCnA/qedcuLaBi6aOXwjgqgA8qsHyXz6OsXd9I19WqQEP5HWk6
M0j71xuvq2tU4ewtUYthzjR6fibu15O1qnBtkU+rs2oapSc6lvxerwrb0uiD
dc7T6MHEYoS9uSoIv3mly68zhULvaopYHleFrb9idftax9DutguK6+6qwuVz
ngI7f/SjQbc1RrwLqtB/pn6jS0cFmpLK2HGSpQofI5cWpJSUIVahyuFKQhU4
UY/9nf4rRcJiIqG3eNTARsEDe3YUIZ23A59lJNXgrScJwWMZ6Cw7Ya+mthp8
zUkMcOt8j7lu8p/c7qgGWy/d+5i1qRkLrw0NzHBRg4vHhuW+b2/B0p2z14Td
1KC0+cBWF8tWvFT3d2aNtxrA3RHPiaPt2LyhcNo2VA1KNlavKQ74he8o+Ya6
PlSDydN2Fx5v6cNKL9vvX6tRgxPvQmtHmKP4TGNKb3a9GigIdnC/PjmGvxJO
+q2NaiBiw/d0qHEMn7MYq13RrgYN9vfTCrPGccsEIVw9SMXXZiyXdHQS734k
DgJcDCjqjvXfXDeNA1/5nkrgZkCzUGJzJ/cMTi9piNLlZUCgU6vfcsMZzBmO
67ITYED2SK9H4cMZ/GK9WkiGKAOOjOm5FtnPYqEOvbydigxYWDew7hjF44ZT
d7s6lRhw+GmeHyLn8AneeT4/OgNCrp4T/7RiHudr5++PV2MA+GQu3Aibx6dC
YWZkGQP2vbV+b6O9gCtUrHVuGTDgB5/v2eHTTDyr/26/miEDUhpmdXUoPlc1
lwt5t44BDvFDTv/ymTjAu+1rhwkD3gdqb7PmXcSa2PGUDmLAr6LI1qh7izji
xJn0mj0MuLpKW7E1gYXn/9ITIvYyYCJsp5lVEQu7JlfeXb+PAeePT6YZd7Hw
7nZ6+H82VP4r8/9YqbCx9IHK4xcOMyC/smE6Po6Nr8z6HVx7hAF+BW/dg96x
MTOGvm/EgQHVzXa+xXVs3FbjZ2p7ggEnXu2JjRTg4NQddJXVpxjgLxTNnDjN
wdKDFbJ9blR+StZXBa5y8JUrfqLxHgzgQstbIpI4+NTnCoLPmwGc4ZS0zK8c
3Hrcb67QhwFJH2el9ndz8O6/ymO+fgxQ2l5ueGyeg3U3+rV3+jNAxanyeQKd
wKltyg33AhnA0PcR/0bxhfS5iq87zzEgL+bWPoetFB/lKhfkhlDvI0rw/eOT
BP6kW/Hw9mUGnGtbJfn4KYF1a3yjt15hwMbjqzZ+y6HseSpfY11lwPeiyq22
JQS+8tw30OUGA2KvRGWFt1H2zJW9lW4x4K+Jw6WlAxRPDZSfrL/NAOV8GQGN
aYp/NJRtN8UwQOxntLEhH8W7JeUWs3cZQONuOb2D4vE1x323Pb/PANYXCa88
isfT/yhtOvaAAZjVIRCuQmKZpPK1sg8Z8LnxsWiGJsWHG3y1qx8x4OXE5QMr
tEnMbFVaGpbAADcTv3w+fRK7BZUrGSUx4F+XsvwmIxK3y/lKjycz4IIwx7J2
A8XnuUpL0h8zIDl+186PplQ8NuXch9IYEPpJYoyH4vE1Mz5ssScMkAhR1PyP
4uG0aKWZL08ZEK1G9qVRvCytWz58/hkDPsTLqbEpnr7ynbpfnzOg9dPtmkyK
t5keSq0DLxhQe9Z6LI/SbsLldYkvGfClln5OhdLtGT6V1q+p703cL+gXZc/C
XAkLZjMg6nb8NJvyV9xflvfpDQOWR2VO+vw/ngifrLM5DMgRCA8DRNVHXenZ
ylyqvqg033MjiWVLypK73zOA173j9QyVb+QxnwcPPlD9q8wd3EDVY5FUvLOn
gOr/At2N4joknp7bc4NdyICggIWAsmUkHh69cDWjiNqv197doUrxdk92uG0x
A85+anl8QIGKt7XnAm8JA3bru/3WlSBxY51M8NvPDLjUH1HnIUDxfMX2wONf
GKAflJoi9IfAxbkvvD9WMGA6RDXXY5jAH152eLhXMWDevtFbr4vAb9LFTilU
M4DptHrW7geB02L8jp+tYUDdbIpj3QeC4vknR9TrGJAx8LmLkUngexd/Hqyr
Z8BkZvLW5kSq/06vt9JuYsBN1nlR7wsEvuDsadH2kwFv1URUrL0IHGifvPNa
CwM+Rp3xincg8Kmd3Fv62hnQMRi0+8h6Au/W/Kqf2EN9HyN29OwxDjZTJlbv
6mPAPb4nGyqbOXiT9OpVi/0MeH1Ta3THZw5ezXVXY/8wA9buPzBwJZaDJTsP
yYhMMaDb94ojsZaDhRtvShRMU/l9tBF0VeJgnuoikVOzDLAW3HRyMxcHz31g
8H1ZYABhSCYYVrNx8/3h+WCSAXMJ9V22B9m47qbSzIq/DJDr2KJivJ6Nq8It
Jpr/MeDPzcMiN5XYuMDnzYABrzoULExlXutg4aQ955pHhdWhr67txYIdCz/Y
mtnwSEQdsjpuc4IMWThqfWetuZg6rEJKBX5SLHxpOVSmS6qD/ckN8bVfF7ET
r1C+vYI67Nb0Md1muIhXfHwYX62pDhsnRgI7phdwlZ9v7hEtdWB3GRfQvi5g
txW76saXU8+fVOcfS13ALx5w+CS01SHPqq/eet8CXuV71He/vjr4nlHZY5ox
j7WXLd3RuVkdFiNNOnZtm8O60VnzE3bqcDZ+81bz9dO4dvs1iUuH1OHmBy+d
Kv5p7E0eXyVprw5bGr1amE+mcLa71AmDo1Q+W0uq5hom8Zpt/t8CndXhb8FU
y8DKCWzAXp/+z0cdgHeyLPDTCF7nXL5P6oY67Hd2ilt7sxfTnw5uKLupDnXf
ibo44V7MMyCoFXRbHY6Np43evd6Da113k53R6sDleMrtyNXf2NWj7vnzOHVQ
WXZWXHmhEz/ya+OGp+qQnSvfI/yqCXMuTbzzxuog8DBI+7ZLFi5JkqN9X1AH
v7I9tw80dCHL5C51p0V1OBNVduBnxS/UkfyfNotFxfPCadvHwm7ETFmHNEl1
iC9r+WBd/xutTrN1DeXRgNbS2TK9nF6U8N+DXB0JDZgnLS++cx5E/lly1ndW
aECDt86Xcq8JxJPdZb90lQZYfQnNbW2bQNHZ/7kUaGtAs9zeANvtkyjzzbpz
A7oaIPjeaCFCaQr15Ng+3rxOA7bb7TX7dGwaWX54MDGxRQMc7NJu8szOoBUl
cjctj2jAWOvSf38a5tEmxZOPOh00ICqIbtVLziPrM7nPPI5pwG7UrumotYCC
Nfd/iXTUgNxKwkT73AL6fj2GLD6lAcOGBrEd8kzkZy3io+evAbt23OgVhEUU
mWl/4VOABpwYqH+/wXkRJfBm3toTpAGh2zafIa8uorL3O5+fCtYAv3g3oVXV
i0heKbLncZgGVNeb1yvvZaHCXq4Dknc04GXrR6OGTWxUu9HKKSVKA9QO2iW/
OMRGfbGPfXViNOBarY+/gD8bie4wvbPzvgZE/zM8afmCjY6/DKkIi9cAItzW
U1icg/z5vjWJJ2oAW1ryxN9lHHT9qFJfUpIGGC473e+/mYNyJAr+5T/WgJi2
/1Vkp+FUp1EAwCNt2iQaJUbveyspZKQxwjkVo7Tdpq6ocXOZSusYSU8jSp7M
VNYkaZWkJFdTkXsVGcq+pA0lZEkSV5a7/P+u+c/H8+F93nPec86H3/NeqWvb
owKtgCHbvptcfpKUK0X5KjCodHY5dougdk+wufSlCsznxQsmpxHcXtmmZfFJ
BW511v4L7hKUlsbqRU9iYI9V2PFHGQQvbp55IciYgWOna6OcMwka1DxUtlky
cNv+j3TRfYLNhY3jzTcy8Dj+qaT3AcFzE4P1J4oYeNEztSQ4i2Blt1veb34M
qJLEbYk5BI0TBXmnIhmYqhr+Nl9KMG1p5N+bLzHA27ROIzuXYF/u/NeJtxlY
N6bbqDaPYHKYUH62gLuvM4wNfUpwuWdgvGMVA5oVhu+s/iW4TZbVu6aBAc/M
B5KWQoINPWEF0nYGcs6uuRD7jKC7d2XpaRkDuoGtgcuLCV43Hleeq2Jgv0eQ
oK+E4HgTyzPrtFggJum6GysIZrvJ/zirz8LR0Sv7RlURfHxy7VJnIxbedjRU
36sm2DGbHdjCY+GHMn+x1wuCI7cKT5aZcb7O0I7UeUkwfLes8PJiFjpikvc+
fcW9x0KvqCrOp8sD7Fz93hD0ZUOLt9uxcHlLralJHcF/3rgJ+I4sDNntGVdT
T/Ckjf+cJM6/fGPNjmPvCOqcUxls4HycrnGxyLKRYGld2iJPzs9j261uNH0g
eORuJb+M87VXSWlodDPBrMcuwf//d0vTRV7wkaBpV2RGARfrRysde1u5efa+
07yGi/38Y42utRP8+eaymTbc+TLBAnb9J4IQGOAZzPmf91NBg7qT61+O4SPe
ShaOzfaQiLsIav0UYb0QWWgYkSUIuwke3v6wNcaehSWtfwdO6SHYUqP/XmDL
efu5iSCvl6C3smjJn9YsfE7LsT7QRzAkzHeC2pwFp0i+rnE/wQyp7ZGW+Sxc
9euUVQ4QlNSrU3lzWFBsOl4dPEQw00lPUjyThU0/GojNFQTjxaL6smmc32fd
i2hUEhwyE9pYTGBhvNplbyRDUG/hFHXfCAPeLU2rHYYJlu/U9J0xxMCTosOm
X9UET/zjln7pCwP+Z261r9WkWCF1vFf6ioGKA1DEjqb4RDu737+Egfm/vE2+
O4binLSNeiG5DLw3GOc1aQLFU3EB3+VeY8AldWdD+VSKpvKx0+u9GEg+pc4J
mkZxn32c3sUNDLD7zicsnE7xwArDG/kODNy3fr75zAyKxe8maNgZMDC7YG61
qxHFvfM8suXPVBCY8iRDZUzRuzBwuDNTBS/+EkTcMaFo6XNcuCJRBeHrT67W
5lEcPOx7yJLbb9m7tsJSM4r9NQ2tGmNU8C2EFvy6iMv/kXjdtG4lDMzxzus1
pxilI3NMqlWCYldTjr4VxXP6sfcdryph1EB9huhHisIQd6cISyXoTKpOUK6k
OPnVG2i3U4Bu5uT4CGeK04nNOfNZCtD7Ze3Z710oqh/KA9QKORhcKI1wdqVY
11X1u32WHEx4RaGxfIqC3z6+XWYqh8X2kr0LPCmmx5XbtikG4Ycmue9jIcVd
Qbxt414MwpITS3du8KJok9rhmXd7EGxLHngd8qEY9NZ97he3QcDNYkHBborR
9lv03MQDwN93AzwCKV7v8asxc+2H3y9HTj8VTdH+86Jh9TIZVGjwel1jKWZU
Pxl20JSB2S5p2aQ4ivktfFwS0wttVp9CY85TzN69vlZ4swfci1GWcIViTkRq
8Zfn3bDiW39FajrFnvOyb36fO2HGqq3hRcUUb4wkxrkXNMPBDJkovJSiyKY+
pcmuGWp0/3JYVU7RMGTHgJZvE5xpfDBQXkVxcYtrD9+1EUYdnOzz8jVFEPsV
JY+th64rT+FjK0WfZou0QZ8acBm9xTClnaKFq1U471IVpPh+HdrxiaKTPT8r
aX8FbLeeJf7cRTFmvPWbBJ0SeFVycHZfH8UPQdk7Bq/lgZWFtuJ+P9f/3auE
px2kEBWX9DJgkOKhjjWrghuyYLWw8rRCQdFIaJdaO/cOpBb67JSqKA77OnlY
eV4HrQWq5UdZirWilqurTWNBFBVj5Kjm6rX4ItkaZZef1z9POTJCcb3JnTYJ
G5v/H3QdsYI=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
/93ZIcKvzXl6o6Qy0v8AusTjlg==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 9.999999795918367}, {-1.767765045208126, 
      1.7677660366377899`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FractionBox[
        RowBox[{"5", " ", 
          RowBox[{"sin", "(", 
            RowBox[{"2", " ", 
              SqrtBox["2"], " ", "t"}], ")"}]}], 
        RowBox[{"2", " ", 
          SqrtBox["2"]}]], 
       RowBox[{"5", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
            RowBox[{"-", "2"}], " ", 
            SqrtBox["2"], " ", "t"}]], " ", "t"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6382687323777723`*^9, 3.63826876357963*^9, {3.63826879852501*^9, 
   3.638268863483479*^9}, 3.63826945514015*^9}]
}, Open  ]],

Cell[TextData[{
 "In the free damped situation, the system is said to be ",
 StyleBox["overdamped",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ", ",
 StyleBox["critically damped",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ", or ",
 StyleBox["underdamped",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " in the following cases using the damped motion equation (2):\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["d", "2"], "x"}], 
      SuperscriptBox["dt", "2"]], "+", 
     RowBox[{"2", "\[Lambda]", 
      FractionBox["dx", "dt"]}], "+", 
     RowBox[{
      SuperscriptBox["\[Omega]", "2"], "x"}]}], "=", "0"}], TraditionalForm]],
  
  FontSize->36],
 "\n",
 StyleBox["Case 1 (overdamped): ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Lambda]", "2"], "-", 
     SuperscriptBox["\[Omega]", "2"]}], ">", "0"}], TraditionalForm]],
  FontWeight->"Bold"],
 "\nThe system is said to be overdamped because the damping coefficient \
\[Beta] is large when compared to the spring constant ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]]],
 ".\n",
 StyleBox["Assume ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Lambda]", "2"], " ", "=", " ", 
    RowBox[{
     RowBox[{"100", " ", 
      RowBox[{"(", 
       RowBox[{"therefore", ",", " ", 
        RowBox[{"\[Lambda]", " ", "=", " ", "10"}]}], ")"}], " ", "and", " ", 
      
      SuperscriptBox["\[Omega]", "2"]}], " ", "=", " ", 
     RowBox[{
      RowBox[{
      "1", " ", "in", " ", "the", " ", "same", " ", "system", " ", "as", " ", 
       "above", " ", "where", " ", 
       RowBox[{"x", "[", "0", "]"}]}], "=", 
      RowBox[{
       RowBox[{"0", " ", "and", " ", 
        RowBox[{
         RowBox[{"x", "'"}], "[", "0", "]"}]}], "=", 
       RowBox[{
        RowBox[{"5", " ", ".", "  ", "The"}], " ", "equation", " ", "of", " ",
         "this", " ", "system", " ", 
        RowBox[{"is", ":"}]}]}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->18],
 StyleBox["\n",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["d", "2"], "x"}], 
      SuperscriptBox["dt", "2"]], "+", 
     RowBox[{"2", " ", "*", "10", 
      FractionBox["dx", "dt"]}], "+", 
     RowBox[{"1", "x"}]}], "=", "0"}], TraditionalForm]],
  FontSize->18]
}], "Text",
 CellChangeTimes->{{3.6085146464497695`*^9, 3.6085146574794006`*^9}, {
   3.6085146893882256`*^9, 3.608514691787363*^9}, {3.60851482111876*^9, 
   3.60851487305173*^9}, {3.6085149265027876`*^9, 3.6085150469286757`*^9}, {
   3.608515095030427*^9, 3.6085151709677706`*^9}, {3.608515223136754*^9, 
   3.6085152667162466`*^9}, {3.608515308284624*^9, 3.608515376938551*^9}, {
   3.608515496731403*^9, 3.608515518796665*^9}, {3.608515557150859*^9, 
   3.608515858711107*^9}, {3.6085158971433053`*^9, 3.608516033287092*^9}, {
   3.608516066576996*^9, 3.6085161025810556`*^9}, {3.6085167629998293`*^9, 
   3.6085167919084826`*^9}, {3.617957730131983*^9, 3.617957731614068*^9}, {
   3.617957780039262*^9, 3.6179578194933443`*^9}, {3.6179578857374964`*^9, 
   3.6179579128045373`*^9}, {3.6179580076799884`*^9, 3.617958009146445*^9}, {
   3.6179581298324223`*^9, 3.617958233417737*^9}, 3.6179595217719417`*^9, {
   3.61795957050815*^9, 3.617959574377124*^9}, {3.6179596442682595`*^9, 
   3.617959689214876*^9}, {3.6333549613888655`*^9, 3.6333549656319866`*^9}, {
   3.63336110378596*^9, 3.6333612116867895`*^9}, {3.633361572673644*^9, 
   3.633361615142288*^9}, {3.633428385583096*^9, 3.6334285759691687`*^9}, {
   3.634053375179511*^9, 3.6340533754646535`*^9}, {3.6367345204501762`*^9, 
   3.636734696989667*^9}, {3.6367347270737114`*^9, 3.636734805674693*^9}, {
   3.6367348399356594`*^9, 3.636734878394562*^9}, {3.6367351292770567`*^9, 
   3.6367351410232735`*^9}, {3.6367352329525785`*^9, 3.636735236423006*^9}, {
   3.636735270724*^9, 3.6367353145776763`*^9}, {3.6367353521599655`*^9, 
   3.6367354978758955`*^9}, {3.6367355648957767`*^9, 3.636735656666971*^9}, {
   3.6369768974365826`*^9, 3.63697690405053*^9}, {3.638268991429946*^9, 
   3.638268996547399*^9}, 3.638269369360228*^9, 3.63864604214491*^9, {
   3.638646086934072*^9, 3.638646221246056*^9}, {3.638646290102022*^9, 
   3.6386463149129868`*^9}, {3.638646420106522*^9, 3.6386464223859653`*^9}, 
   3.638646684919322*^9, {3.638646730888052*^9, 3.638646764414373*^9}, {
   3.638649337994829*^9, 3.638649359810973*^9}},
 FontFamily->"Gill Sans MT",
 FontSize->20],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"x", "''"}], "[", "t", "]"}], " ", "+", " ", 
        RowBox[{"20", 
         RowBox[{
          RowBox[{"x", "'"}], "[", "t", "]"}]}], " ", "+", "  ", 
        RowBox[{"x", "[", "t", "]"}]}], "\[Equal]", "0"}], ",", " ", 
      RowBox[{
       RowBox[{"x", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", "5"}]}], "}"}], ",", 
    
    RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}], "Input"]], "Input",
 CellChangeTimes->{{3.638646773807235*^9, 3.638646773808373*^9}, {
  3.638649363147436*^9, 3.6386493661016617`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"5", " ", 
      RowBox[{"(", 
       RowBox[{"10", "+", 
        RowBox[{"3", " ", 
         SqrtBox["11"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         FractionBox["t", 
          RowBox[{
           RowBox[{"-", "10"}], "-", 
           RowBox[{"3", " ", 
            SqrtBox["11"]}]}]]], "-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "10"}], "-", 
            RowBox[{"3", " ", 
             SqrtBox["11"]}]}], ")"}], " ", "t"}]]}], ")"}]}], 
     RowBox[{"6", " ", 
      RowBox[{"(", 
       RowBox[{"33", "+", 
        RowBox[{"10", " ", 
         SqrtBox["11"]}]}], ")"}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.638647129982376*^9, 3.638647957575692*^9, 
  3.638649366989067*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f1", " ", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    FractionBox[
     RowBox[{"5", " ", 
      RowBox[{"(", 
       RowBox[{"10", "+", 
        RowBox[{"3", " ", 
         SqrtBox["11"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         FractionBox["t", 
          RowBox[{
           RowBox[{"-", "10"}], "-", 
           RowBox[{"3", " ", 
            SqrtBox["11"]}]}]]], "-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "10"}], "-", 
            RowBox[{"3", " ", 
             SqrtBox["11"]}]}], ")"}], " ", "t"}]]}], ")"}]}], 
     RowBox[{"6", " ", 
      RowBox[{"(", 
       RowBox[{"33", "+", 
        RowBox[{"10", " ", 
         SqrtBox["11"]}]}], ")"}]}]], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
    RowBox[{
    "PlotLegends", "\[Rule]", 
     "\"\<\!\(\*FractionBox[\(5\), \(2\)]\) \!\(\*SuperscriptBox[\(\
\[ExponentialE]\), \(\(-4\)\\\ t\)]\) (-1+\!\(\*SuperscriptBox[\(\
\[ExponentialE]\), \(2\\\ t\)]\))\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.638646794981142*^9, 3.638646817737512*^9}, {
   3.638646881716055*^9, 3.6386468825432796`*^9}, {3.638647136309455*^9, 
   3.638647141491228*^9}, {3.638648128299107*^9, 3.6386481397099447`*^9}, 
   3.63864937671279*^9, 3.638649851966638*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
ClS+zc0xyJekPfPO+7HwP6whoGY=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
    "\"\\!\\(\\*FractionBox[\\(5\\), \\(2\\)]\\) \\!\\(\\*SuperscriptBox[\\(\
\[ExponentialE]\\), \\(\\(-4\\)\\\\ t\\)]\\) (-1+\\!\\(\\*SuperscriptBox[\\(\
\[ExponentialE]\\), \\(2\\\\ t\\)]\\))\"", TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.638646819054428*^9, 3.63864688355963*^9, 3.6386471482365437`*^9, 
   3.638648092671117*^9, {3.6386481333173513`*^9, 3.6386481402653103`*^9}, 
   3.638649377775559*^9}]
}, Open  ]],

Cell[TextData[{
 "Assume ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Lambda]", "2"], " ", "=", " ", 
    RowBox[{
     RowBox[{"81", 
      RowBox[{"(", 
       RowBox[{"therefore", ",", " ", 
        RowBox[{"\[Lambda]", " ", "=", " ", "9"}]}], ")"}], " ", "and", " ", 
      SuperscriptBox["\[Omega]", "2"]}], " ", "=", " ", 
     RowBox[{
      RowBox[{
      "1", " ", "in", " ", "the", " ", "same", " ", "system", " ", "as", " ", 
       "above", " ", "where", " ", 
       RowBox[{"x", "[", "0", "]"}]}], "=", 
      RowBox[{
       RowBox[{"0", " ", "and", " ", 
        RowBox[{
         RowBox[{"x", "'"}], "[", "0", "]"}]}], "=", 
       RowBox[{
        RowBox[{"5", " ", ".", "  ", "The"}], " ", "equation", " ", "of", " ",
         "this", " ", "system", " ", 
        RowBox[{"is", ":"}]}]}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontWeight->"Plain"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["d", "2"], "x"}], 
      SuperscriptBox["dt", "2"]], "+", 
     RowBox[{"2", " ", "*", "9", 
      FractionBox["dx", "dt"]}], "+", 
     RowBox[{"1", "x"}]}], "=", "0"}], TraditionalForm]],
  FontSize->18,
  FontWeight->"Plain"]
}], "Text",
 CellChangeTimes->{{3.638646837783113*^9, 3.638646908877042*^9}, {
  3.638647105428398*^9, 3.638647107682343*^9}, {3.6386471788067617`*^9, 
  3.638647202870741*^9}, {3.638649413593959*^9, 3.638649430270936*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"x", "''"}], "[", "t", "]"}], "+", 
       RowBox[{"18", 
        RowBox[{
         RowBox[{"x", "'"}], "[", "t", "]"}]}], "+", 
       RowBox[{"x", "[", "t", "]"}]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"x", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", "5"}]}], "}"}], ",", 
   RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.638648002770955*^9, 3.638648059873145*^9}, {
  3.638649432719388*^9, 3.638649435994177*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"5", " ", 
      RowBox[{"(", 
       RowBox[{"9", "+", 
        RowBox[{"4", " ", 
         SqrtBox["5"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         FractionBox["t", 
          RowBox[{
           RowBox[{"-", "9"}], "-", 
           RowBox[{"4", " ", 
            SqrtBox["5"]}]}]]], "-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "9"}], "-", 
            RowBox[{"4", " ", 
             SqrtBox["5"]}]}], ")"}], " ", "t"}]]}], ")"}]}], 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{"20", "+", 
        RowBox[{"9", " ", 
         SqrtBox["5"]}]}], ")"}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.638648061819483*^9, 3.638649436613674*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f2", " ", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    FractionBox[
     RowBox[{"5", " ", 
      RowBox[{"(", 
       RowBox[{"9", "+", 
        RowBox[{"4", " ", 
         SqrtBox["5"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         FractionBox["t", 
          RowBox[{
           RowBox[{"-", "9"}], "-", 
           RowBox[{"4", " ", 
            SqrtBox["5"]}]}]]], "-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "9"}], "-", 
            RowBox[{"4", " ", 
             SqrtBox["5"]}]}], ")"}], " ", "t"}]]}], ")"}]}], 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{"20", "+", 
        RowBox[{"9", " ", 
         SqrtBox["5"]}]}], ")"}]}]], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
    RowBox[{
    "PlotLegends", "\[Rule]", 
     "\"\<\!\(\*FractionBox[\(5\\\ \((9 + 4\\\ \*SqrtBox[\(5\)])\)\\\ \
\((\*SuperscriptBox[\(\[ExponentialE]\), FractionBox[\(t\), \(\(-9\) - 4\\\ \
\*SqrtBox[\(5\)]\)]] - \*SuperscriptBox[\(\[ExponentialE]\), \(\((\(-9\) - \
4\\\ \*SqrtBox[\(5\)])\)\\\ t\)])\)\), \(8\\\ \((20 + 9\\\ \
\*SqrtBox[\(5\)])\)\)]\)\>\""}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.638648149039999*^9, 3.638648204843729*^9}, {
  3.638649443724527*^9, 3.6386494478682127`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0, 0]], 
       LineBox[CompressedData["
1:eJwV1nk0ltsXB3BCCSkZMoW8LnIlNKt8T6kk5TZIqW55yVgo6spcJBlKab4h
aU6UkkrI8Bjfwfu8ZhGlMmQeKsPl9/z+OOusz1pn7bXO3vvsdRY4eu90niYi
IpLJrP/viSGO000Ox5g/jva5mqCRYZ60r9tsj5Y7vGqr9wdfvIiGbdE+Wlr+
2CCUsluQkwg/S3tZCa0oHH2Z9WOa0TPk7Gk7NeUahz/5a2z7dTMgmpk1MFEX
D/eV93SyZTKxiSIHfmneQu7fcxJLHN/BjRtxedgiAacmn103qXuPmOqKkgHX
O3jQ0nuQszAPbj5PlX/WpWDM9OfRvSsL4P9z66th9/sQXx63eeHSQkQH9G0b
Gn+AS8s1PrppFyEtbGl4v+YTPAhm/TG3gULe9Lr5fRlPsX6pYagwpRiCaP+3
PRbP4JUh0/KcXYLB+LyeLtfnkFAdeiRbUIqwGGNqOOgF4tYIplIcyxDNOyM3
vDEDp0O85gSOlyFhh86zwbqX6LTxHuIrVOD+lZOjA8mvsFUylq13vQJpNSWb
Btwzsdbwl0fwHA7y7N0/942/xgozfkTiAAelt7ON+qgspJaU3la250LQLB3U
e+EN4lefbBnK5uIzO12pR/MdjlnNXznuxUPXvSmn7o53qH15bM/rAh4Gv23P
+JGRjRjzXXrds/kQ9xiy7rLIQYX0RlHqDh8yzzbc6pTJxZPMfPG6z3wo9l77
3lGTC07gTHFrrUro+qw80+76AWcz5rWqXKmEcuMGV1/lfNR9kDERlFZCPbBn
1lBQPron1dKSRiuhk2u+f3BjAYqfbkq7ZCCA/sF2UZ+nBfA+Pd0vDgIsmop7
PCBbiK1T36qddgmwfN3nkf66QlhC7hDXTwCzL1EJx9YUwfbc0Yng8wKYh5ta
9CcXwViqSZfcFMCyOPxSnzuFU1fS8/RfC7DVxXCFN5+C1UgTx6VQgO0zapp7
TYuxnCv59itfgL1Wun/2jhejTUG9vOybAAe6+LSnQwlMzSu/rOsXgB3jd6qH
KkHBREWV1pgALoZamp4LS5HYU9TsKUbDg1dW3H2hFFPxoI1laHh5HT96dLAU
ya335I8r0PCZrSrfbVeGP14N3V+mTiNwxxGHH5rlOBKQ3eBsQGMyfLlKS2w5
bAvSDx02oXE6S1QoHC3H5Dxuee8KGtM6udElLhUIVlotlDancVbtpkV2VQVe
+jtXFljQmG7jNJFGOFinlPtOyYpG1Gmj13fTOGjXXmQyx4bGxW+UblQkFykN
DU8l9tCYo3ypJWiYCwv/0YPS+2nEb9l/8xibh6BWnkz5QRoKwbo7DvN5KFvQ
2LrekcaN5wMz967mo2xFXnmQMw3VLzmF1o/5OJjCDQxwo5GgcD4QipWQ/eRx
AkdoJPtr9Oj2VcL1s+liw2M05GqHd84yYvIoiRF7Hxo7vfctjjwsgIef2uz9
J2hclcyXFr0tQOWqXHnTf2jU3P2jI4Bmzoe/8v3sR0NpdQw1PINGugQ78Ig/
jb3V/cleTB5SrBV2CwNo3PK0C+5g4viJi0orB9FonJ5j75jK3FtKPco8mIZa
8oLlTZ+ZOPUfkyxDaBxYFTnXTlkIz2ktIstCaSQKu3srbYRYvDZgi+RpGp+O
7ORYRQjR/9fiqULGmhJvHxW9F2KzrWysyxkaDknzz64dFOKvkGlWw4xTVoQ7
vNGvQm2SdIBnGI02Qccak0NV0A123l7FWMfDRiX1WhViFZN+6IbTcBHLHNHh
VsE6+/Y+d8aPElSESdOq0SpxNeE2445loenKq6ohDB2+m8d4YeXX6HjvaoyW
rt1WxdjDbYurzMNq6M0R+jYyThV9YXGuqRp2yW8+VTPu/ldRS0S+Bm+UtlsX
MV60NHDC36oGKVISRx8y9uK11g+F1qDpeVdHCOMXLptee2bVYIesvcM2xgNT
qZfbu2ugti/IdS5j01tyXmxWLVb3NUXzmfucMPXb8tG+FtqeLTZhjF9zmnR3
X6pl4qw1NmL88/B6scqSWggU/O4LmfysmHzUsvm/Whj6mqseY3zqxqycwiV1
KNZvGp3OeLy8/kRWch00vNv8tZl8r3Ey32FcV4dOMRn+I6Y+IRP3Fj2dVY8B
oeGwHmORxd7fEwPqsTXPuV2Fqee6surCeRn1MJORXx/L1DuMbXbncns9EiQP
R48x/SB+VWJvhG0D9mWaVXMCacwcvV1+1KgR9Vx9HUumn1ZGNgRsYTdCXilF
5ekpGm6K8wz1rzZC12JPkxTjEpP4i22jjRiKfWRRwvTnWY/zu/YVf8SxQ2Y3
9Zi+E2k60Wx5oBmpDrc6Hnkx77vl4Sm5ja2Y8ntcI+lE43hhaGy3Txsiip7Y
tWyhYXT/Cp2Z3gnlLs9hPTUa32zc1FtW9uPvryLXvrYLcEP13Py7DkO4l/hY
9sZbAVb5vH0uxv2JV9vOyXdGCFBUd3u7t94YbD0e6uTaCmASO2mubPUfnnG2
GTrpMfPvu1mL8R4REtqwYOH5nkq0L8raONwtSgoH1uwqY+Zz4ETUkpwAMfJ7
c7ZjwZpKzJDrcLc1kCC9EUZVTi18SPAkLKVzp5NNx4Md10XxMc5POxp/XJI8
p8PqBg35+LYnXUVDQ4qkdRxocKriYd15L8+yNGmiOP1gFO80D9cm3860ODSL
eMVY9KzR52G/etHWpiFZkhngUxlWy4VM/p/d2rvnkLH9X9J/hnDhvCxlxN5Q
joi+sVsqYcCFX8ipnVojcmT+vLsaqR85iOi6UsXnzyXG634Yp0dysNVg9mOZ
f+XJeKCTkb4ZBxfSludvZSuQ9QWNVeO9FajYdW/ixCpFskwYb2KfVIF8nnes
oZgS+YcoOw7tYuamxxnCbVYihg+9p1aLV0DDGiu9MueRZ78mx9qyymExdSD8
TpAyeXlclh3nXY7DtR8G3+5WIdcki4wVWOUwPxP2mq2lSsTtbFpDmsoQ7z3w
XqZdlejUTqucdbMMX04/+H4nT41QH35QSTZl+OH87nBhpDox7SzKa5UqQ7/n
3Bk89nwSucxgyabCUqRbcSZcFmmQHFv5qyS0FN/djJeLjWiQO59YDevNS6Ga
2nglkqdJrp5gq8T9LkG4g08Kz1qLJKYrzjB/W4JfEyoXrN9pkQNpgw/tfEug
//7GrQqdBWSDg4F8kHEJljkV/yUXtYC0nWNHCgeLkZ+gqMwdWUDUuoIFb14U
Qz9fMdpmvzZRM+JezfQtxjaJ7vnCPG2yudhTLGZlMfo/fi0qN2CRRc0if8uP
UvBOuCAfFcci1kmfAyPyKHBFdfq2XGaR9bVJgWdyKRi4ZlfIXGGRMlrpfHAO
ha8m7WcuXWeRg9eWlp7MprC3lPTfSGQRy2bFTy5ZFNYPDnEfprLI5sk2T+t0
Ckqb952jSlnkwSVbOY0kCr5p/exz5Syi83LZI7VECoK5kWs3c5j4mblWKgkU
YppfDXP4LLKi7UOmwr8URHxnOVXVsEjcxUBtmesUuhLz8aWNRVZHbjzw3wUK
lmJ71O5/Y5E5fltyxmMp3Hfr+encziJBjt36YzEUDi1RTe/sYpHiV+L6v6Io
VJf5qg8MsEjYr5O5AxEUTIykfr8cYhHzwB1h/WcpXLySXHVihEVeShXv6gtn
/hkHedG/f7OIS81x9Z4zFB4WOblkj7HIzJon8t2nKYgvHFsXNMEixu5+836E
UmBfvDTffJJFNIcb9LpCmP/lkO7o1BSLaNcLNnQGU/gfeQyR/Q==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
    "\"\\!\\(\\*FractionBox[\\(5\\\\ \\((9 + 4\\\\ \
\\*SqrtBox[\\(5\\)])\\)\\\\ \\((\\*SuperscriptBox[\\(\[ExponentialE]\\), \
FractionBox[\\(t\\), \\(\\(-9\\) - 4\\\\ \\*SqrtBox[\\(5\\)]\\)]] - \
\\*SuperscriptBox[\\(\[ExponentialE]\\), \\(\\((\\(-9\\) - 4\\\\ \
\\*SqrtBox[\\(5\\)])\\)\\\\ t\\)])\\)\\), \\(8\\\\ \\((20 + 9\\\\ \\*SqrtBox[\
\\(5\\)])\\)\\)]\\)\"", TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.638648185911696*^9, 3.6386482052538633`*^9}, 
   3.638649448521648*^9}]
}, Open  ]],

Cell[TextData[{
 "Assume ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Lambda]", "2"], " ", "=", " ", 
    RowBox[{
     RowBox[{"125", 
      RowBox[{"(", 
       RowBox[{"therefore", ",", " ", 
        RowBox[{"\[Lambda]", " ", "=", " ", "25"}]}], ")"}], " ", "and", " ", 
      
      SuperscriptBox["\[Omega]", "2"]}], " ", "=", " ", 
     RowBox[{
      RowBox[{
      "1", " ", "in", " ", "the", " ", "same", " ", "system", " ", "as", " ", 
       "above", " ", "where", " ", 
       RowBox[{"x", "[", "0", "]"}]}], "=", 
      RowBox[{
       RowBox[{"0", " ", "and", " ", 
        RowBox[{
         RowBox[{"x", "'"}], "[", "0", "]"}]}], "=", 
       RowBox[{
        RowBox[{"5", " ", ".", "  ", "The"}], " ", "equation", " ", "of", " ",
         "this", " ", "system", " ", 
        RowBox[{"is", ":"}]}]}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontWeight->"Plain"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["d", "2"], "x"}], 
      SuperscriptBox["dt", "2"]], "+", 
     RowBox[{"2", " ", "*", "25", 
      FractionBox["dx", "dt"]}], "+", 
     RowBox[{"1", "x"}]}], "=", "0"}], TraditionalForm]],
  FontSize->18,
  FontWeight->"Plain"]
}], "Text",
 CellChangeTimes->{{3.638646837783113*^9, 3.638646908877042*^9}, {
  3.638647105428398*^9, 3.638647107682343*^9}, {3.6386471788067617`*^9, 
  3.638647202870741*^9}, {3.638649413593959*^9, 3.638649430270936*^9}, {
  3.638650956484797*^9, 3.6386509626032343`*^9}, {3.6386510342270927`*^9, 
  3.638651036857738*^9}, {3.638651113758234*^9, 3.638651118283031*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"x", "''"}], "[", "t", "]"}], "+", 
       RowBox[{"50", 
        RowBox[{
         RowBox[{"x", "'"}], "[", "t", "]"}]}], "+", 
       RowBox[{"x", "[", "t", "]"}]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"x", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", "5"}]}], "}"}], ",", 
   RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.638648002770955*^9, 3.638648059873145*^9}, {
   3.638649432719388*^9, 3.638649435994177*^9}, 3.638650965825513*^9, {
   3.6386511220101*^9, 3.6386511221814747`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"5", " ", 
      RowBox[{"(", 
       RowBox[{"25", "+", 
        RowBox[{"4", " ", 
         SqrtBox["39"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         FractionBox["t", 
          RowBox[{
           RowBox[{"-", "25"}], "-", 
           RowBox[{"4", " ", 
            SqrtBox["39"]}]}]]], "-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "25"}], "-", 
            RowBox[{"4", " ", 
             SqrtBox["39"]}]}], ")"}], " ", "t"}]]}], ")"}]}], 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{"156", "+", 
        RowBox[{"25", " ", 
         SqrtBox["39"]}]}], ")"}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.638648061819483*^9, 3.638649436613674*^9, 
  3.638650967159429*^9, 3.6386511227179213`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f2", " ", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    FractionBox[
     RowBox[{"5", " ", 
      RowBox[{"(", 
       RowBox[{"25", "+", 
        RowBox[{"4", " ", 
         SqrtBox["39"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         FractionBox["t", 
          RowBox[{
           RowBox[{"-", "25"}], "-", 
           RowBox[{"4", " ", 
            SqrtBox["39"]}]}]]], "-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "25"}], "-", 
            RowBox[{"4", " ", 
             SqrtBox["39"]}]}], ")"}], " ", "t"}]]}], ")"}]}], 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{"156", "+", 
        RowBox[{"25", " ", 
         SqrtBox["39"]}]}], ")"}]}]], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "20"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
    RowBox[{
    "PlotLegends", "\[Rule]", 
     "\"\<\!\(\*FractionBox[\(5\\\ \((9 + 4\\\ \*SqrtBox[\(5\)])\)\\\ \
\((\*SuperscriptBox[\(\[ExponentialE]\), FractionBox[\(t\), \(\(-9\) - 4\\\ \
\*SqrtBox[\(5\)]\)]] - \*SuperscriptBox[\(\[ExponentialE]\), \(\((\(-9\) - \
4\\\ \*SqrtBox[\(5\)])\)\\\ t\)])\)\), \(8\\\ \((20 + 9\\\ \
\*SqrtBox[\(5\)])\)\)]\)\>\""}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.638648149039999*^9, 3.638648204843729*^9}, {
  3.638649443724527*^9, 3.6386494478682127`*^9}, {3.6386509771939898`*^9, 
  3.638651025776754*^9}, {3.638651129117497*^9, 3.638651133251939*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0, 0]], 
       LineBox[CompressedData["
1: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

        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
    "\"\\!\\(\\*FractionBox[\\(5\\\\ \\((9 + 4\\\\ \
\\*SqrtBox[\\(5\\)])\\)\\\\ \\((\\*SuperscriptBox[\\(\[ExponentialE]\\), \
FractionBox[\\(t\\), \\(\\(-9\\) - 4\\\\ \\*SqrtBox[\\(5\\)]\\)]] - \
\\*SuperscriptBox[\\(\[ExponentialE]\\), \\(\\((\\(-9\\) - 4\\\\ \
\\*SqrtBox[\\(5\\)])\\)\\\\ t\\)])\\)\\), \\(8\\\\ \\((20 + 9\\\\ \\*SqrtBox[\
\\(5\\)])\\)\\)]\\)\"", TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.638650978604993*^9, {3.638651010498267*^9, 3.638651026166641*^9}, 
   3.63865113417633*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"5", " ", 
       RowBox[{"(", 
        RowBox[{"10", "+", 
         RowBox[{"3", " ", 
          SqrtBox["11"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          FractionBox["t", 
           RowBox[{
            RowBox[{"-", "10"}], "-", 
            RowBox[{"3", " ", 
             SqrtBox["11"]}]}]]], "-", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "10"}], "-", 
             RowBox[{"3", " ", 
              SqrtBox["11"]}]}], ")"}], " ", "t"}]]}], ")"}]}], 
      RowBox[{"6", " ", 
       RowBox[{"(", 
        RowBox[{"33", "+", 
         RowBox[{"10", " ", 
          SqrtBox["11"]}]}], ")"}]}]], ",", 
     FractionBox[
      RowBox[{"5", " ", 
       RowBox[{"(", 
        RowBox[{"9", "+", 
         RowBox[{"4", " ", 
          SqrtBox["5"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          FractionBox["t", 
           RowBox[{
            RowBox[{"-", "9"}], "-", 
            RowBox[{"4", " ", 
             SqrtBox["5"]}]}]]], "-", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "9"}], "-", 
             RowBox[{"4", " ", 
              SqrtBox["5"]}]}], ")"}], " ", "t"}]]}], ")"}]}], 
      RowBox[{"8", " ", 
       RowBox[{"(", 
        RowBox[{"20", "+", 
         RowBox[{"9", " ", 
          SqrtBox["5"]}]}], ")"}]}]], ",", 
     FractionBox[
      RowBox[{"5", " ", 
       RowBox[{"(", 
        RowBox[{"25", "+", 
         RowBox[{"4", " ", 
          SqrtBox["39"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          FractionBox["t", 
           RowBox[{
            RowBox[{"-", "25"}], "-", 
            RowBox[{"4", " ", 
             SqrtBox["39"]}]}]]], "-", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "25"}], "-", 
             RowBox[{"4", " ", 
              SqrtBox["39"]}]}], ")"}], " ", "t"}]]}], ")"}]}], 
      RowBox[{"8", " ", 
       RowBox[{"(", 
        RowBox[{"156", "+", 
         RowBox[{"25", " ", 
          SqrtBox["39"]}]}], ")"}]}]]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", " ", "\[Rule]", " ", "All"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.638648188628778*^9, 3.6386481957718477`*^9}, {
   3.638649154415909*^9, 3.638649167634478*^9}, {3.638649214360676*^9, 
   3.638649215870902*^9}, {3.638649454010144*^9, 3.638649499483296*^9}, {
   3.638650985714705*^9, 3.6386509919395533`*^9}, 3.638651150080373*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
ClS+zc0xyJekPfPO+7HwP6whoGY=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FractionBox[
        RowBox[{"5", " ", 
          RowBox[{"(", 
            RowBox[{"10", "+", 
              RowBox[{"3", " ", 
                SqrtBox["11"]}]}], ")"}], " ", 
          RowBox[{"(", 
            RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               FractionBox["t", 
                RowBox[{
                  RowBox[{"-", "10"}], "-", 
                  RowBox[{"3", " ", 
                    SqrtBox["11"]}]}]]], "-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "10"}], "-", 
                    RowBox[{"3", " ", 
                    SqrtBox["11"]}]}], ")"}], " ", "t"}]]}], ")"}]}], 
        RowBox[{"6", " ", 
          RowBox[{"(", 
            RowBox[{"33", "+", 
              RowBox[{"10", " ", 
                SqrtBox["11"]}]}], ")"}]}]], 
       FractionBox[
        RowBox[{"5", " ", 
          RowBox[{"(", 
            RowBox[{"9", "+", 
              RowBox[{"4", " ", 
                SqrtBox["5"]}]}], ")"}], " ", 
          RowBox[{"(", 
            RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               FractionBox["t", 
                RowBox[{
                  RowBox[{"-", "9"}], "-", 
                  RowBox[{"4", " ", 
                    SqrtBox["5"]}]}]]], "-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "9"}], "-", 
                    RowBox[{"4", " ", 
                    SqrtBox["5"]}]}], ")"}], " ", "t"}]]}], ")"}]}], 
        RowBox[{"8", " ", 
          RowBox[{"(", 
            RowBox[{"20", "+", 
              RowBox[{"9", " ", 
                SqrtBox["5"]}]}], ")"}]}]], 
       FractionBox[
        RowBox[{"5", " ", 
          RowBox[{"(", 
            RowBox[{"25", "+", 
              RowBox[{"4", " ", 
                SqrtBox["39"]}]}], ")"}], " ", 
          RowBox[{"(", 
            RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               FractionBox["t", 
                RowBox[{
                  RowBox[{"-", "25"}], "-", 
                  RowBox[{"4", " ", 
                    SqrtBox["39"]}]}]]], "-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "25"}], "-", 
                    RowBox[{"4", " ", 
                    SqrtBox["39"]}]}], ")"}], " ", "t"}]]}], ")"}]}], 
        RowBox[{"8", " ", 
          RowBox[{"(", 
            RowBox[{"156", "+", 
              RowBox[{"25", " ", 
                SqrtBox["39"]}]}], ")"}]}]]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.638649500433284*^9, {3.6386509870625668`*^9, 3.6386509923603573`*^9}, 
   3.638651151101532*^9}]
}, Open  ]],

Cell["\<\
For overdamped, the values must be significantly different in magnitude in \
order for the graph to clearly that the function does not go to zero over a \
relatively small t domain. \
\>", "Text",
 CellChangeTimes->{{3.638651162334721*^9, 3.638651251050577*^9}}],

Cell[TextData[{
 "\n",
 StyleBox["Case 2 (critically damped): ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Lambda]", "2"], "-", 
     SuperscriptBox["\[Omega]", "2"]}], "=", "0"}], TraditionalForm]],
  FontWeight->"Bold"],
 "\nThe system is said to be critically damped because any slight decrease in \
the damping force would result in oscillatory motion.\nAssume ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Lambda]", "2"], " ", "=", " ", 
    RowBox[{
     RowBox[{"4", 
      RowBox[{"(", 
       RowBox[{"therefore", ",", " ", 
        RowBox[{"\[Lambda]", " ", "=", " ", "2"}]}], ")"}], " ", "and", " ", 
      SuperscriptBox["\[Omega]", "2"]}], " ", "=", " ", 
     RowBox[{
      RowBox[{
      "4", " ", "in", " ", "the", " ", "same", " ", "system", " ", "as", " ", 
       "above", " ", "where", " ", 
       RowBox[{"x", "[", "0", "]"}]}], "=", 
      RowBox[{
       RowBox[{"0", " ", "and", " ", 
        RowBox[{
         RowBox[{"x", "'"}], "[", "0", "]"}]}], "=", 
       RowBox[{
        RowBox[{"5", " ", ".", "  ", "The"}], " ", "equation", " ", "of", " ",
         "this", " ", "system", " ", 
        RowBox[{"is", ":"}]}]}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontWeight->"Plain"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["d", "2"], "x"}], 
      SuperscriptBox["dt", "2"]], "+", 
     RowBox[{"2", " ", "*", "2", 
      FractionBox["dx", "dt"]}], "+", 
     RowBox[{"4", "x"}]}], "=", "0"}], TraditionalForm]],
  FontSize->18,
  FontWeight->"Plain"]
}], "Text",
 CellChangeTimes->{{3.6085146464497695`*^9, 3.6085146574794006`*^9}, {
   3.6085146893882256`*^9, 3.608514691787363*^9}, {3.60851482111876*^9, 
   3.60851487305173*^9}, {3.6085149265027876`*^9, 3.6085150469286757`*^9}, {
   3.608515095030427*^9, 3.6085151709677706`*^9}, {3.608515223136754*^9, 
   3.6085152667162466`*^9}, {3.608515308284624*^9, 3.608515376938551*^9}, {
   3.608515496731403*^9, 3.608515518796665*^9}, {3.608515557150859*^9, 
   3.608515858711107*^9}, {3.6085158971433053`*^9, 3.608516033287092*^9}, {
   3.608516066576996*^9, 3.6085161025810556`*^9}, {3.6085167629998293`*^9, 
   3.6085167919084826`*^9}, {3.617957730131983*^9, 3.617957731614068*^9}, {
   3.617957780039262*^9, 3.6179578194933443`*^9}, {3.6179578857374964`*^9, 
   3.6179579128045373`*^9}, {3.6179580076799884`*^9, 3.617958009146445*^9}, {
   3.6179581298324223`*^9, 3.617958233417737*^9}, 3.6179595217719417`*^9, {
   3.61795957050815*^9, 3.617959574377124*^9}, {3.6179596442682595`*^9, 
   3.617959689214876*^9}, {3.6333549613888655`*^9, 3.6333549656319866`*^9}, {
   3.63336110378596*^9, 3.6333612116867895`*^9}, {3.633361572673644*^9, 
   3.633361615142288*^9}, {3.633428385583096*^9, 3.6334285759691687`*^9}, {
   3.634053375179511*^9, 3.6340533754646535`*^9}, {3.6367345204501762`*^9, 
   3.636734696989667*^9}, {3.6367347270737114`*^9, 3.636734805674693*^9}, {
   3.6367348399356594`*^9, 3.636734878394562*^9}, {3.6367351292770567`*^9, 
   3.6367351410232735`*^9}, {3.6367352329525785`*^9, 3.636735236423006*^9}, {
   3.636735270724*^9, 3.6367353145776763`*^9}, {3.6367353521599655`*^9, 
   3.6367354978758955`*^9}, {3.6367355648957767`*^9, 3.636735656666971*^9}, {
   3.6369768974365826`*^9, 3.63697690405053*^9}, {3.638268991429946*^9, 
   3.638268996547399*^9}, 3.638269369360228*^9, 3.63864604214491*^9, {
   3.638646086934072*^9, 3.638646221246056*^9}, {3.638646290102022*^9, 
   3.6386463149129868`*^9}, {3.638646420106522*^9, 3.6386464223859653`*^9}, 
   3.638646684919322*^9, {3.638646730888052*^9, 3.638646780649444*^9}, {
   3.638648488301412*^9, 3.6386485087927933`*^9}},
 FontFamily->"Gill Sans MT",
 FontSize->20],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"x", "''"}], "[", "t", "]"}], "+", 
       RowBox[{"4", 
        RowBox[{
         RowBox[{"x", "'"}], "[", "t", "]"}]}], "+", 
       RowBox[{"4", 
        RowBox[{"x", "[", "t", "]"}]}]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"x", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", "5"}]}], "}"}], ",", 
   RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.638648511970932*^9, 3.6386485307003393`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], "\[Rule]", 
    RowBox[{"5", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "t"}]], " ", "t"}]}], "}"}], "}"}]], "Output",\

 CellChangeTimes->{3.6386485329537773`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g1", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"5", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "t"}]], " ", "t"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
    RowBox[{
    "PlotLegends", "\[Rule]", 
     "\"\<5 \!\(\*SuperscriptBox[\(\[ExponentialE]\), \(\(-2\)\\\ t\)]\) \
t\>\""}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.638648536663794*^9, 3.638648553793067*^9}, 
   3.638649828261445*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0, 0]], 
       LineBox[CompressedData["
1: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
FCZGtF4ANEeWDjTtwDK6IQfp9nTwbdZI96DZiRNusYVdK2mw3vzuUuyVnTja
aTbibvEcRFrtnmre3omXPwzfVTz2HI61cdcv+277v6t6xS/9HEI7ffZYhu9E
kytMlFprqcA3aDAsmbkT51c8TwgmpYLSPPl0fu9O1OnbMDre8Aw8OGU1urTp
MXGlP1dcJBkecg9fCTWkR4pncc8PLyXBJ974VDUzehyS/o/NvzEJNgU3/6Xa
0+NJqgyDL15JELGrufC8Dz1i3GRMZe9TeH3YTXb9Az2yVR54VJ/1BMZOZ/OL
iDCgpp5wMtk5ETLO/Kuw2sWAw6vJCmXHE8H1rP6lp9IMWBnP3V0klQjTFtOl
fEcYsH/gXdS+iQSYOyflyGnEgOed6I6QzyfAhkNK9s57DHiGO3S5+2Y8cHpE
aiyMMaCFzqjKjncPod2jjyRHYkADgwrDlJiHEH9lf7zHHwake8CSeubmQ+C7
Vj9J3txev7Wpq4QPQeQmXeQkLyMWDdhyxPyMA2lv364+HUaccnoc9IwuDtSD
3S7XvmNEWtCso/KPAYEPA6cj8xjRYvX2gyKXGFjsMTp2qoQR60h7yuMMYyDj
oALvYO02jmf5kysUA0ydK+UrI4zoZ9wqFF0cDR27/bn2CDChsKYx2exvFFys
jCt5EMiElwT+PdKQjwBNMk2GXgQTLhgsnR7cEQEivDej2R8y4elL7DRFfeHb
/e2MU/JzJiyaEPwpFBoOShzCrPmfmfD6LG3oy7EwoLDLsB/9w4SVZh2MNzND
4dFmIb2GDTPeVzmtuWkaDEx7qt0eOTHjesC53D75YLh/srVt4iIzJufqC0+x
B8PV1Knk8NvMyEMfzRbQEgSGxwTkO2KYUXmY0P1yMgjoAr0szlcx43n7ZE5B
80C4zUy8idrHgkOR9z/R+9+H2cO6bMMHWTCGIfgrhdN9cLY2v6GoxIK/hGvU
hHXuw6kcN/h1jAUr/0uvrma/D3LGz9okrFhwhvvO6PcXATD9kGIjP5IFLXaH
KTxrvQeWQpX6vQsseMMpPZOk6Q/Tl+f/5K+xIG2lYwUh4w+3y0QfR1GyYs98
l1IBuz/E23uPHWNlxa9O5yy4BvzgR9Zh31fSrEh0TPwK8vID3cNZOTftWDG/
dUKUuHkXVA0jONi/s2LNm6X3lzO9oe5ZSeH0T1Zs+z4QlOHtDWfmp6yrelmx
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
t2O9YQ==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
    "\"5 \\!\\(\\*SuperscriptBox[\\(\[ExponentialE]\\), \\(\\(-2\\)\\\\ t\\)]\
\\) t\"", TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.638648554388013*^9}]
}, Open  ]],

Cell[TextData[{
 "Assume ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Lambda]", "2"], " ", "=", " ", 
    RowBox[{
     RowBox[{"16", 
      RowBox[{"(", 
       RowBox[{"therefore", ",", " ", 
        RowBox[{"\[Lambda]", " ", "=", " ", "4"}]}], ")"}], " ", "and", " ", 
      SuperscriptBox["\[Omega]", "2"]}], " ", "=", " ", 
     RowBox[{
      RowBox[{
      "16", " ", "in", " ", "the", " ", "same", " ", "system", " ", "as", " ",
        "above", " ", "where", " ", 
       RowBox[{"x", "[", "0", "]"}]}], "=", 
      RowBox[{
       RowBox[{"0", " ", "and", " ", 
        RowBox[{
         RowBox[{"x", "'"}], "[", "0", "]"}]}], "=", 
       RowBox[{
        RowBox[{"5", " ", ".", "  ", "The"}], " ", "equation", " ", "of", " ",
         "this", " ", "system", " ", 
        RowBox[{"is", ":"}]}]}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontWeight->"Plain"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["d", "2"], "x"}], 
      SuperscriptBox["dt", "2"]], "+", 
     RowBox[{"2", " ", "*", "4", 
      FractionBox["dx", "dt"]}], "+", 
     RowBox[{"16", "x"}]}], "=", "0"}], TraditionalForm]],
  FontSize->18,
  FontWeight->"Plain"]
}], "Text",
 CellChangeTimes->{{3.638649549834778*^9, 3.638649589869156*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"x", "''"}], "[", "t", "]"}], "+", 
       RowBox[{"8", 
        RowBox[{
         RowBox[{"x", "'"}], "[", "t", "]"}]}], "+", 
       RowBox[{"16", 
        RowBox[{"x", "[", "t", "]"}]}]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"x", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", "5"}]}], "}"}], ",", 
   RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.638649591825294*^9, 3.638649605506488*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], "\[Rule]", 
    RowBox[{"5", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "4"}], " ", "t"}]], " ", "t"}]}], "}"}], "}"}]], "Output",\

 CellChangeTimes->{3.6386496073380527`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"5", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "4"}], " ", "t"}]], " ", "t"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{
   "PlotLegends", "\[Rule]", 
    "\"\<5 \!\(\*SuperscriptBox[\(\[ExponentialE]\), \(\(-4\)\\\ t\)]\) \
t\>\""}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6386496197956057`*^9, 3.638649631853238*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 1, 0]], 
       LineBox[CompressedData["
1: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
MnfO96HKJ9b8k9jc3yeA8fc2mYFnecT/AYuqYaE=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
    "\"5 \\!\\(\\*SuperscriptBox[\\(\[ExponentialE]\\), \\(\\(-4\\)\\\\ t\\)]\
\\) t\"", TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.638649632586568*^9}]
}, Open  ]],

Cell[TextData[{
 "Assume ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Lambda]", "2"], " ", "=", " ", 
    RowBox[{
     RowBox[{"25", 
      RowBox[{"(", 
       RowBox[{"therefore", ",", " ", 
        RowBox[{"\[Lambda]", " ", "=", " ", "5"}]}], ")"}], " ", "and", " ", 
      SuperscriptBox["\[Omega]", "2"]}], " ", "=", " ", 
     RowBox[{
      RowBox[{
      "25", " ", "in", " ", "the", " ", "same", " ", "system", " ", "as", " ",
        "above", " ", "where", " ", 
       RowBox[{"x", "[", "0", "]"}]}], "=", 
      RowBox[{
       RowBox[{"0", " ", "and", " ", 
        RowBox[{
         RowBox[{"x", "'"}], "[", "0", "]"}]}], "=", 
       RowBox[{
        RowBox[{"5", " ", ".", "  ", "The"}], " ", "equation", " ", "of", " ",
         "this", " ", "system", " ", 
        RowBox[{"is", ":"}]}]}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontWeight->"Plain"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["d", "2"], "x"}], 
      SuperscriptBox["dt", "2"]], "+", 
     RowBox[{"2", " ", "*", "5", 
      FractionBox["dx", "dt"]}], "+", 
     RowBox[{"25", "x"}]}], "=", "0"}], TraditionalForm]],
  FontSize->18,
  FontWeight->"Plain"]
}], "Text",
 CellChangeTimes->{{3.6386508470133057`*^9, 3.638650860013665*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"x", "''"}], "[", "t", "]"}], "+", 
       RowBox[{"10", 
        RowBox[{
         RowBox[{"x", "'"}], "[", "t", "]"}]}], "+", 
       RowBox[{"25", 
        RowBox[{"x", "[", "t", "]"}]}]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"x", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", "5"}]}], "}"}], ",", 
   RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.638650878672042*^9, 3.6386508834272413`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], "\[Rule]", 
    RowBox[{"5", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "5"}], " ", "t"}]], " ", "t"}]}], "}"}], "}"}]], "Output",\

 CellChangeTimes->{3.638650884739647*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"5", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "5"}], "t"}]], " ", "t"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{
   "PlotLegends", "\[Rule]", 
    "\"\<5 \!\(\*SuperscriptBox[\(\[ExponentialE]\), \(\(-5\) t\)]\) t\>\""}],
    ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6386509163956957`*^9, 3.6386509220098057`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 1, 0]], 
       LineBox[CompressedData["
1:eJwVV3c8198Xtvf42HtF9LUiO97veyKkkFSSpGzZZCWzhOwUkUhRNFCK7BWy
I1tKyN578/P7677O6zn3POc8595zX1fIwsXQmoSIiMiRlIjo/2tqgAWFrFUk
nvh7MiCV/xOeZjJ78orgLWS3y6LKOB+D+vUi3AUF76DOH6HNep5pyFv7KgO5
4EMkGMOb9+5hDiq7MupzYBuLJmTpOHik8xHxl8Kl3d549FL6evjs3QKkVQum
GwLJyM61pOrr91Jk1/Lg0arGc7S3eXtlpr4CRXY11S/ZvkDP4vNs43qqkJ37
O8713ldIZ/7iOZekbyjnnvz9RYG3aOLj++vp8Q2ogqKXb+HTO3RK2s6KpbAR
tUfcKZrT+IBo16VenvjRhJbjK+ambfPQxQvNkm6jLehepEztqt9HpF3Ct0Iz
1IoiWoOZVjU/IWlumNHsaEPPL4h8WO7NR1/KifU09NpR5mPPraX0z8heKdZt
v6gd5XTXay3d+oJKHNy++wp2oIqrt4YXdgpQTKusqtBoB/qeUiK9UFuIEh6R
MgbiP1H7b1q/+eiv6MLDxAfkiT/RsHku+5xAMSr4bjo6p9KJpjMOLGcni9HH
2CTNwNBOtDxm8GnmUwma363TTPrRicjsV85Na5QhBpv4zJIrXYjuw+nkKbpy
9POlfsJCYhdim08Yn+wuRxn5G7qknV1I1F05eMK2EtlczpPiUu9GnAOnbW9z
VqGg46S6Gp7diPfuHP2KXxWqJ1YSfP66GwnyJn5xH65CGXxlCYqd3UikHL+2
rFmN/i6YHj+6342OmU0Qu7+rRizqetS+oj1I6iA2e4mhBt1+LvNLS7cHKZ4a
XlvsrUG2v11MouN60MmRh89d1b6hcb3VR8fyehB+/4TGYvo3pHs+rD+guQep
i/yaciGvRS1P6RnTx3qQdt39uIVbtWjygtrXlL0epGsjqeTSVos4T9w4CGLp
RQaU3b/nT9ShGVL2SjOxXnQp2z/E+WkdOtdD7auh0ouMdUQl5nfqUMNcsjmm
04tMp9s6nG7WI5KMICOTK73IPNLbZ662HlUYuk5nWfYiG0lBAaf/vqPwkGxz
OedeZN/aUDcb/R3RON7/Qu3di5yd3Rwdl7+jJ5M7cUoBvcidkZtl1qgBzR2V
NG2834u8PtYUO5Q2oIdEdXLNYb3o7gWHmzMCjYj4fMDCmYhetH9fkWsoqhH9
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
duy7asWK6NbBgTBYV1LbnaurV/0fEnAdMw==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
    "\"5 \\!\\(\\*SuperscriptBox[\\(\[ExponentialE]\\), \\(\\(-5\\) t\\)]\\) \
t\"", TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.638650922867916*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"5", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "4"}], " ", "t"}]], " ", "t"}], ",", 
     RowBox[{"5", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "t"}]], " ", "t"}], ",", 
     RowBox[{"5", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "5"}], "t"}]], " ", "t"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", " ", "\[Rule]", " ", "All"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.638649661974428*^9, 3.638649692193721*^9}, {
  3.638650929419939*^9, 3.6386509297798*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
MnfO96HKJ9b8k9jc3yeA8fc2mYFnecT/AYuqYaE=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
FCZGtF4ANEeWDjTtwDK6IQfp9nTwbdZI96DZiRNusYVdK2mw3vzuUuyVnTja
aTbibvEcRFrtnmre3omXPwzfVTz2HI61cdcv+277v6t6xS/9HEI7ffZYhu9E
kytMlFprqcA3aDAsmbkT51c8TwgmpYLSPPl0fu9O1OnbMDre8Aw8OGU1urTp
MXGlP1dcJBkecg9fCTWkR4pncc8PLyXBJ974VDUzehyS/o/NvzEJNgU3/6Xa
0+NJqgyDL15JELGrufC8Dz1i3GRMZe9TeH3YTXb9Az2yVR54VJ/1BMZOZ/OL
iDCgpp5wMtk5ETLO/Kuw2sWAw6vJCmXHE8H1rP6lp9IMWBnP3V0klQjTFtOl
fEcYsH/gXdS+iQSYOyflyGnEgOed6I6QzyfAhkNK9s57DHiGO3S5+2Y8cHpE
aiyMMaCFzqjKjncPod2jjyRHYkADgwrDlJiHEH9lf7zHHwake8CSeubmQ+C7
Vj9J3txev7Wpq4QPQeQmXeQkLyMWDdhyxPyMA2lv364+HUaccnoc9IwuDtSD
3S7XvmNEWtCso/KPAYEPA6cj8xjRYvX2gyKXGFjsMTp2qoQR60h7yuMMYyDj
oALvYO02jmf5kysUA0ydK+UrI4zoZ9wqFF0cDR27/bn2CDChsKYx2exvFFys
jCt5EMiElwT+PdKQjwBNMk2GXgQTLhgsnR7cEQEivDej2R8y4elL7DRFfeHb
/e2MU/JzJiyaEPwpFBoOShzCrPmfmfD6LG3oy7EwoLDLsB/9w4SVZh2MNzND
4dFmIb2GDTPeVzmtuWkaDEx7qt0eOTHjesC53D75YLh/srVt4iIzJufqC0+x
B8PV1Knk8NvMyEMfzRbQEgSGxwTkO2KYUXmY0P1yMgjoAr0szlcx43n7ZE5B
80C4zUy8idrHgkOR9z/R+9+H2cO6bMMHWTCGIfgrhdN9cLY2v6GoxIK/hGvU
hHXuw6kcN/h1jAUr/0uvrma/D3LGz9okrFhwhvvO6PcXATD9kGIjP5IFLXaH
KTxrvQeWQpX6vQsseMMpPZOk6Q/Tl+f/5K+xIG2lYwUh4w+3y0QfR1GyYs98
l1IBuz/E23uPHWNlxa9O5yy4BvzgR9Zh31fSrEh0TPwK8vID3cNZOTftWDG/
dUKUuHkXVA0jONi/s2LNm6X3lzO9oe5ZSeH0T1Zs+z4QlOHtDWfmp6yrelmx
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
t2O9YQ==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVV3c8198Xtvf42HtF9LUiO97veyKkkFSSpGzZZCWzhOwUkUhRNFCK7BWy
I1tKyN578/P7677O6zn3POc8595zX1fIwsXQmoSIiMiRlIjo/2tqgAWFrFUk
nvh7MiCV/xOeZjJ78orgLWS3y6LKOB+D+vUi3AUF76DOH6HNep5pyFv7KgO5
4EMkGMOb9+5hDiq7MupzYBuLJmTpOHik8xHxl8Kl3d549FL6evjs3QKkVQum
GwLJyM61pOrr91Jk1/Lg0arGc7S3eXtlpr4CRXY11S/ZvkDP4vNs43qqkJ37
O8713ldIZ/7iOZekbyjnnvz9RYG3aOLj++vp8Q2ogqKXb+HTO3RK2s6KpbAR
tUfcKZrT+IBo16VenvjRhJbjK+ambfPQxQvNkm6jLehepEztqt9HpF3Ct0Iz
1IoiWoOZVjU/IWlumNHsaEPPL4h8WO7NR1/KifU09NpR5mPPraX0z8heKdZt
v6gd5XTXay3d+oJKHNy++wp2oIqrt4YXdgpQTKusqtBoB/qeUiK9UFuIEh6R
MgbiP1H7b1q/+eiv6MLDxAfkiT/RsHku+5xAMSr4bjo6p9KJpjMOLGcni9HH
2CTNwNBOtDxm8GnmUwma363TTPrRicjsV85Na5QhBpv4zJIrXYjuw+nkKbpy
9POlfsJCYhdim08Yn+wuRxn5G7qknV1I1F05eMK2EtlczpPiUu9GnAOnbW9z
VqGg46S6Gp7diPfuHP2KXxWqJ1YSfP66GwnyJn5xH65CGXxlCYqd3UikHL+2
rFmN/i6YHj+6342OmU0Qu7+rRizqetS+oj1I6iA2e4mhBt1+LvNLS7cHKZ4a
XlvsrUG2v11MouN60MmRh89d1b6hcb3VR8fyehB+/4TGYvo3pHs+rD+guQep
i/yaciGvRS1P6RnTx3qQdt39uIVbtWjygtrXlL0epGsjqeTSVos4T9w4CGLp
RQaU3b/nT9ShGVL2SjOxXnQp2z/E+WkdOtdD7auh0ouMdUQl5nfqUMNcsjmm
04tMp9s6nG7WI5KMICOTK73IPNLbZ662HlUYuk5nWfYiG0lBAaf/vqPwkGxz
OedeZN/aUDcb/R3RON7/Qu3di5yd3Rwdl7+jJ5M7cUoBvcidkZtl1qgBzR2V
NG2834u8PtYUO5Q2oIdEdXLNYb3o7gWHmzMCjYj4fMDCmYhetH9fkWsoqhH9
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
duy7asWK6NbBgTBYV1LbnaurV/0fEnAdMw==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"5", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
            RowBox[{"-", "4"}], " ", "t"}]], " ", "t"}], 
       RowBox[{"5", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
            RowBox[{"-", "2"}], " ", "t"}]], " ", "t"}], 
       RowBox[{"5", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
            RowBox[{"-", "5"}], " ", "t"}]], " ", "t"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.638649687197551*^9, 3.6386496926270323`*^9}, 
   3.638650930379838*^9}]
}, Open  ]],

Cell[TextData[{
 "\n",
 StyleBox["Case 3 (underdamped): ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Lambda]", "2"], "-", 
     SuperscriptBox["\[Omega]", "2"]}], "<", "0"}], TraditionalForm]],
  FontWeight->"Bold"],
 "\nThe system is said to be underdamped because the damping coefficient \
\[Beta] is small in comparison to the spring constant ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]]],
 ".\nAssume ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Lambda]", "2"], " ", "=", " ", 
    RowBox[{
     RowBox[{"4", 
      RowBox[{"(", 
       RowBox[{"therefore", ",", " ", 
        RowBox[{"\[Lambda]", " ", "=", " ", "2"}]}], ")"}], " ", "and", " ", 
      SuperscriptBox["\[Omega]", "2"]}], " ", "=", " ", 
     RowBox[{
      RowBox[{
      "16", " ", "in", " ", "the", " ", "same", " ", "system", " ", "as", " ",
        "above", " ", "where", " ", 
       RowBox[{"x", "[", "0", "]"}]}], "=", 
      RowBox[{
       RowBox[{"0", " ", "and", " ", 
        RowBox[{
         RowBox[{"x", "'"}], "[", "0", "]"}]}], "=", 
       RowBox[{
        RowBox[{"5", " ", ".", "  ", "The"}], " ", "equation", " ", "of", " ",
         "this", " ", "system", " ", 
        RowBox[{"is", ":"}]}]}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontWeight->"Plain"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["d", "2"], "x"}], 
      SuperscriptBox["dt", "2"]], "+", 
     RowBox[{"2", " ", "*", "2", 
      FractionBox["dx", "dt"]}], "+", 
     RowBox[{"16", "x"}]}], "=", "0"}], TraditionalForm]],
  FontSize->18,
  FontWeight->"Plain"]
}], "Text",
 CellChangeTimes->{{3.6085146464497695`*^9, 3.6085146574794006`*^9}, {
   3.6085146893882256`*^9, 3.608514691787363*^9}, {3.60851482111876*^9, 
   3.60851487305173*^9}, {3.6085149265027876`*^9, 3.6085150469286757`*^9}, {
   3.608515095030427*^9, 3.6085151709677706`*^9}, {3.608515223136754*^9, 
   3.6085152667162466`*^9}, {3.608515308284624*^9, 3.608515376938551*^9}, {
   3.608515496731403*^9, 3.608515518796665*^9}, {3.608515557150859*^9, 
   3.608515858711107*^9}, {3.6085158971433053`*^9, 3.608516033287092*^9}, {
   3.608516066576996*^9, 3.6085161025810556`*^9}, {3.6085167629998293`*^9, 
   3.6085167919084826`*^9}, {3.617957730131983*^9, 3.617957731614068*^9}, {
   3.617957780039262*^9, 3.6179578194933443`*^9}, {3.6179578857374964`*^9, 
   3.6179579128045373`*^9}, {3.6179580076799884`*^9, 3.617958009146445*^9}, {
   3.6179581298324223`*^9, 3.617958233417737*^9}, 3.6179595217719417`*^9, {
   3.61795957050815*^9, 3.617959574377124*^9}, {3.6179596442682595`*^9, 
   3.617959689214876*^9}, {3.6333549613888655`*^9, 3.6333549656319866`*^9}, {
   3.63336110378596*^9, 3.6333612116867895`*^9}, {3.633361572673644*^9, 
   3.633361615142288*^9}, {3.633428385583096*^9, 3.6334285759691687`*^9}, {
   3.634053375179511*^9, 3.6340533754646535`*^9}, {3.6367345204501762`*^9, 
   3.636734696989667*^9}, {3.6367347270737114`*^9, 3.636734805674693*^9}, {
   3.6367348399356594`*^9, 3.636734878394562*^9}, {3.6367351292770567`*^9, 
   3.6367351410232735`*^9}, {3.6367352329525785`*^9, 3.636735236423006*^9}, {
   3.636735270724*^9, 3.6367353145776763`*^9}, {3.6367353521599655`*^9, 
   3.6367354978758955`*^9}, {3.6367355648957767`*^9, 3.636735656666971*^9}, {
   3.6369768974365826`*^9, 3.63697690405053*^9}, {3.638268991429946*^9, 
   3.638268996547399*^9}, 3.638269369360228*^9, 3.63864604214491*^9, {
   3.638646086934072*^9, 3.638646221246056*^9}, {3.638646290102022*^9, 
   3.6386463149129868`*^9}, {3.638646420106522*^9, 3.6386464223859653`*^9}, 
   3.638646684919322*^9, {3.638646730888052*^9, 3.638646780649444*^9}, {
   3.638648488301412*^9, 3.6386485087927933`*^9}, {3.638648910144072*^9, 
   3.638648932460795*^9}},
 FontFamily->"Gill Sans MT",
 FontSize->20],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"x", "''"}], "[", "t", "]"}], "+", 
       RowBox[{"4", 
        RowBox[{
         RowBox[{"x", "'"}], "[", "t", "]"}]}], "+", 
       RowBox[{"16", 
        RowBox[{"x", "[", "t", "]"}]}]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"x", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", "5"}]}], "}"}], ",", 
   RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.63864893399006*^9, 3.638648948017909*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"5", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "t"}]], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", 
        SqrtBox["3"], " ", "t"}], "]"}]}], 
     RowBox[{"2", " ", 
      SqrtBox["3"]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.638648949230955*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t1", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    FractionBox[
     RowBox[{"5", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "t"}]], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", 
        SqrtBox["3"], " ", "t"}], "]"}]}], 
     RowBox[{"2", " ", 
      SqrtBox["3"]}]], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
    RowBox[{
    "PlotLegends", "\[Rule]", 
     "\"\<\!\(\*FractionBox[\(5\\\ \*SuperscriptBox[\(\[ExponentialE]\), \
\(\(-2\)\\\ t\)]\\\ Sin[2\\\ \*SqrtBox[\(3\)]\\\ t]\), \(2\\\ \
\*SqrtBox[\(3\)]\)]\)\>\""}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", "Purple"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.638648954824876*^9, 3.638648975698078*^9}, {
  3.638649765766513*^9, 3.6386497679786158`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0.5, 0, 0.5]], 
       LineBox[CompressedData["
1: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
5v/+ZfO5ST7o/drp+v8DAf/nOg==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
    "\"\\!\\(\\*FractionBox[\\(5\\\\ \\*SuperscriptBox[\\(\[ExponentialE]\\), \
\\(\\(-2\\)\\\\ t\\)]\\\\ Sin[2\\\\ \\*SqrtBox[\\(3\\)]\\\\ t]\\), \\(2\\\\ \
\\*SqrtBox[\\(3\\)]\\)]\\)\"", TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6386489767873793`*^9, 3.638649768392969*^9}]
}, Open  ]],

Cell[TextData[{
 "Assume ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Lambda]", "2"], " ", "=", " ", 
    RowBox[{
     RowBox[{"9", 
      RowBox[{"(", 
       RowBox[{"therefore", ",", " ", 
        RowBox[{"\[Lambda]", " ", "=", " ", "3"}]}], ")"}], " ", "and", " ", 
      SuperscriptBox["\[Omega]", "2"]}], " ", "=", " ", 
     RowBox[{
      RowBox[{
      "16", " ", "in", " ", "the", " ", "same", " ", "system", " ", "as", " ",
        "above", " ", "where", " ", 
       RowBox[{"x", "[", "0", "]"}]}], "=", 
      RowBox[{
       RowBox[{"0", " ", "and", " ", 
        RowBox[{
         RowBox[{"x", "'"}], "[", "0", "]"}]}], "=", 
       RowBox[{
        RowBox[{"5", " ", ".", "  ", "The"}], " ", "equation", " ", "of", " ",
         "this", " ", "system", " ", 
        RowBox[{"is", ":"}]}]}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontWeight->"Plain"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["d", "2"], "x"}], 
      SuperscriptBox["dt", "2"]], "+", 
     RowBox[{"2", " ", "*", "3", 
      FractionBox["dx", "dt"]}], "+", 
     RowBox[{"16", "x"}]}], "=", "0"}], TraditionalForm]],
  FontSize->18,
  FontWeight->"Plain"]
}], "Text",
 CellChangeTimes->{{3.6386490385258303`*^9, 3.638649057457694*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"x", "''"}], "[", "t", "]"}], "+", 
       RowBox[{"6", 
        RowBox[{
         RowBox[{"x", "'"}], "[", "t", "]"}]}], "+", 
       RowBox[{"16", 
        RowBox[{"x", "[", "t", "]"}]}]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"x", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", "5"}]}], "}"}], ",", 
   RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{3.6386490748406878`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"5", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "3"}], " ", "t"}]], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        SqrtBox["7"], " ", "t"}], "]"}]}], 
     SqrtBox["7"]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.6386490763907347`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t2", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    FractionBox[
     RowBox[{"5", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "3"}], " ", "t"}]], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        SqrtBox["7"], " ", "t"}], "]"}]}], 
     SqrtBox["7"]], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
    RowBox[{
    "PlotLegends", "\[Rule]", 
     "\"\<\!\(\*FractionBox[\(5\\\ \*SuperscriptBox[\(\[ExponentialE]\), \
\(\(-3\)\\\ t\)]\\\ Sin[\*SqrtBox[\(7\)]\\\ t]\), SqrtBox[\(7\)]]\)\>\""}], 
    ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.638649089051762*^9, 3.6386491207721767`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 0, 1]], 
       LineBox[CompressedData["
1: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

        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
    "\"\\!\\(\\*FractionBox[\\(5\\\\ \\*SuperscriptBox[\\(\[ExponentialE]\\), \
\\(\\(-3\\)\\\\ t\\)]\\\\ Sin[\\*SqrtBox[\\(7\\)]\\\\ t]\\), \
SqrtBox[\\(7\\)]]\\)\"", TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6386491017292757`*^9, 3.6386491211624393`*^9}}]
}, Open  ]],

Cell[TextData[{
 "Assume ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Lambda]", "2"], " ", "=", " ", 
    RowBox[{
     RowBox[{"25", 
      RowBox[{"(", 
       RowBox[{"therefore", ",", " ", 
        RowBox[{"\[Lambda]", " ", "=", " ", "3"}]}], ")"}], " ", "and", " ", 
      SuperscriptBox["\[Omega]", "2"]}], " ", "=", " ", 
     RowBox[{
      RowBox[{
      "256", " ", "in", " ", "the", " ", "same", " ", "system", " ", "as", 
       " ", "above", " ", "where", " ", 
       RowBox[{"x", "[", "0", "]"}]}], "=", 
      RowBox[{
       RowBox[{"0", " ", "and", " ", 
        RowBox[{
         RowBox[{"x", "'"}], "[", "0", "]"}]}], "=", 
       RowBox[{
        RowBox[{"5", " ", ".", "  ", "The"}], " ", "equation", " ", "of", " ",
         "this", " ", "system", " ", 
        RowBox[{"is", ":"}]}]}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontWeight->"Plain"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["d", "2"], "x"}], 
      SuperscriptBox["dt", "2"]], "+", 
     RowBox[{"2", " ", "*", 
      RowBox[{"(", "5", ")"}], 
      FractionBox["dx", "dt"]}], "+", 
     RowBox[{"256", "x"}]}], "=", "0"}], TraditionalForm]],
  FontSize->18,
  FontWeight->"Plain"]
}], "Text",
 CellChangeTimes->{{3.6386490385258303`*^9, 3.638649057457694*^9}, {
  3.638650670576912*^9, 3.638650700344307*^9}, {3.6386507547689466`*^9, 
  3.6386507844396067`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"x", "''"}], "[", "t", "]"}], "+", 
       RowBox[{"10", 
        RowBox[{
         RowBox[{"x", "'"}], "[", "t", "]"}]}], "+", 
       RowBox[{"256", 
        RowBox[{"x", "[", "t", "]"}]}]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"x", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", "5"}]}], "}"}], ",", 
   RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{
  3.6386490748406878`*^9, {3.638650705574162*^9, 3.638650708789638*^9}, {
   3.638650788652967*^9, 3.638650792205558*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"5", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "5"}], " ", "t"}]], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        SqrtBox["231"], " ", "t"}], "]"}]}], 
     SqrtBox["231"]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.6386490763907347`*^9, 3.63865071326003*^9, 
  3.6386507928421392`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t2", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    FractionBox[
     RowBox[{"5", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "5"}], " ", "t"}]], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        SqrtBox["231"], " ", "t"}], "]"}]}], 
     SqrtBox["231"]], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
    RowBox[{
    "PlotLegends", "\[Rule]", 
     "\"\<\!\(\*FractionBox[\(5\\\ \*SuperscriptBox[\(\[ExponentialE]\), \
\(\(-5\)\\\ t\)]\\\ Sin[\*SqrtBox[\(231\)]\\\ t]\), \
SqrtBox[\(231\)]]\)\>\""}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.638649089051762*^9, 3.6386491207721767`*^9}, {
  3.638650720025488*^9, 3.638650722585391*^9}, {3.6386507977842484`*^9, 
  3.638650801062222*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 0, 1]], 
       LineBox[CompressedData["
1:eJwUV3c8198Xtvf4yJZCMirZofC+F5GdvcneK6uMVJSQPVISspIdJcT7bSV8
kZURRfbee/78/rqv8zrnPOc5z+vec+/lsvbQsSPAw8OTIsHD+//6LtiaRMT2
JeKAzQW/u/gJSTdZumXI6QSMcSHcIosxYFgj0ouT0x/g5DsNCZ3TwYM7xjTE
nBFgq9ZNftm8GNQaTj48dYgFDy/L8jASlQP8z5XrR4MJQH/koOyx+Beg1AzN
djnegGuy2TjSy9+AY8fz+C2FNMBznBTQ968OvOxvb1l3yADgvM05Hpl6YLhC
Gryr+B4wU1LFPPNuAI5eBSw7g1mAHncVm3rVCPx31Cu2nHKAHMe2k1BeE4gM
WNXYPMwF6536Qqbvm0HaSfzcevQH8OIZl5BL+HdQHCIeusbxEfRQvMp1N20B
KMnghdVPBaBg3+fZE7YfoDvSv2pZoQh0mXCQ/fj+A/yjYddd+lUM6m/TqXib
t4KNBHR5waEU2MWyt9f/awUhL4Wbt4LKQM5gPeG2ThuI7HxKt6X4CXxaO16y
+NQGEmn7LDZpysGFN0dPDY7bQJr25aKNwXJw3DerLCPZDnISfffXMyvASs7d
Xw/vtYPiXy1K606fQfYlV9Ugv3ZQycyStCb6BZhPJI/WBbUD1Njp3+rhFzD/
QUnnm1c7+PG2RnC1uRKUU28+2zNqB91/KINWor+C/MeUEydC7WCIw7xt2aAK
pLt7LpnttYF/ViVMyxzVQB+XjeaWt4GF7FObpblq4GK4H+15rw1sTGt9WvxU
A7xoWIWMTlvBIV/WyULAN/D1+uHbg4RWQOS8qbagUAuW330J3GNrBVRFt9/M
U9UB8Vyloq2UH4BxJXlm7lcd2LqZ2pVI8QPwekk9nXXAgNWmVJJu33fA8vu2
gzdLPZDGczNsvPodsAcuU28G1YN/O0d+HgHN4HIdYrqh2AA4CBxpOImbgITc
v+21wUYgwHmdtKoCA7cmItI8ZZpAeRpDXTAFCpBQUYW1zCbQjwb7/TOtBXe+
h8atOjUD7ue9ccKbVcBIhffayuF3MM3V2HKPvhyYLXT1uFm2gIg0OvI3FmXA
6uWDh8vNLWCEonmXz6QYOHe2fl+K/gGCjSgYDkryQKC2i+UiRxuoj/j2vnEm
EZyESrCORbUB1d3Y0dAvkeBJJX5v734bEEx93yi2FgienX+tUNPXDi6wb3xZ
+eKDkWjaHBXD/4AYy4uijunnWMQTwS/vi/8Du+Q1SmJP4rCY6WbeiBcdgE62
lE58IRXDscSNBW11gJAtlYemTRlYgqrpa0+rThDnHeabK5iFMTzi1bbt6gS8
cai0vWkOllK6Tm4k3QVC1b3Y7jvkYWwTtY1q+V2gsYsswVonH0tjCA8EjD8B
L0/53vr5AuziHV1xsZCfIDkjpHOtqRDL9L+4zLv6EzzzTzhRUS3G6Aa2dKgF
u8GrzXPc+KUlmI6HidAL226gXKRaILJRiiWR1VPiv+0Gv0Jv4JFGlmG/3vPM
BfR0A68pZn0Pik8Yk/TL5i3SHhBlwF70JOATZtS/lumO9IB7Xs/3vX9/wt64
GTya8+kBsn91ul9eLcd+k9QaWxf2ABM9lQl6l3LsfCaXxOi/HmCRXvDIMq0c
M7v54pwBSy9o+kxN3oWWY+96l1Z+avYC/9/Nj+p7y7G/Ljr/qTzvBSbHMv+y
hsoxDuKqD03fesH2KFo3012OWaZfeCa70QuoHu+mEtaWY1mSoZZf+fvAy7sF
fn6p5dhk95yMyL0+8GxrUbbBtRy77KzJWpjcByqs5O44i5Vj9oSfty939AEW
psPOw5VP2Ic01t50gn6wXcTpQZj5CZu78biE5WY/CKWWzae78wm78nMqMsGj
HyjHGBpVT5Vhzo6qDlR5/YBY31oh1r8MW0pl5MSj/wU+j13cRphKsevigUf+
Kr9Ax6LxebpzJZh75/jQ5uNfoEgzmXIfrxhbPy2Mn136BY5yfj1qqi3Admzl
CX+2DIC522nZPR25mOTJhzHl4wEQ2JpR/+9pDvYwhbq2UWwQsGiZSvGLZWOH
bUM+lZmDgL5XkCYyJhPDE/KYeRcwBBy+fydrDH+FybX2NzJ/GgItabrZ51cS
sRCrWxnxs0NgJCXBk9Y0HiNKIjZ6rjcMkFWs6lxOOEa+/7bNVfA3kHmsvZD7
xx6TejEcoGr1GxxVbvylN1bBHBmZBfiTfgP3Qadwewdd0CKSEDO5/xs4pVji
l5z3ATvYT9AgMAJeXS7ZuKwbCHg0qdfT740A9RZrngTOp+CZc7iuyfcR0DVJ
Jmme9gJ83vtOJLU3AugfTRf4ZUSCyTDCSsZroyDte1W8R0A0OMco57BpPgpm
1CTLzZnigHx2MEtP3CjAeQe/2TaJB14itW0lTaNAlXbuyUBkAniP7QdE7YwC
ASnm6OncRNCtISngfOUP+Jok+oGxKAngjfr8uWP2B0QqqLI6vEsGws7lMTyx
f8CIzwOeWf9X4N7eKiBs/AN8xDlfl8qlgJiw6+vjW39AS16b/sxWCkAZXLJQ
vr/g4uOJqdrE12A5K183zeQvePltZdPj4hvALjJDFBD9F8jVBY0qJb8B6hh3
pWH9X+CZo8qduPcGBGpYOdzY/AsG7+PvlCqngoKRdBZ63jFQ8Gs+Dz8sFfx2
Gm1bMxoDCq1HvNtlqYB8jzWw6+UYeE5TFnzalgqkwgwFitAxMJ8zqviuJxU4
MiT/iVgfA0S1bOd1WlOBurbTD7Fz44AwYIktvyQV2LKQZWZdGwfrLDSGQs9T
QeBY3kM6xXFwURZoPlJPBQl5itpPLMbBfMiArQDxGR+3qSurD8bBopqbxUjp
G9AoHkpgET8OshpXhgQ03oDfh1wjHQXjoHBSu63lz2uw0VhfId08Dlo4FQ60
rV8D8sh7UQV/xkHB1EmU/0gKkGJ5JxuO+wfSv+5x65a8Alpj0ky7V/4B8fnX
Ldbkr4Bj3u8VO4V/oHTqKXubaTJIEWfJVPD7B8zjjByM5hPBjlYiwenIP1D1
FVWIqIkDNCyiI27b/8DFI/nsDy2xgHesu2KUZgKUnbuUlEUXA/TdaOxq5CaA
wJQTc8/rSPA5IuKH74cJwFXctV4RHQruNz6OWvKaBD8Wb9LdJncEe3RJxSMv
J0GUdsG865gVCLbK72rPmQTLk+Ud9p8NQRReD+7jwCT4GxWoyDmKD+i1pkVe
r06CrRN/73skilhqxr7OC7IpEK5fbY1/Sx/LRy4l292aAi9mTEl/NNliQjES
lXq6U8AsQohq76UTVvlHdVDBdQp83bdaEOJ0x5qDvFkvpU+BeAOhpHN63pha
x4tbdF+nQAJhrwyehi/Wez7NFK97ChByVKfRXH2Ajdc0v/uLPw3UmX1uhsYG
YA4Uw2gn2zRIxyzVEpmDsBXj5bFasWkwwRbbyxT6CPP9iI9fpD4N7krUJ9D2
BmNHe4yX3tpNg2JVoyvKBE+wUOWrCpHB0+DRCR+fRfQTjOI1YuufMg0oRD9p
21A8xeJndZ47lk0DlbCw0Yf+TzEWSYc8w7Zp8G/VUfvH76dYRljgD6WJaTCA
VweCBUMw3oHYuRuH02AuWnKhzycEK+bJIedhmAG33uBtEpWEYOK+VVcZrs8A
J+9IEr3fIdi35g41QqUZ4Ldq/Jz8IASTZ/jnumExA6T1DwW8qUOxNpvt6H8P
ZsCr+xb1kwyhmFYFeWl33Ay4XN9bWo4LxQYJLnZjH2fAqcBIvTR+KGahI7pe
0jgDnpvRVv6dCcGm3yudSx+ZAaL1yO5JQwjmum4iFr01AxpJyW4RJoZgm9BD
L4h6FtRXMF7TNwnBAuJCfV14Z8HJF0EWK5YQDH885ZUJmAUXeZTfJnc+xcKF
ir6qGM2CGsYmJZuApxjt4/ohqfuzgK34VEeG4yn2qqt/ny9yFgQFuGok1T7B
ctyOpUlqZ0H8f0+5+b8/xq7V0Zlv98+C8L/rdRpDwVg5FW/w1PIsSA70YmYf
f4RhhZr1jRxzIDrnePpeTyCmdGj975PUHAhxXhP9WBuAdag+IHivPQd655tm
5TL9sd/zGbcfh84BCzG99Q3dB9gO33qr9OwcODK0p3z93AsTzEns+VwyD2Td
zBiaIq0whtfCu/Vt82Ay9R/n8oE5dviyk71zah6Ik2jKVmwbYa3epI7TbAtA
pbCIiN5NEytxyIlev7EABOM4SJIIFbFkU7mKY60FQD/8wZGnQhKzVgg8YXyx
ACjEnFN4CnmBsiTL5UtZC+DRpqs7diANhK59URGsWwBKpHMuq3hK4OjcapLS
5gKoOLltEvZCB0yQRNXo0CyCXh+OizcpDEDrAf+4xZVFcLmF9AOwNAbJE9bX
HtxbBKMFRZR/Qu6BoIFTrdCARcBC85gDx2cFrNvT/GKTF8GW/hAPqa81UEZv
pr0tWwT1eyPV1wttgGD5QMOH/xbBBaeyDY82W8CQ5z1bMbMIMs/dNfjvpx04
fIOjrsdfAkcBWqqaqD2YiC4W7WBfAicszx4xJzuA1qeqRkOSS2Dbe19VX88R
lPjOPprSWQIFRhzMikeOINnpWfaa2xKQxtI+iEY7gSBzrraj8CXQavnc7wGp
M7DWRlfIcpbA5lEEfoCLM1BWNGVgxJbA4XIDY3G1MxC6uXeT6/cSaF7LZ4nd
cAZM15PvXd9eAjZbc5ofmVzAEafo85u4ZQBtnnHF8rqACYafBYrXlsF6/rrV
n0suoI3MtVtbaRn0NX6OvknlAsqOyHbMrZbBptcpnfakM3i1lnveOWgZKEiM
xg7lO4OgKXk5v5RlMOtrw/XS3BnYDI3Zh5QvA5pI38wrBM5AtSMoKqZzGYyy
eqz6pzgB4XrW8tS5ZaAnqHxb6aITYPpcOZhHuAIitsP9zFIcwfEH3ePyiytg
5Zu/VjShI2iPjVb+T28FiFkTT0ZV2YOy0Kvugx4rYLboxjExoT149eBH4mTk
CjClWoXLCnbA5h7+2GH9CuhVnfluVmQDVHXTichGV0DXYGxF9C9rIHxH+irD
7gqQLNakfLRnBY4EfX0Frq+CsZVh+x5BS/DqZI7S/M0qKPxYfsF0xghMazqy
j0mtgYA5Zkn/eQXA0OJ6OVhxDdx76+6Z/QYCedn7Ahd01oCze4BaVfktkHkt
QMbUZQ202ODSR24IgJ9ZwbcPHqwBAgf0wpNznOCENVT9zbM1cJXpMZchDT4w
I4syG3y3Bp5sVim/Ur2EvXwcZ+tXsAZKbALi4/CvYzU7Sa6MX9dA0E1Dge8f
xTDm6XdBut1rYFtfvGfGXBZTMst6tjG6Blg/NXrxbULMpy8vKn5+DdgoZl+3
OK+A9TaUpv0kWAdeCYTKxEx3MPybn3PcadcBE+9ER+OsMiZcVlVEzb4O1HVI
/NjTVDELvrrPRfzrYPDCvOyiqDoWnd5Qq3ZjHRz5OzicL9LAahlbmhfk1gGN
Am6rkPQuthDV3hGhuQ5uESWQD17SwliJfvbzm64DPeal25cqtDDlwL7RHw7r
YNXka2SPuDb2YGNwyt5nHQTlD0+S5GtjeU6jS8RP1wEfJiG0RKWD9Y+Pb51N
CBBBce2/chsdjNBo+kghdR2MxtHIJhbpYKI/54km89ZBezjxYMesDmaptEIV
UrEOeIltzHIZdbHYug0Grvp14L0+nuMooYuh4rvs9R3r4LXiKuKoqostFx5e
vje8Dh7PmdAdauti7Nx410+m10El/8ujIA1dTDWV6Ma7jXXgRpUYqCmri/nT
kcvKnK6DgV1txX4uXSw/nFpxhHIDROv8WfY71MEGTuk0Alg2AOGsc3hWuw5G
/IBJn5VnAxx/XVdpidXBxFfYzKtENkDyzmcBPTUdzMaOw84Q2QCuWQtJ9cfa
WMIot9uO6gbQFCreefpBG6vX5fdNNtwAb7TsHuFUtLHVdoFH4rYbQLRl4PP0
hBZ2UV7keZ/nBvhdtScW5KuFqVffiPZ6dFZ/DFO5i6+FFXxA3pW92gCBX7e0
xKk1seGLCrl3szeAF2tV2TkCDYzs1Z3ildIzft5sRUrLapjdM606gbYNoL9E
jfekQAXjtLL+k3+4AdxZP2aZ/L6NpbCFXXhvuQlMRfO0F/JuYDuTXR803TdB
VR+YSD4SxfSKmUWPAjfBw4XZ58Smwtg5+FHJMGUTIDpsSRT3eTFP8o1uotwz
/4FPPqMvF/az95Zpefkm+PbOh+NAgBWLsuvwoO7aBJc2yUcbfu+jC4KMBzUj
m8BkxObgfvskorJn/sxxfhPItfeQN0mRAJKXq6+biLbAp4IIWXu388BWT4r7
/rkt8JWS6kdIJBdouvC0+CLnFpCtI16PEOEBT8rONfpLb4HIEwvajq1r4K+/
qTqfyhaIjXGukaQVArIKOQP9BlsguS3S9d2RMEijWrYMsd0CjcqT168ai4KD
XzcWhby2gHREoyrjOzFglBHs++fxFnAfymZRbBUHXx1/nEZGbwGlMOnI8t83
AJMoLlLq7RaIsSF77dgvAXwOjRhm8reAMudiZugXSdDb/D49sXILHPH4NwkH
SwGRmAV+ueYtkNOBCRcL3gRxhmIVKz1boDT2mr/ij5tghTNINm1sC9yTVOzX
U74F1Beaf6gsb4Gx1i2b22fzprCCWmf3YAuoPdn1jiSWBhSPDEZzyLZBILdY
5Ud5aeColGGvw7QN5rOjg4SdpUEL7dzaKfc28NZbWvsaJA14hoUDi0W2wdrS
vtpkgDR4luVPbAq2gYysJuU9O2kw4dIYS6axDUY7ovnGZaQBvEHJVmmyDcqq
z6lxE0iDjBPdHBvHbVCKX0i+9OUWOPmRJkjntw1u4m2yEhnfAmbx01Vo6Dag
0O2Mu7V0E9SYCCq4xm8D4hRvDhvPm4D18oNO1oxtcCMkWU9/Rgo8XMYMfxRt
A5+e7fFFTSkwUEk24VOzDTr1VsYICyWB+BNt10ut22D9EnI56FACJKqk7vz8
tQ2k8oIjxOUkgNboNcpr69uAy9HXfKZUHJTk+iQPnWwD2a+e/em/xQC1Rx1H
GNUO4Ft1UWQ4EQXt+HfF//HtgIcun5Pei4qA23xe5ikWO8Dm+XY8bd9VcNOr
qpSwYwe0pOrFm80wge5TaYv7wztAhNqLRkGFHthHY1RjMzsglzs5QMmfFiTk
tzjV4O+CvS9pHX1V+IBfQpWFn3YXcPBorOuK7CBoU2dLMvsu4JGJAvTpE8jC
337u+5K7YMuH8HVO+Ar6xNWo9+/tXTAutyx9tHCAMh2MPFHX2QUwfizanpYQ
U2Cc/MPntgsqKWje0cRSY7+z7KOSA3ZBaFCpa6UUHeYpvHCLMHwXlLb0inVG
0GNpauspf7N2QS1hbNDzNmZMdNhHSb1sF3Ar+ObqfWXFWu33tqrrdoFZ8eRr
u9DzmMVWYDbff7sg6D+RG3HXL2BbT0+1k4d2AftIIOf3LxexSNpQPMKZXaDo
ox9KQsOJcb4jKfXc3AUUC1EzCmWcWOXVSPO/eHtAUN387xc5LkyjippKnWYP
fBH7qR3SyIVNKcbXVJ/fA7Zrlg+GRS9hAX0MTnxX9sAls2CL7YRLGM7qNXOy
xB5oGNzzZZ28hOWtnG8huL0HfJ2WaBO4uTGZoAwfT+09YCLxaLJCjxvrJefm
/muxB1zSBqJG/Lgxx5S8HjXXPRCI10fpFsmNnVy++qTafw/UnJTJ9cVyY0nl
xYJ8L/YADZOU++MX3NhVKPInKWkPZHAUFc3d58bqOz+/JMg6szcXPV/e5cYM
TKVueZbugcpQBuJ5Tm5sae7b3J/aM75+J6QvZi5hIX4gRa19D9Cvzi2tZF7C
WIiaFKsH98DbmsygYq1LWGm80hbv9B745e1hpLPDhSlxtGclbeyB5jdsjz0S
uLDRIg1tArx90NQo0f+ahwsja9Ur+cO2DxCOe5r2YpxYuv6QmRr/PsB184h7
WHBg4pOmlNU39sFmUSLZH+WLmOWJtWOS1j5oYZ2z6To4j+28nGEisNgH1Qxh
xR+a2bAoVufvHi774ONekdTOc1asWvz+JbWwfRAqZ88StMmEnXN5PIpfuw9I
nvqYDb2mw5oG32p58B0AYSH10L5Ph2iStf7WttgBEO/7nfxzfwe1X6Z5HQQP
QOkFOzYtow2UgjBkLML4AFibpfO7NU6go9HSoTj7A1BPK+0zL9uPFrNs86Z4
HYD32imh1Y8LUS1BR/eclwcggjXLzfvDKHKpmuvctdcH4MmFMOovG9PIlsLI
l085B6AEm8aVqiwjKcaax2jdASiLD+NxermNOE6RvldsPwC0xcJkr5v3kFse
Dbc7Bg7AVp4H88GvQ+TvM/Go4dUDcI95wcoVwwNltCtClkcHYD7lun8pBQEI
Sf3QN0N2CH6lveVilCMEejxWD9wYD8Hst6C5EGsiwFPGdn6L6xDEfgnsWnQn
Bju3+tEAwUNQINM6e9eeBLR+j7bGlz4EuSVSu9+USUGq1h2S8DuHIEG4i0iF
iQy4juAV0OgdgibPk9XzP8kAYl+jkWx5CG6O8JzYepMD3Lr3+nm3QxDp8Mzu
HiEFmAi8npzlfwiuqvD+0npMASpIZqWuhB0Ch68sB+GzFOBZfOZoacIhEMZU
CKxkKIEBu8kTiYxDcP+t5wXpYErA/4H+cl3hIfDwMjl6WkwJDkQ6fyhUHQK3
F9ua+e2UoKM2zKW9+RDcOPGS4x+gBOl3IK12zyGoE/21F9JNCTx798sH/xwC
XweEFtZQAjnzCgOLhUNgJKyNW06kBOfmXA+mdg4B+5P1bXYLSjDlxZvuQngE
mrLKcx1YKUHl8ZjcBu0RSK6T9nBqoQDh4W+mH7IfAbP0+ZeNdhTAhF434pT/
CFg0rWcw7ZEDgXSq62E3jsCVhDuyVMHk4IS/pZtK/gi8Ln7qqL5HBn5WPPZJ
1DwCeCoHHCEOZCATucnCZnoEMqWsp407SIFX28a3TIcj8NDwUOUpHylgGrMj
LHlyBA7dmf89aCIGc04cH8Sjj8Bz7uXUbGJiULM1pPrtzREQF3gpPAiJgDmF
ekJr+RHIN3gSSZJLAHJuiHJNTh0BgXxX3zW3E0Qk6gRhUTkGwue1DADzGiLq
dGRbbHAMdDjmVC1NlxBxpYNIedtjkPVpbp8laQ6RwNsZcH18DHz/noywi/5D
pP5sHuFHH4Nvp4chqpIjyM2a9UspqcegqcuJ5ki0H5HxWXZv+HIMpuQjZZzb
axBEezHJoOkYaMc+4YqNckeA4HzNYvdZvo/ofCJFFSo/N0XCtHQMju0uWVkP
9KC3v08IFO4fg2c94n2NdoOoYta4DiQ9ATmqj1y5KkdRZbPRdOdLJ+C5l1ZV
usokqnrzd/Op0AnIlxtH3sdMo2pMQwtJsidgwyTvsdOnWVR98xfuqtrJ2X+U
oD3+0zyq2d0ngRmdgGvF1MrdMYuoVnGPmZ79CZhvMVLdUV5GtSN/hsx7nwCS
KY2w1bEVVMehMz/46Qk4f5c5Z/zKGqp3+78u+tgTILba13G7dw014Grbyk87
AcHuB4LAaR01PGlhQwpOgMPBbdGdlXXUaKQZ9n09AbG3M26+tdlATaoa7R2/
nwDVNN/Lzj82ULPk+qjj3hPg8+BrRz7bJmruhZYnjJ+AQEbikDzzTdTibu0Q
38oJMMQPDvkWt4laCtSc1B6egE+0OfeVP2+i1uRVl3XIT8E6RXPnl9ZN1Gbm
i+os0ykYSdOx9e7aRG2bKjyDLp+Cczwfv+9+30TtMz+9ohM9BYPnX1ZhpZuo
46PS2jxwClQthos1ojZRJ5PiCWmNU/Ba65f4FbNN1FmykKzH5BQUXtfx/Mux
iboyfBS0dzwFiexC0ceDG6j7ep7eoe8pEG/zvMX2fAP16MoJiAs9BTxQg/s/
vg3UszArkyf+FAjVPnT5WL+OeoVnttSknwJs7vi6ltY66m2XvnS36BS4jc+e
mA6uoT7yaeemq09ByPSph7PBGvrgKMWC9tcpyLbbuU0bvII+HE5+ljNxChzw
xItzdJfRgMrEgptrp2D3Bb799YtLKFJ15/ATMR5sJZb5t/lqHpXzUrgzyokH
Ld9++uEnNYXembk1JmyIByMClDU0rXpR+77+pRfmePBTYe44d9tP9Fm9+8Ff
Gzy4SM0Z+WuiHW1IzWKM9sSDghvfE+8ZN6DjL2S4p/zw4MfUZ4Y+vtXoic+A
sPQjPHh0azL5uWcZKn2XQn0+Ag9qEceb7F5yRUxkcoxhHB58oaKS8UkjC3l4
BXFIeYUHR9M+UNvwfkK+EHqFKGbjwb/bxb0r3PVI/xplXNpHPChq3iz5qLwJ
2fiT+26zFA+GTr1lYmf9gQhVDVe9r8WDLH+VKjhdOhHNXO+WvUY8OOxVFxp3
tRtxTaDuv9uGB5P2P+2IRvYgkY8//Mv7iQeTd6UJFPt7kY+ucqvHv/CgExHB
YBZZP9JqPHKkN4oHw8Uz+CX5fiEzSr4URRN4EBONazsQGkCIxGlZCOfxoD2v
l9zWpUGEm+sjj8kqHrQ+j28hiTeEyNMoiH3axoMqMQrY1I8hxPJwFJId4UFF
M617VwKGkeA5P817BPjwQcN5JoT5N/LuF86skgwfdgh8ZXXI+I3UNhY4UdPi
w80M98DNcyPI79LbD2wZ8WHRqUCWjNcIspf299m38/iwUyi2MbduBGGOfJhw
7hI+vHyeSv/t9ggi8eBcphM/Prw6mhyZwDaK6NkWFdcL4sMxdqZ6suujiJe2
0jfmG/iQMYhnPeTMjkfGW92l8WGqvunVaPZRpOxawMB3OXxY9SnusPpgBOli
YZhiV8aHW9buC+9bR5Al4pJ1b018uP3o7fRE2AhCuXnntF0PH7Ib/63ikBhB
ro7/o7pkig+zBB6HnA78RpQ7A9n8rfDhtJTU1evOv8+uR0b+bgd8+JnxaNhg
bRh5/qH0Bp87Psy8P/jwuvMwkpOkohDsgw/ZOIT5bYeGkMank1q/As7q92c0
lUoPIaemzK6hL/AhiLOdtJgaQC6qfPL/HY0PyVpynYSvDSAyEmovRJLw4Qdq
1e11p1+IP+5x1lgmPpQwmvl8obcP2WyeGZKuwYcccx+bP1t2I7PXKxW3lvDh
bZ6Svg9MjcilR2521zbxoe90X/8P9XrErOPyc+t9fGiY117SRV2HdDsnNncT
E0C74jX+UsZKpOaDp0LxRQJYsd7xIyjnPbK1w2czdZkAissbf6SufoUIKo2F
nL9GAINCyVxCd58h2VMajRGSBDBrtT9bYC4CjeK6JmevRQAtP3WIEacVoi2e
E5bvDAggk/Dm0LpQGYpX/+ZJvxkBLC7+YEniV47eotXOpLQhgN9T7xh/y/iM
+lqQ1cs7EcDCvzcbMosq0bJibMzfgwAmK1zBmaZVoQtHfqdlvgSQ26e+O8u9
BrV4O41whBDAKF3z6Is1dejrhTQLg3ACuNwnscQthqF9N/WCo2PO+KRLIQJ3
6lGaCMr05iQC2NBSSzA/XY8qDzXWHaYSQFJi5oIR3wY0hC/gj+h7Amjj0dLN
sduA1vqJHDt9IIDZoWwHQ06N6M73Ofb3xQSw4EMGItrViIowZsoMVRBAX5KA
PfPLTairraEZbQ0BTNJfc0t2bULzKmiClOoJ4LGgQwDLhyZ0nKDl7aMWAkhU
QCVxvb8JZdN59O1zBwEkqPNK49hqQvXei48s9hLAq5X6onKkzWjs2uLBpWEC
GNPUXjBH3Yy2g2w2kzECOEVLF3WfrBklijW5FT9NAK95If3Su00o8pfOpHWR
AErRnb4r/N2EPrze5n+6TgAj8959569oQsuDnryR2COA/nfCYy4+bUKX/5Os
djshgJzfQ1UObzeh/OdXh3KICOHV/+oOhU4bUWvnvL0RCkLIvb5IIlzWiKZV
m7PQ0xHC2bXsXk+jRnSAjFFKlZkQdvMzP3Daa0BxRh2GTy8QwpmHxk4JcQ2o
6ofQB1XchNDT3fiKHVcDiiluVPIKE0I+QyOndcF69CDp44C5BCFUkVIshcYY
Kj5luZMkQwhlQ3Q+t6igaH7IzxuEKoRw//ja9fM0tehET5j+rbuEUOfQ7Xnn
ZA16gQvxva///3oKbe7l1WgCVvR5zIoQOtzwxV1BvqKBRxFitQGE8J513KAu
fzna5WOTFPCU8OzJcTnZoLEM5VyW2ZYKJ4Rfw01FH1SVoM1/Viu/JBPCHC5q
CS6+jygVpn+rtIwQ4j+bMUzJS0MtJIXeun0lhAS91+g7PFPQslKyo2soIRQY
fe3Yp5+A6md+q8v/jxC6+XfqbW8/QdOfcsllzRDCI91HnL1socja/sF7y2VC
CNk+OdLpv0TkvfoJOLYIYVa2yquTt/HIrPWL5rf4RPBL2w+Wmp3XyK0RSx4T
MiI4GhPK3m2ehkTp3gpjoSWC71YYV0aSMhDh28t3ktmJ4JVjtTr2qiwkpLYl
X5ebCPJzXsDrJs9B+sUzyc9dJYJbq1l4CfK5CG+xv3O3MBH8oJOPb2idhzzk
0f0vRpIIdvP1XeBx+oC0vxMQ0ECIYMA151J6w3yEnYkkmlLxjI/uYZmqwEfE
PWZsuU2NCGaci2YmmP+INJBUa4brEMG5JUK+p9EFCMPjhFIlYyL43My24QJb
IWK/64IjtiSC9Twpn6RjC5EqD8X7TfZEUOxEd0NtuRChmLvY+9SNCJZ19a3/
J16EmFnuiUIfIjg0Mtd7274IKRnqSTwJIIJ2PcxFqiFFCJ524VbtUyJoTKvy
PTCiCNFpe6YfGE4EpT7m9j8OKkJy5Cwqb8YSwRpDIWlSsyJkp1qSeS/5rB++
dLl2/iJEWZTuYWUaESzHpzAInyxE3hYsDPlkE8EEhX+qpNGFyMql5ptiBURw
JCQ/5RxvIQLfvktdLyOC8QYHbwNKC5AE+geHpV+JoHe81DT91QJk6qWWmTt6
xq/D5EHlq4+IBNHVOoHvRJDTG7LK7uQj4UGEFxf/I4KyDTM5z1TyketulWMO
w0QwOUcDdnflIU+mYyHvOBH0gNNeCQR5SK+50/upGSI4XDWfHHc9F/HTZLex
2iKCEvdOJb64ZiOtLdtNHIdEsIC7XDU+JAthAz8v/8UnhhFr8o70ie8RVChk
xoSWGCa9vkFboJmBkNLNOeldJYbBPAG1C3YpyM4LM8UMYWJo+nUmMSIyGZk5
6eZckCCGxp89klzKEpGWperBxwrEcM4k644aURwS1vpSsdCMGLrW5cQcdj9F
/AAe1441MVx2krmw0hmE2Ff6HEEnYnjB9G647AU/RCnHvGLAlxiWbLPW+9tY
IyRPhLgIYolhs8uyqAKFG7qzk32knkwMm1g1V55seaMzbixDKW+Joce8F23G
dX+0xRQ/9no+MZRI8TSJCXyKVvb6Oj8sIYaes5z+DxtD0TyVBcWmz2f92aye
r1x8joZJ9h0ZNRDDfxMEC0mTEahfyZ2h7B/E8KghkSbz00vUnqe2YqWTGM6E
hdX0WEajBmnCsTf7z/i9cZQ+tx6DKtHnOj/7TQxTnMq+CorEoRKRrEo/x4lh
9zA9i9XvOJQXP4aLbZYYki4/HBH2iUeZHhIc2y4Tw6Cb60FfT+JRklW/odJN
Ykh1rxOfOSAB3bFbrDjYJ4Yt7nVZ/jMJ6MzovVhFPBJo5JnoRXc7ER3Q7XeO
IyGB3pVrBCyJiWhLu7LSCBUJbGrmIe3qS0Qr5eq4eOlJYN6Dl9sBJEloXpXI
sScrCdybTf3gei0JfSWUN/SNgwRuCJLt78gnoWF5bJ9JeElgX9Ule2+NJNTv
QmystsCZDWs/QrUk1D6J0CVNlAQWTf0yaZRJQg0oHyrNSpHAyk2tSMtLSahS
yBKXKCCBWmDM8sVRIiqxb3kcpEgCj7651uX9l4jyev4a+qFGAkVu3uoXiUtE
mWZVPp/TIYH1w3+70lUTURILNNbciATWttu42R+e9d8v6pJvQQLzAwvzCbPP
+lf7oLRpe1ZfV9dgUy4BbbkZdxx+/0yPpzPxzQ7xaGUZ0XDfAxJobty4nbsa
h+bx+X++GEwC2RNzO4Y849AwRmuXz5Ek8MqXAQO3xhjUL2pA6TSOBPrK5Kx9
z4pG7QnVLqmmkED61St63/2jUKV1seGxbBJoK/NXrJA2EiXuJL5DWUcCrZ4p
bpHvPEOp3NJs/jSd6X0vJdAoMhRloBZ7UtpOAk9o4iTfsIeglzUsq3WHSOD0
ycxyWHAweruz5lraJgl0Wb/DjxPzRtXdtJXdD0jg5qFY6C9vT1SPes4W4pPC
YW/m142PXVAbDcb0KRpS+EtKj3Xp1BIN6fTAXb9KCu96Z6jbvhVDIt1Irp8K
k0LKxm8NPpgakkD9TqVHkhSWDjL4+IQaIFka7SG+iqQwePvkPdc9G6Rg2TLj
jjop1H7x5XYvnwNSHr37jVWXFArTy4zdqndGGjovb9dZksL1zemKGyWeSKvb
N7o4B1KYPbUQaC7khXRT6whau5PCaRzd6ewrb2SoeE5V3JcUYpwt5IVTPsi4
xmMHkiBSOJcSJBnH4ofMLTM+GwohhfICCWZJog+QteiizIIIUsjvbjPbIvoQ
2buuUBcURwqjDJRvqrD6I3hdw8OaKaRwZkN8T2PGHyFz99zhTCeFt15UGbOk
BiA4GlL6zRxSGMDF4HgoHoiwlLwT+l5ICq2bOOSNvwYinJri6inlpDDmpNwg
iysI4V9pd3SqJoUJvAppej5BiHCM1XPpelJ44YL994PSIERKcO899Q9S2CY1
7XXtVxACumLQsU5SKD5Lahs+FYQoufOMfOonhS+8q3Pr/gYhmjS1u6EjZ/4e
/oYnzUGIQYkOg8EEKVzxC1qIfRWEWGjOC/PPk0IhaSHhT/pn82zlscbBKik8
asst/EQQdHbfMTl37JBC5aqwCtv0QMRPsDgs/fis//vGuOwrgUhwl0K2JxEZ
ZL+zIKaaG4CEuf/G5CnJ4KP2RW/pcwFIDM39UYZzZJDV7I6y6X1/5J1mOmM1
x1n89I//msgfIjkr4qIvecng4XXfkL+3HyBFMf9pml8ngx+zDfzbff2Q2q69
F/jSZPAl+rSuptYHaXaPzemTI4OkDUICMf3eSAcNb0OuMhk0LsLN/5z2QkY1
dQ9UDMhgMRP5HNeeJ3LYVeyacJ8MihTRtj2fdUIu9li9vf2QDPYsxM7fnnVA
5PsY23eCyeDKd7x44lk7JHLwEZ9pFBlc5KGfJFiyQljGNSa4P5BBQqJu/TYL
PURmAp9uoJgMnrT/aFrJ1UIsp76A8M9kcNn6IDkUTxX5MHfh3VIDGdT4Smr5
flASkVhfNvwySgaffS05eP1ZGjXZfB/mMEkGee2Xy0CtAvpoW/8L6wIZLHXO
dee3VEGb9+vOBe+SQQom1Sn5TW107vC+nPAJGZz8L41vw1oPpTrh8ZwgIoe3
PQbln5cZoLoEMZ1K58hhjvtfw0eTJqgfkfzRHgs5fCJD9fJWqxmaSrJztZCD
HOpdy66MjLBAUbICY3NechhUWHFQTG+JTlBYhNNeJ4cRT5O//O62REmoz31t
ECOHU4p/pEyDrNArtC3T3rfI4Xjr+h9VJmtUnS6AgVeOHIKX9ZLd6daoJ72g
wtAdcigUWPOWnckGTWKcuB+pSQ5T0299cAmyQb8yv8qU0SeH30tbGwh6bdDf
rKo/V0zJYaBAfpowsy16cv7kONOaHG68uVSmrm6LXrpYLqDrdGbX7VdW3rdF
lTjtTYk9yWG1jiv/wAtb1PkSW+RXP3J4X/3GJ9ZYWzT6cleV0yNy+OriYuHO
mb+MN2T2/LOz/Hdcb+a8bNF+fgmmrkhyOMhckuKpZYvuXV24/SSeHL6jdv7D
wGWLsl9P9xZ9faZXeaew5bQNCoV0sqbSyeHrwa82/97ZoDYiJD2vcslhvOWX
n1fVbNAwsZpT5SJyuFvC1N+zbI0W3HAXPCw/iy+5YOAeZo12SV4yL64mh026
LxVSGa3RjZsDL+/Vk8NS75/M62+t0JsIMt/USQ5F/rwwSYizRM3gBrNfPzkc
NssxY8azRJ/I5ynxj5DDfck/bA96LdBWJZqcqDlyyBzO+TFH3wxdUm7sRVbJ
4Vr28/QtMlOUVs0Pf32bHDI0heEbfjZGDe7+tdAnpICBqrm4k10DdNqwhPXi
RQoY9MJMQFlHG80zOm40u0wBSzJJ92KO7qKOxuqub69SQK+QOq1WfQ10wWQB
ZZGkgKEiXmfnVhldM+e1pdeigO/N5z8rn+3fcgtfah0DCthH1kPb1CqBet9r
rowzo4AiSSV0dtsi6I6lNTmNEwXcJK22NgVc6JFNeglZCAX8QUZ8eZGHC0Ft
lw3vhFPAjf8i4hVpryCP7WTww2Io4KJJXb2VgTBC4PBbl/AtBWTe4r6Z+UgS
aXa4ciz3ngJ6336ZdaP/FvLc8WHekw8UUDnqYJAUH0HInJn2jysoYJJ0gpr3
shzS7myXJVNzxrdCRPuJggLy0uWzWmA9BRSkUsioCr2NqLsSble3UEDKtOx5
whJFhMZNJ32vgwIaWk62GDYqIT/d3t+R7KOAW1JNal/r7yBx7mtrvsMU8I1a
xnvRj8qIjgdI/TxGAaVWrr2eCVRB6D1jFDanKeBdqUXRIylVpN/zz5LIEgU0
+lMvmj+uiry6L/DKc+NMb2HytKveaoihVyAo3aOA2N2Um11ragiLd/vc8gkF
DJA9Zp8zVkd+e7MmCBBTwiq3x+yDJerIWx9HaRdKSphYSn+XcE0dMfP9OvWR
jhKqfm0L+3NBA7noRxIzx0wJr77fb/srpYGM++lL8l2khHiNCf+9kNNA3j/I
Gbe7TAmHZiesLc/81g83I3KuUkKq4WuEu2f5l/3lxSaFKaGGk4nY+IY6MuMf
P8olSQkDF4RIKr+qIx8Cxp9bylLCX+QCicxu6ohjoJBQhgIlPLUI8cynV0eu
BgUP/VGhhIr0toK4IjVkKajzKbsWJewhnezbl1BDih+xXzM1OIsfLTOn/6KK
uAe79L8xo4T05/cRaj5VRPhxzaMha0po/yZh6k20CrLxmJyP2YkS5hM13HKb
V0Yqnhh163tQwtyrtTdkpJURiZCdS32BZ/3oj5tkNykheyGKHXQhlGf/rfyo
vENFpDo0yVcrnBLm/Jp/EyCgiMg8F23tTKKEg690V6wCFRC5cHe31mJK+M57
7Py3RoCwlY8ZxnymhHqKY/Lf6mSRrREteb1vlFDwH/lW8mdpJE9IjHm8lRI2
CC7IM6dJIlSDu/W7k5SwN4FeJm9HEJnGcyqsW6CEi/nI5dWjqwh69Xdy6Dol
jPdy1dWg40PuB9c6055SwvuzdhQ/fl9EBnieMvCxUUHxmBOvwLoJ2dK7GydL
nFQQ77ZdA459vS7c32a+nI8K3v5YLcBjSIxKdyqiyA0qKEfaUE9Ry4Qy7Fbm
E8lQwRP7pguBNuzoCid/Yrs8FSz05LkxP8mJZvpQOBpoUcEHpBmOj8Z50ID0
QB12Qyp4y/0+Q84VflS3dUlmwpwKKm+NG1VrXkUFNsz58m2pYK2H5Av7uwIo
CftPOncXKshnfN/1/jVBdEwRHol5UUGfV7TR3yaE0CqPTzP7D6ngs5Lxj5k1
wmjCm0s92GMqSJO9+Sbqvgjq0pT47XkYFbzp+9DyJpMoenuZKE8tmgrOLrb/
ac8XRS8y+8XRJVFBv9qtSM8rYugunA0YTKWCjQPZu7avxdBuZyO7d++poOSH
yNvL22JoQVLbXZt8KjhunpdqJC+OhqK3bl0ppYJP3aczTh+Jo2ZzhZdXv5zl
W+bNK3wURyXOXaD9UksFTTOfucU2i6O0MjH7AU1U8KP5zJputzg6Z3c6Cdup
4L9P3x5QdIqjjbGeXSQ9VFCee7Rc9Js4+rb6X1XHIBVkvefqrvNWHPWZ1MlO
+EsFLSPK8bbdxFFN6uZoo2kqqDn6rbpATBzlk7zx8OISFXwSJapHtiyG4lnl
WU9tUMH3m6hDXqoYOhzJrFGwTwUrjlX/cMqKoeWfwyU98aihcl6AHdMvUTTq
7z6XBCk1ZGPOX+ezEUXtyFyojqipoVNusdDerAiKiI7uNDBQQ7zQJrJrtiIo
i5nGvxfnqeFRdDm33ZAw2l4qVEl/hRqesm7zExsKoTnDmZnDQtRQdu21nTmz
IPqI8NzLDAlqWGFtFzbdIYAKG27du3abGr4q1S2OZr+KJp9UkSvcO8P/YuYe
4HkZpeL77p5sRw3fEoYIeDNyo8/u9vTNulBDL52FZplqLtQrc/5d1ENqmP1o
RsIL/yKqKc8mOhBPDRmSfy1wq9Oj3515U/hfU0OeuAi61TIcKpMoehSQTg01
lBVUgwEVenVKtYWjkBqqZNORLUIClCQs0MSpmRr+Pb14npX3o+yjkhfYt3Zq
eD548pzD4oTs1kDiZZoeanhJN01jZmhddoKvaKX8DzWsvP4zcnsEDzHWqtIl
njrLx28UNE4hQrofNlcZLlDD/AmeCPIrZAjWNhpytHPGpzCkv/Y/GkRiY25W
85ga9pVwh+Qs45AStm3194Q0sHxNJpf13jmERwG/fJOcBr7CDRmQ1dAjaS7U
zEq4Mz9taaLqCQNCn8Qa9JqJBpYGj3m2XWNCImt5/i2w08AOg8jPQfLMCP60
iJIsNw1kO4p1dJZnQR5SI4WxV2jgR/thh7xrrMjqDVXchBANPGeVMaN9worY
Wxj4ikvQQBIvzp3UGjbkT5j17zAZGnjX6gZRreV5RK/UHQzL08D4+2KGh2vn
kf8GA3KuqdBA/buRYQUu7Ig83gvy4Ls0cNgoco2nhx2p4U9079angYdG6PV+
rguIiHZG3yUzGlhALR/CY3EByfcvlPK1poFSv4I0EsMuIJxZX9/9cKSB0jW5
DzPeXkBS2psI2DxoIEGz91TfuwsIzeZPB1dfGji6YDLQEH0BeX5+tAMNpIFd
HhV2+K4XkCOFORG6EBrY+px3XvjmBcTbdeuVTTgN9NSqst3aZkcWkvCOvsTQ
QN6rzXtbWeyIVR2VFVnymb4nMjrjkB0ZmmZpMXlLA38hT9gdu88jd2l4rhW/
p4GPU0l85XTOIy0SInGnH2jgRdlbVpd/sCGy92S3tUtooHpHpdJ/QmzI5xcq
JjmfaWBGn5j9RhQrkjVkdVmlgQYKhecmVvGxIKz47hFvf9BA3y/dM/32zEjc
lYCV5U4auKDznMLlHRMSHJBQlfCbBm51qDgdbTIgpuxN6qObNBA1Sdy7YkqH
LLitb3w5oIFVDDWqmgY45CHG8SYWnxb2J/6IeZJGg7yyDpqWp6WF1apV3cMe
FEhv/o3gj1dpIbeEU3cQHQFidWBzOVSEFlIKy6DR+HjImlpCu5kULRyiaieZ
XjmUpVldYcIp0UKNOL+ZiM1NWdUb+aV+VrTwFg1L0m5jn+xw2IC+luMZHnIy
+3i+UtZxiOjoigctbA39alPkidWFBVop/wmihRhr/Om3zvE6xs7YlcpQWmjg
8yZ2bHSmLucimhQXSQsH9R64Ps1fqmtsYPun8JoWrne38AxWbtZp06u8uJBB
C7UPrq1QiO7Ujds+uL6bSwuj1istjcP36jwqc/u6i2jh+CLRmEr1Qd0Jab9/
QQUtjL+cWh7SfFQXbUzA+ayGFk4Eqam0fjypYy8UbjFvoIUbYoIiweJ4aOGR
hatkKy08JvjyigYfH72lGX2O7ict7H57UTCrBh9ty/hWtfCLFn4e1GTQtSJA
jdbnLZpHz/Qqz+BT3iZAZ+RZiNMnaWHXlftPPvsRor5JSoUPFmihnIz59MA0
IUo046OtvU4L29zfSO/LE6EJktm7V/do4d0P1FseMUQoV0TPO6LTM/zVXN83
rUSo0fIp1yoBDv6ztH7+Z50I5WRi3jYlwcH++tyiIgpidBYRbG0lx0E5e5j+
mJ4YLXFQfHuDGgfPYZ9SB6iIUb84M/csHA4+tGDul9olQpFqbzlaBhwM7ZTp
FesjQoknIhmCmHEw11t60OQ9EdpBkTU7x4aDEaOMikrWRGiSWHWN/kUcTLX7
QpTIRISamXVHN3Lh4NJO0co/lBDlfj5rKcSDgzfnL0oMmhKiC8UnYmn8OHg/
mWOAdYUALR9gJCUXwMETzXl8XT8CNOBU4LevEA6KV4m8vr6Nj8rx3y6eEMVB
j8DFN/ou+Gi3v5du7U0c1JgzvQ8hHvo6K4L3iiwOEpAGFlXB07p7/2XuJ0Mc
VFfZT1veOq5bYf+Z4XHnDG84qSsNOayjqr+2dEkfBzsp/ojCwO26iTfarY+N
cFDM1DA/mmSr7qv3g5xR0zN+olcX9mM36qz5msxeWeMg+tTjzpL8at3XGJNO
ck8ctIN3HMgqJ+uiHJ98tPfGQVv8nlPS2fE6a/m8501+OHiLhcOS6M5oHdXO
uuyjRzjYwbg8RxrZU2dtHlGyFomDX5SlKb4fZclKSZZGasTgIJ6P3oHe5DdZ
arpf9gXxOMibU3vDuqtFtqqZk8P2NQ4S542cFtb2yUanKx3Wv8XBhJ/pv5cz
B2WtH7oOXsjAwQJmxk+JeiOy1AJVsYO5OJiSdy2blf6f7ATxXxfxjzgoy5aR
oP9+QrZqjFA5vggHczzyf9QzTslGV1+5vFKKgwoS/JPXPadlrRPv4qlV4ODq
QhxNaNmMrJSb7+iHShxkS9VyrR6YlaW+87aKqAYHrSaLH49OzMlOcDYkWdXh
4I3e1ijyX/OyVQcznmg9Djo0eqy7Fy/IxvRTaZxvxsHvvQ8eqLkuytqUiF55
+OMsX+HO+2W6JVmpcCPiX+04+DEIWS9PX5KlsQ7+J9KFg8yPCwRI6ZdlJ6Vz
6mJ6zvSkmk+18ViWrWJsf7PYj4NSDLZymp+XZWNWV32Vh3DQsoXkgvHEsqxN
G6NO7ggOxgr8Z8x1sCwrlS0tSDCGg9WWh+GaR8uyNI+sKO5N4CCXad1A/PwZ
vsGLmW/TZ/trORDkNp7hCxc3sszjIDJS8101/Ayfoi/ddwkHtXnH8tWkz/Cn
9gJ6V8/0fOHx7sHoGX/0oqHQJg6eb1QjzXE94//6tljUDg4uMOtJFC4tyk7d
d6ad3z+L99rKdTFflK1Wi1tUPMadnX98+ANbkLU9Hck+JaSDd1zN3afM5mVv
DeM/MSOlgyWccTE+b+ZkaSv4zKop6GAAHnOS9H+zsjX23gzedHSwuX5+mPbc
jGwcfLP2k4Hu7P3+LXeRf1rWjg3rEGChg1IvL8ukSk3J4roons9cpIMExg33
dxQnZO1uZG0bC9DBj4JW9KJWo7KRMYy0j4To4JIBJ94/j9+yJbPh/JmidFA1
5uBGzKMh2Z03HqYzUnRwt6LKuCy1Xzb8RKbBS5EOirGklJLvtskWGZb9Tlam
g/+WULuPCi2y3WXcW1VqdHCD/tZL64xGWVYbCr5TbTp4nUJr+BzTV9mCH4NR
Ly3ooOL9RlzF+ci6Lk61vBIrOvjM/c17hcasug1/FOuxpYNPo59QNieW1EkL
5G4wu9DB/srAsEmfmjrL5yxU0u500CsRdwurwOqe/X3JY3GfDooMPei7b9pY
1xHnZZTzgA6q895pzSL4Ubc2P33/RwAd9OzkWVLla6tjUDB+ufCIDjZt3HS6
IvBfnVRaRw71Uzr4MPDXtwNcZ535NkCFn9FBFyX+vrhfXXUhmhWDui/oIMe/
OoV5me66vA+8636RdNBYcSf0z0l3XTteKkVqNB2UELmYWVT2v4arOxzLN4wm
q2F+e0jpE0KiCHnf3ESIjLIVGZWM7EgU2UTIT7IyI0SRle9RtpJNQ9JUiYqi
EPX7/jzX9bznPvc557mu5x1E32wEJVGyKNj5lmedOjyECDVh+JurosDMTqmR
+TCE9gjMW3JfE4V5SXF+4slhZHvilLdUpigclyLtO/x8GF1sHoszyBGFlJNH
5BkaI6iIalzokScKZpkWfjeTRlC3dwv7SqEoiD/pkdg7PIJmHik/rb7JyaO7
yGzz+lEkwir9PnpLFIy3tbffVBxFyiHM9UsVovBT4U6Y9MFRZD2atFXsDidf
n/On/1qMohCFtZhmjSjwCuwYTzQfRfkxARZOdRw/NKb08QOjqPPN5zNRjRz9
d+i9QXKj6Iv60dhStiiUnBzuvcMzioSu9uf3POCcL69NtRkaQbtmtJu+tXL8
mzz/9kvaCLLUrRsR7RSF0uRzma+NRlBw7vZvyo9E4UOhimXt8jDK/Z3Nb/1E
FL7oWvPM5A6jNlMRifP9olDuybzMu3cYfb4VsTd3SBRCsj3ORD0ZQgLcv4+0
jIqCV+j06VnLIWRe+yqaf5yDV2pbci0GUZCQWZ7sa1GY3PH1zrfHAyjnVHvj
oXec+3WkcI/23gH0kV4+c/WzKDic1fQkE/pQ4IWgw1sWRCEzkjgqNN2NZGZC
BGIWReFNteD16IAu9NwmvPPrH1GI00wIifzTgdRU4vc2rSVAZItE6/DfVrQ4
nbXVUoQA/K/Hbp3luY9KbfLG2UQCtHunDzBF65F1V1E6i0qAHYLKE/xS91Bj
we0Nc5sI4CUe4FbxugIF2zz4kSBHgJBaOcX58EQk29VW8UOBAAaHo38ffOyL
xpS7T9rsIoDm0IKGtrw/riEyOCalToAX27ScdCOu4TOho2mJGAFI0VcO7GLm
4dnTL4znNQmwyuX6Z0anCF/pfNfacoAAD280Vp7nrsArlD+FyBwkwOaJ83eF
06vwowXTe64cIkDUBbl6qeC7uIDI7OyCKQEs75p2twrV4Ch0vuyoOQG+zPnQ
MmPv4WemF13arAjAaqx/f/FTLS5usyoua0eA3RX9PEfl6vG+Tq4XyfYEsAsr
spE1b8AvKPNd/e3I2X/xq/iyYyOuULDhkP0JAlB8bPd/Nb+PTwgL83e4EqBG
hlijuqMJTwoltsh5cPgu2WWLTzfhmtPU86leBLCW3lD5O4mNz1qLqSz5EuCX
yHVTGTrC8zq3fHc4S4AGqZgxyXiEmypvu9V5jgB6J9seer1D+JqC7c47QgnQ
e+BpW8bWZvyOsMKmtDCOvshgBmbYjB8P3fVsOYIAZqGHM7mONeMi03tSHGMI
8HGt8+ss62a8xVrDsDueADmDv3279jXjvp2avDuTCCDzJ/mHgUgzvlVZ58F/
KQR4Z+inOteL8KF8/XMraQTow7wvpgYh/JLwod3OGZz99f2vrRdF+K5Qs6+P
sgiQkeCyTi2Djb/7YlGieIMAcxF9B3iE2Xiqta3jtQICVJz6OGl9tgnf32nP
/FtMAEX1g32s/vv4/G7nUZdbBBBiLQVZMO7jRfmnrvRUEGCM/7PCG+tGnCfU
m/t6DQGqOhaT+2rq8Xtf/NG/OgIsEbc404fqcBfrc4En73P8S3qiFM/Jr333
pendLQQ4GPu3KfdPDR715epwXx8BhkMJc0HtVXjks8nHfwYJIKu5s3Di8W08
sl21VWaUABZDsuZqfeX4pdyXdy69JEDyp/StAoMl+IXDrKQ9nwnQyOpgvhm+
gYdqBkQ5T3P8T8pIebqQhYfId4UkfyOASbIdT5VkBh7M5+7+ZZ4Aojtp5cN3
kvGz96v1c7mIwPwWF5mWdwIPKOGBHh4irN2V6Tm/VRv5p1mqLvITIanFu7Lp
nSfyPbO87bAQEQTlBbNWwyKQj53RpouiRNDOIqrUKsQhb/1cUgWJCE465XGu
eUnIa6s2Nx+TCAdKPWnvXdLQGeG05V3iRLAd9KwNfJCOzqxMzjlIEKHMpdoq
dikDeU6pTl2WJMKnU2sC7hKykMfTuDeN0kR4dZRr8eaGHOTe9vLZR1kixE4x
Gna/zUVud3b0ExWIoFiT6SdmmIdO51zsBCUi3LcSbHpKykeunDegpzIRrpdv
bOjrzUenAlm1mapE8NPRKSGdLUAnXQIquvYSQc0hrKBVsBCdMOsqnMeJoOBq
uX8lrRC57KNnSWgRYerXgPa3jUXIWc491ViHCCuDxyh9vkXIiYbizusRQaDe
Kv7FIw7mFQ4vPUiE76khtpaixcjxx/Gg0UNEuFic151iUIyOv672WmtGhD+3
vyq98eXgJzyndpoTYbT+T0F2YjFyaLS0P2pFBPnzwu4ymcXI/mapRZwtEX4G
dFd+yShGx64uG9UdI8L4SvSySXwxOhpmpPP+OBG4AwdGHp0pRnaeuRoiLhx/
ni2Y9h0oRra2s7vwU0QIkt5X8IxQjGz0tGXd3Dj75o1UOQ8XIWvlNIlrnkQg
e9bf+hlbhKwkPtLavYngWP42d6NyEbIUUhOZ8yNCee1n0q7RQmTxJ45fPJAI
V2W08797FCLzzy//HgwmgsPJE5F9fwrQkdaLX4vCiLBeQNVmM1cBOlw1+GEw
ggjtrxvvlQXlo8PZrPG/0URoDO4Ni5vKQ6Znux5bJxLB9E5S9ZTvDWQkK1wq
kEmE9CLjriDtTGTT7VW6PYcIqzyvtSVmMtDJkwOlB/I4fREIp8mnXENhBSm3
wm5y8h2RV94xmIbuMUjl89VE+Nv0NIAUmYRaGvzLReuIUD2tYbD1YQLqsxwt
V2gkwmCSoOnomjj0OTW9wvUBEcy5Vq4y0yOQ2EZ65XgPEXL1kwNve/ii7bfO
VS71EWGh6CJPzKIb2qM3VkkZIkLroyl3yyOOyDQiq8r0ORGCb5LoDvos/JjE
SpXnSyIIN0VWi28xx90eHL0TP0EE++j88Tv5Tnjkn0132z8QIbru+fp5Tx88
5fqFu28/EUG/8mZ5s2YAnqv6+u7fL0Q4s2rhmPYpCG/wy6tWmyNCzbdFhf7a
i3iHKFeNxTwnzzK6tr1nOD5U5Vjj+5sIsliEnNPUJXxmeuu9ilWOX6Vxfgdy
ovCluIh7j9aQYB1/xL2PI9E4n8yHex+5STB+oEr96kIMTuzUqeXmJ8EauYQW
k3+x+BaX4totG0igaDyQveNHHL5jLV8dLkiCtt8UzLAvHt+bd7LOVoQEa4+K
NA5fTcD19nXVBRJJkPGlxe6v9mXcfFy6Po1CguJL28WExi/jjsGx9XfpJEgI
urvFzCERP0Obqu8TI8Eka0x9S28ifr7OoGF6MwlOmYXaTWxLwmPNyxrWsUjQ
bSFEWjydhP/3Y0PjNikS8D1WXfv+ehJekOzeqL2dBGO8eww21SXhVQpPGh3k
SVBiasiz40ESzn4ifz9kJwly40sbb9Qm4Y/cEu9f30WCgoKtveszk/Cn677d
r1PhnK/a8JPXMwl/f9O4aViNBN9Hzhcq70zCZ3WqmmY1SHDTxitJ420ivvpO
mC2oSQKBix9EOiIS8Q3h3mxZbRJYFJ0sv0hNxKmbB9l6uiRQ0FQP3pRzGZdE
SshFnwQTQmeqjpAv40p2qSjckATZbCnhsbAEfN/SD5RrTOK8bzXPuL2Jx61V
7jU/NyfB03NO49cuxOEnhkkPFqxIMHRKJKKyORb39Ql4QLAjQbMt062Fk1fi
7T0PjRxJcGD9NYl+w2hc6riM420XEsyqvpj9ax2FNxMYa4VcSSAvql5LdYjE
ZwNX9/efIQF34p2Dt2wu4eba7V1mISTYwnQqXNYKwb/O17pWX+Tsq0nxdhcL
xqNLStYTI0jwX8DgquOvQLxBIMFwJI4EUxdWwqYq/XCxZ2b9ltdI4GCQNCJb
cxKvjdvvXZ/J+X59RFtIlRNujKmI0nJJ4OFzUoQedgwPy6cdeVHE6cO8RVtt
hhFON98wr15KgtI1IxvPr2jg1XwraZnlJHAPveUT5fCU/cH99VO7ahJg0i0N
MUxDFCo+GMiuJUGPcspe1pcjiDLYStvUSIIFmV1v67htkf6em7YTD0jw29VA
RarGCb39fO3PvjZOvtt1jn+1OIGCs+Kyb3SS4JWHiPrY8ClUscZz4ngvCQ7H
DP4TcvBAujX2F1sGSEDi7tXNcD+DJk6Ybtk6QoKj6yr3fpDxRoE07ZZLz0hw
8Fhuevs6HyTSs9vp/RgJtvMljHuN+qBbodu4dSZIcDJojvgryRdpK1KLit5y
cFG6nL+KH3r5bp0u7yQJVidFgomP/JD/f8uTJz5z+jvZor7+oD8S1J+J7pwm
waZXrWvSG/zRzeVX0tLfSYAf0VHhJQcgzdv93TE/SDBS/+ZChUMAeu7Qcvrz
AqffKg4q0xkBaENHUfmtFRIsdwfuf/E8AGnIxn514yZDBTlpIoCDR8bPJfXw
keHfSpStW0sA8rjivlN+AxkGuFOUX2UFIF7tYwOXBcmwtkF8n6NrAMqdN/b5
KkKGH7jIwSTpAKRaAgRjEhl4Zu5krBnzRwM2u2oqqWTwrXXUtQ7zR6cFJM2F
mWR4/96kTo3pj9Y+IC94iZOhyzhBSL/cD2X58KcPSJDh7HhPgYKSH1KWXNqj
tI0M2jeUfNJv+6KTceNBP+TIYJl+aSr9sg/6p9FHP7KTDKYb0/bHzHqjjG8P
7tfsIoPOxlwoOeSNHh8pXPFXJ4PTyzFFmPFE1VHvxrIwMiCZMuZgjgfKrJdo
bNUkQ2v65DM+fXfkxswLEDlABo/I9LzIeFe0/n32t/LDZDij+md983snNEsa
fzJkQYbqJcsD4Wcd0fMDzPIlazJIOyU8urX+OCotu35Kz4EMP715RaVOc/rm
m/7mnTsZbG/ukO7qMUaKRaPN673IMPerY/hriAGiPSXlKPqSQWJX5vsqPR30
Sf2qzYUgMjwyL93Jf0oZ9bkPqRafJwPD6lnEZ+dtqC5HlPLkAhmkTlGLyxjz
7Giu5CF6FBnsX2ZL0VoV8TO7++9ALBlS1kUZCZqo45YnhK6cSiDDiY3++2kd
gEs9umxYm0KGPW5pn+LC9HGhPz3bx9PIYKU54aonZoT/kt+4jjuDDAURR0We
xpvgHclx7aa5ZBhTkLDt/3YYr2jtLgjMJ4ORP77V5bg5njbPH55bRIbX1/wd
Te9b4CFSeg4dJWS40V+rErRiyXnPRuMzZWTwsasQ65eyxo3iO5jESjIEX6NH
Wqnb4MpsnmX1u2SIfehlvlXZFhf7tv/58XtkmO+QOGtMtcN5tkTUxdSTQWWv
2OF17+3wGbPWtMr7nH0+jh2Ku3YUH4ng8htFHP7yxP1UlWM4uxbMVh6SYYd1
8y9u9jG88NPFnax2MjQ1f4qqkLfH4+kPBA92keHIiMeLoBh73Nfw77T3YzKc
e31U5OUTe9w2FH98rZcMd7q9po1X7XHtqpDS5gEyBPgX7rGhO+AE4h8XgWdk
0FzcuORJccDfnT0nYfuKDOsxXspEtz3+uLThX9gbjn5q9LUaDn/12O9XJe/J
0PDXVuiFij2eKaDK7vtIhs8aXFxrR47h4fvOZi5MkUE19NbBj07HcFfv2iCx
r2SInFCL03p/FDctmLfcP0uGX0fcEocsjuJqI7tV3H6SYfS9Va9tkx2+hc+P
mPKLDO0Xql7kkOzwdWrVc/VLZNh9bXj0uJMtPnt6rn9ihQzLL1k/Txfb4A97
vS7Lc1Ngn79+xmkha1yZBBuv8VHgx++TbzxYVniprUg81wYKnFILJiTttMSv
fLoT81SEgz23lwkqmeP2XD8uhYlTYHTXQgT1kwk+pNfKNS1BgUMRqpWSDYfw
A0mpYRbbKBAvejFHLdoQ38HcfUFWngLUipde1C16+Iqy/7kRdQqsjqgex2Yw
3Pu8zuI+nAJNtjvEderU8A8tpMBbQIFzAyu751KU8R7jWv8LehRQSelVPiK8
Hd/3X9TPzwcpIFUp3CNrJIFXv7TwPWJMAZvBGxGZ54l4pusvLxkLCvjx3syw
7F6LhKo6v6VaU+BrA4FfkkFFlxbSPVftKLBJVCJESWorcruk6j7kRIHw/Y7/
nsUqoIlu/i/YSQpcKtIk8UvvQoeFn7uWnOboFzEnOH1QRurZQSdDvCmgYZP/
I2xGHVW805/86EcBH9kFP/k9GNqyne5iFkiBxjzFxhPW+1Ca19S7pmAK2Gcx
dgZtB7SurtFR6gIFhAwvqT4jaKGQlbg3yeEUmFN+3GzyWQvNats6/ImkwO0r
hNHvt7SRS5zsxIlYCgxhN0yGrfaj5/3LRwcSKGBE2avF+rEfGVF6Xu69QoFf
2XGe5HM66OHRLNviVArQDabrp2d0kHKh+wvhdAp4Yg5JPw/popIpDevg6xTo
MhA1i8rWRUlnxy1M8iiQmxir+JL7ADrLHXpEsoQCs40n//lJHUD2yZvMlm5T
oCzv9NyxdQeQ7qZm4757FKjxtktnVOqiBuekXrUGChgcvLj6xV0XyZfZGxU2
USCrrLImXkwX5c0q9Ag+4Pi3KnYm/6EOIqn+Mwhq5fTt+nX7MWsdFBva3/2u
gzM/7lLW+8n9aKXtht6hRxSIMcuP93Tdj96bgu7WAQowmt9q9JpqI8trIu2X
hymQ35mot6FBCz1+9Ub791MKCMpFxfxH1ULVbuHw5BUFhl/VCj+K1ETKTse7
pd5S4PO86XokuQ/V2Wiahn/g+PNGIkmpCUON+qsOe6Yp8Dd0MqlhQB09lDp3
MW+RApN7Xc/1PNyNtMWt+f/84fjX67DLTXUXaiOrXrH4R4EzglWnN1Uqok6e
hdwNfFSYU5itmtKUQ73vvJv9iVTYXYR//q9VHBmPmRzop1DBHD8TnixIRwOD
Cn3bGVQ4eWdTl+FZIhp5OPNqYgsVDjpOdMxYcyHLhp4T6pJUSF7qf2CyNM1+
VlX29ao0FSI1xTJzjz3HxnJdV/UVqED6MWkkuIkPP5quF1WoRAVGXVDZIzFh
fCJRSvCvMhWUvpvVuUwQ8bchH8RqNKgQa51zV2WKiTv5txUJalLBYSJPpip/
M/7BvUDeVZsKckpB409SJfDPtsexTQZU+GprqhjaKYm7HdZsDzSiwubQm/5N
qlL4jIG40ZAJFYYGVarqE6XxM1qrw/JHqHBcQG//yW4Z/LvauF2MJRU8PAJG
+j5tx70Vm96/taFCiU92wcYZWfyHdKY7dowKfguKE/qjcrj/5nM/049T4dLw
/YW2Qnn8F8X6/JwzFQL1WK8eW+3Al3gpCTfdqCATbiGw1lcBX5kfzrTzoUJa
gt7jBOmd+JoPKWUiQVTgiWAkjIfsxLmHTe53XODovx5HkwrcifO1Cj4OjqLC
nd1rfXCxnfiGuz0vdl6mwp+0jVfDOHyXS8sc469Q4UEQZVVhrQIumBc39SGV
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
cP7u2y/N/r1CTzRs3AIBPIOP/WpFMJmma9cfS0rAm98/oiJifzepOHeYiMZJ
AK/+hyiV7W81HmaTaU8WJKDh+XaTYqXuJpmH5Hhju61wMaJeuOrUXY1DvDOb
hpq3wmR0dkeTTUbT7MsPbY9kWXCb2uPxLDxcwys7kRh3hQXG8T0+ITTXpidc
kt8PprDg35n3GioBrk2yp+4/FrjKgjU/xx7tY7s2fVD6FJ6czgKbUarViY2n
m6y7YPZaDgt6Hwq5aD1wbdL+8fPJzXIWSJ0tXfdS4kQTRd82ur2LBaFDB7aW
ZRo3+d2edYx+xII/Rjf9PXgNmwYIMbh+DwvIZ5Vn84L1mhJe1cz39LFA030u
+XoiNK3xE3QeHmVBE2W7YECoWNOXnIea796zwDYb/T6fpqWhx23FLJpkgZyp
p19Z5X6NItevv0584sw7VFTbUqKr4bCbUTn1hQXrc1rztVQMNEa6/cTm5ljQ
ba/i2dporKGksGGx+icLfP55n8vpNNFIupo37L/AAoqAi+k2G1MNA/ve+MVF
FgjI/+r4TjTTuNnmfPL+MguemjXXnLEx0+DZvqwVssKCdU+Hy9yvmGk4JiVv
2veXBSlOVTf315lpNP+UWvr3j+NXv+SqXZ+Zxv8OoPrE
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
    "\"\\!\\(\\*FractionBox[\\(5\\\\ \\*SuperscriptBox[\\(\[ExponentialE]\\), \
\\(\\(-5\\)\\\\ t\\)]\\\\ Sin[\\*SqrtBox[\\(231\\)]\\\\ t]\\), SqrtBox[\\(231\
\\)]]\\)\"", TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.638650723221899*^9, 3.638650801712097*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"5", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "3"}], " ", "t"}]], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         SqrtBox["7"], " ", "t"}], "]"}]}], 
      SqrtBox["7"]], ",", 
     FractionBox[
      RowBox[{"5", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "2"}], " ", "t"}]], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", 
         SqrtBox["3"], " ", "t"}], "]"}]}], 
      RowBox[{"2", " ", 
       SqrtBox["3"]}]], ",", 
     FractionBox[
      RowBox[{"5", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "5"}], " ", "t"}]], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         SqrtBox["231"], " ", "t"}], "]"}]}], 
      SqrtBox["231"]]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", " ", "\[Rule]", " ", "All"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.638649127604659*^9, 3.638649131588257*^9}, {
  3.638649272120304*^9, 3.638649304076746*^9}, {3.6386508058398743`*^9, 
  3.63865080645549*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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

        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
5v/+ZfO5ST7o/drp+v8DAf/nOg==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
ZwNX9/efIQF34p2Dt2wu4eba7V1mISTYwnQqXNYKwb/O17pWX+Tsq0nxdhcL
xqNLStYTI0jwX8DgquOvQLxBIMFwJI4EUxdWwqYq/XCxZ2b9ltdI4GCQNCJb
cxKvjdvvXZ/J+X59RFtIlRNujKmI0nJJ4OFzUoQedgwPy6cdeVHE6cO8RVtt
hhFON98wr15KgtI1IxvPr2jg1XwraZnlJHAPveUT5fCU/cH99VO7ahJg0i0N
MUxDFCo+GMiuJUGPcspe1pcjiDLYStvUSIIFmV1v67htkf6em7YTD0jw29VA
RarGCb39fO3PvjZOvtt1jn+1OIGCs+Kyb3SS4JWHiPrY8ClUscZz4ngvCQ7H
DP4TcvBAujX2F1sGSEDi7tXNcD+DJk6Ybtk6QoKj6yr3fpDxRoE07ZZLz0hw
8Fhuevs6HyTSs9vp/RgJtvMljHuN+qBbodu4dSZIcDJojvgryRdpK1KLit5y
cFG6nL+KH3r5bp0u7yQJVidFgomP/JD/f8uTJz5z+jvZor7+oD8S1J+J7pwm
waZXrWvSG/zRzeVX0tLfSYAf0VHhJQcgzdv93TE/SDBS/+ZChUMAeu7Qcvrz
AqffKg4q0xkBaENHUfmtFRIsdwfuf/E8AGnIxn514yZDBTlpIoCDR8bPJfXw
keHfSpStW0sA8rjivlN+AxkGuFOUX2UFIF7tYwOXBcmwtkF8n6NrAMqdN/b5
KkKGH7jIwSTpAKRaAgRjEhl4Zu5krBnzRwM2u2oqqWTwrXXUtQ7zR6cFJM2F
mWR4/96kTo3pj9Y+IC94iZOhyzhBSL/cD2X58KcPSJDh7HhPgYKSH1KWXNqj
tI0M2jeUfNJv+6KTceNBP+TIYJl+aSr9sg/6p9FHP7KTDKYb0/bHzHqjjG8P
7tfsIoPOxlwoOeSNHh8pXPFXJ4PTyzFFmPFE1VHvxrIwMiCZMuZgjgfKrJdo
bNUkQ2v65DM+fXfkxswLEDlABo/I9LzIeFe0/n32t/LDZDij+md983snNEsa
fzJkQYbqJcsD4Wcd0fMDzPIlazJIOyU8urX+OCotu35Kz4EMP715RaVOc/rm
m/7mnTsZbG/ukO7qMUaKRaPN673IMPerY/hriAGiPSXlKPqSQWJX5vsqPR30
Sf2qzYUgMjwyL93Jf0oZ9bkPqRafJwPD6lnEZ+dtqC5HlPLkAhmkTlGLyxjz
7Giu5CF6FBnsX2ZL0VoV8TO7++9ALBlS1kUZCZqo45YnhK6cSiDDiY3++2kd
gEs9umxYm0KGPW5pn+LC9HGhPz3bx9PIYKU54aonZoT/kt+4jjuDDAURR0We
xpvgHclx7aa5ZBhTkLDt/3YYr2jtLgjMJ4ORP77V5bg5njbPH55bRIbX1/wd
Te9b4CFSeg4dJWS40V+rErRiyXnPRuMzZWTwsasQ65eyxo3iO5jESjIEX6NH
Wqnb4MpsnmX1u2SIfehlvlXZFhf7tv/58XtkmO+QOGtMtcN5tkTUxdSTQWWv
2OF17+3wGbPWtMr7nH0+jh2Ku3YUH4ng8htFHP7yxP1UlWM4uxbMVh6SYYd1
8y9u9jG88NPFnax2MjQ1f4qqkLfH4+kPBA92keHIiMeLoBh73Nfw77T3YzKc
e31U5OUTe9w2FH98rZcMd7q9po1X7XHtqpDS5gEyBPgX7rGhO+AE4h8XgWdk
0FzcuORJccDfnT0nYfuKDOsxXspEtz3+uLThX9gbjn5q9LUaDn/12O9XJe/J
0PDXVuiFij2eKaDK7vtIhs8aXFxrR47h4fvOZi5MkUE19NbBj07HcFfv2iCx
r2SInFCL03p/FDctmLfcP0uGX0fcEocsjuJqI7tV3H6SYfS9Va9tkx2+hc+P
mPKLDO0Xql7kkOzwdWrVc/VLZNh9bXj0uJMtPnt6rn9ihQzLL1k/Txfb4A97
vS7Lc1Ngn79+xmkha1yZBBuv8VHgx++TbzxYVniprUg81wYKnFILJiTttMSv
fLoT81SEgz23lwkqmeP2XD8uhYlTYHTXQgT1kwk+pNfKNS1BgUMRqpWSDYfw
A0mpYRbbKBAvejFHLdoQ38HcfUFWngLUipde1C16+Iqy/7kRdQqsjqgex2Yw
3Pu8zuI+nAJNtjvEderU8A8tpMBbQIFzAyu751KU8R7jWv8LehRQSelVPiK8
Hd/3X9TPzwcpIFUp3CNrJIFXv7TwPWJMAZvBGxGZ54l4pusvLxkLCvjx3syw
7F6LhKo6v6VaU+BrA4FfkkFFlxbSPVftKLBJVCJESWorcruk6j7kRIHw/Y7/
nsUqoIlu/i/YSQpcKtIk8UvvQoeFn7uWnOboFzEnOH1QRurZQSdDvCmgYZP/
I2xGHVW805/86EcBH9kFP/k9GNqyne5iFkiBxjzFxhPW+1Ca19S7pmAK2Gcx
dgZtB7SurtFR6gIFhAwvqT4jaKGQlbg3yeEUmFN+3GzyWQvNats6/ImkwO0r
hNHvt7SRS5zsxIlYCgxhN0yGrfaj5/3LRwcSKGBE2avF+rEfGVF6Xu69QoFf
2XGe5HM66OHRLNviVArQDabrp2d0kHKh+wvhdAp4Yg5JPw/popIpDevg6xTo
MhA1i8rWRUlnxy1M8iiQmxir+JL7ADrLHXpEsoQCs40n//lJHUD2yZvMlm5T
oCzv9NyxdQeQ7qZm4757FKjxtktnVOqiBuekXrUGChgcvLj6xV0XyZfZGxU2
USCrrLImXkwX5c0q9Ag+4Pi3KnYm/6EOIqn+Mwhq5fTt+nX7MWsdFBva3/2u
gzM/7lLW+8n9aKXtht6hRxSIMcuP93Tdj96bgu7WAQowmt9q9JpqI8trIu2X
hymQ35mot6FBCz1+9Ub791MKCMpFxfxH1ULVbuHw5BUFhl/VCj+K1ETKTse7
pd5S4PO86XokuQ/V2Wiahn/g+PNGIkmpCUON+qsOe6Yp8Dd0MqlhQB09lDp3
MW+RApN7Xc/1PNyNtMWt+f/84fjX67DLTXUXaiOrXrH4R4EzglWnN1Uqok6e
hdwNfFSYU5itmtKUQ73vvJv9iVTYXYR//q9VHBmPmRzop1DBHD8TnixIRwOD
Cn3bGVQ4eWdTl+FZIhp5OPNqYgsVDjpOdMxYcyHLhp4T6pJUSF7qf2CyNM1+
VlX29ao0FSI1xTJzjz3HxnJdV/UVqED6MWkkuIkPP5quF1WoRAVGXVDZIzFh
fCJRSvCvMhWUvpvVuUwQ8bchH8RqNKgQa51zV2WKiTv5txUJalLBYSJPpip/
M/7BvUDeVZsKckpB409SJfDPtsexTQZU+GprqhjaKYm7HdZsDzSiwubQm/5N
qlL4jIG40ZAJFYYGVarqE6XxM1qrw/JHqHBcQG//yW4Z/LvauF2MJRU8PAJG
+j5tx70Vm96/taFCiU92wcYZWfyHdKY7dowKfguKE/qjcrj/5nM/049T4dLw
/YW2Qnn8F8X6/JwzFQL1WK8eW+3Al3gpCTfdqCATbiGw1lcBX5kfzrTzoUJa
gt7jBOmd+JoPKWUiQVTgiWAkjIfsxLmHTe53XODovx5HkwrcifO1Cj4OjqLC
nd1rfXCxnfiGuz0vdl6mwp+0jVfDOHyXS8sc469Q4UEQZVVhrQIumBc39SGV
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
cP7u2y/N/r1CTzRs3AIBPIOP/WpFMJmma9cfS0rAm98/oiJifzepOHeYiMZJ
AK/+hyiV7W81HmaTaU8WJKDh+XaTYqXuJpmH5Hhju61wMaJeuOrUXY1DvDOb
hpq3wmR0dkeTTUbT7MsPbY9kWXCb2uPxLDxcwys7kRh3hQXG8T0+ITTXpidc
kt8PprDg35n3GioBrk2yp+4/FrjKgjU/xx7tY7s2fVD6FJ6czgKbUarViY2n
m6y7YPZaDgt6Hwq5aD1wbdL+8fPJzXIWSJ0tXfdS4kQTRd82ur2LBaFDB7aW
ZRo3+d2edYx+xII/Rjf9PXgNmwYIMbh+DwvIZ5Vn84L1mhJe1cz39LFA030u
+XoiNK3xE3QeHmVBE2W7YECoWNOXnIea796zwDYb/T6fpqWhx23FLJpkgZyp
p19Z5X6NItevv0584sw7VFTbUqKr4bCbUTn1hQXrc1rztVQMNEa6/cTm5ljQ
ba/i2dporKGksGGx+icLfP55n8vpNNFIupo37L/AAoqAi+k2G1MNA/ve+MVF
FgjI/+r4TjTTuNnmfPL+MguemjXXnLEx0+DZvqwVssKCdU+Hy9yvmGk4JiVv
2veXBSlOVTf315lpNP+UWvr3j+NXv+SqXZ+Zxv8OoPrE
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FractionBox[
        RowBox[{"5", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
             RowBox[{"-", "3"}], " ", "t"}]], " ", 
          RowBox[{"sin", "(", 
            RowBox[{
              SqrtBox["7"], " ", "t"}], ")"}]}], 
        SqrtBox["7"]], 
       FractionBox[
        RowBox[{"5", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
             RowBox[{"-", "2"}], " ", "t"}]], " ", 
          RowBox[{"sin", "(", 
            RowBox[{"2", " ", 
              SqrtBox["3"], " ", "t"}], ")"}]}], 
        RowBox[{"2", " ", 
          SqrtBox["3"]}]], 
       FractionBox[
        RowBox[{"5", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
             RowBox[{"-", "5"}], " ", "t"}]], " ", 
          RowBox[{"sin", "(", 
            RowBox[{
              SqrtBox["231"], " ", "t"}], ")"}]}], 
        SqrtBox["231"]]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.638649131944894*^9, {3.638649298671131*^9, 3.6386493044947453`*^9}, 
   3.638650807098308*^9}]
}, Open  ]],

Cell["\<\
(b) Using your result from Part 2(a), explain how the three cases above \
result in characteristically different solutions.\
\>", "Text",
 CellChangeTimes->{{3.6085146464497695`*^9, 3.6085146574794006`*^9}, {
   3.6085146893882256`*^9, 3.608514691787363*^9}, {3.60851482111876*^9, 
   3.60851487305173*^9}, {3.6085149265027876`*^9, 3.6085150469286757`*^9}, {
   3.608515095030427*^9, 3.6085151709677706`*^9}, {3.608515223136754*^9, 
   3.6085152667162466`*^9}, {3.608515308284624*^9, 3.608515376938551*^9}, {
   3.608515496731403*^9, 3.608515518796665*^9}, {3.608515557150859*^9, 
   3.608515858711107*^9}, {3.6085158971433053`*^9, 3.608516033287092*^9}, {
   3.608516066576996*^9, 3.6085161025810556`*^9}, {3.6085167629998293`*^9, 
   3.6085167919084826`*^9}, {3.617957730131983*^9, 3.617957731614068*^9}, {
   3.617957780039262*^9, 3.6179578194933443`*^9}, {3.6179578857374964`*^9, 
   3.6179579128045373`*^9}, {3.6179580076799884`*^9, 3.617958009146445*^9}, {
   3.6179581298324223`*^9, 3.617958233417737*^9}, 3.6179595217719417`*^9, {
   3.61795957050815*^9, 3.617959574377124*^9}, {3.6179596442682595`*^9, 
   3.617959689214876*^9}, {3.6333549613888655`*^9, 3.6333549656319866`*^9}, {
   3.63336110378596*^9, 3.6333612116867895`*^9}, {3.633361572673644*^9, 
   3.633361615142288*^9}, {3.633428385583096*^9, 3.6334285759691687`*^9}, {
   3.634053375179511*^9, 3.6340533754646535`*^9}, {3.6367345204501762`*^9, 
   3.636734696989667*^9}, {3.6367347270737114`*^9, 3.636734805674693*^9}, {
   3.6367348399356594`*^9, 3.636734878394562*^9}, {3.6367351292770567`*^9, 
   3.6367351410232735`*^9}, {3.6367356668410883`*^9, 3.636735715726284*^9}, {
   3.63697734417929*^9, 3.636977344426512*^9}, {3.638269569809026*^9, 
   3.6382695852780237`*^9}, {3.638649727229041*^9, 3.638649731065995*^9}},
 FontFamily->"Gill Sans MT",
 FontSize->20],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"5", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "2"}], " ", "t"}]], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", 
         SqrtBox["3"], " ", "t"}], "]"}]}], 
      RowBox[{"2", " ", 
       SqrtBox["3"]}]], ",", 
     RowBox[{"5", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "t"}]], " ", "t"}], ",", 
     FractionBox[
      RowBox[{"5", " ", 
       RowBox[{"(", 
        RowBox[{"10", "+", 
         RowBox[{"3", " ", 
          SqrtBox["11"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          FractionBox["t", 
           RowBox[{
            RowBox[{"-", "10"}], "-", 
            RowBox[{"3", " ", 
             SqrtBox["11"]}]}]]], "-", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "10"}], "-", 
             RowBox[{"3", " ", 
              SqrtBox["11"]}]}], ")"}], " ", "t"}]]}], ")"}]}], 
      RowBox[{"6", " ", 
       RowBox[{"(", 
        RowBox[{"33", "+", 
         RowBox[{"10", " ", 
          SqrtBox["11"]}]}], ")"}]}]]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", " ", "\[Rule]", " ", "All"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6386497331885643`*^9, 3.638649756707548*^9}, {
  3.638649809198823*^9, 3.638649862410573*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
5v/+ZfO5ST7o/drp+v8DAf/nOg==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVV3c8V+8Xt8vee1MqShkJX91zhGRmRIXs1UK7rEjZW6FCotAihYxCRraI
kL3n5xMyQ/z8/rn39X6d8zznfc95P+c5V9ze3cSJioKCInz78f93sq89nZxj
GBHNUSGbIpJLpFiQVE+LnYcUBlt69SNR8Msg9KqY2B0Y/3tDUZTuGdzSPstC
KxYCx+kUT+x5mQ3Hq9BqRfQxSDxwHpkf/wLv7ikGzIm+AtMD6Q9O326EUrpO
4dnc1/DgZ9VTf7ZmaAm9U0jWeAufpwtXXdK/w5/YUvK0Sw487WXta7JqhSTj
XW//dH4AoeB7ft6n2mHILpuHLFoETAXT3ZTff8F0+pYDabIIdhp/cf1+rRv+
jBnlzuQWQ3mdeuFZnh6gubCgN63xGRQ3fBOKT/WC1FVl/wmXMlj9l/ta81M/
8HVrulzjKwdb5CdH6Q6AkBeZecG7HKZ9LT5X9AzAri+E5R+tr6B08nbtX69B
UFIfWprrrID697uad4QPgepwSJKHWiVQ7CqNjG0aAiJAXmMutRIe61Xw7WYZ
Bu3qgOjZ81Vg+GV598XwYTijIyXze70aNKejjb74jICX8UXbGdE6oBTc7PE8
PAabAUr8A+F1MOH3b3fPpTHwK6D88eNvHRxrCLp5LH0M7gsmahS31UPcjqbu
Q8zjEDlWJRUS1Ai3BFdFO36OAxtf9ID3YiNMBk6pFtJOQKyuZaKHXROk99EJ
FihOQELOPP2Z/5rB4flVXtboCUi9I0KWmv0OAocKFTzVJoG9Y9GEWbYFJrd8
2n2dJsHE3eJgkGML3GEb8PkQMQk/n++e9GxtAa5bvOLveyahm+7zWfs3rbDo
eXZFw20KBFPFlXqHWoF4umZMETMFVipBHOZ8P2CW2jf+34cp6L9o0qDz4Ac8
VvtxvnJxCkZaJtXkbNqg3HZiqcB9GnZdMOR/86gNvmhp+eWHT4Mzdd7SrsY2
qNziD6N9NQ2Th+9m86m0gwQzP1vawDSQnnCLUXD+BLnWxJPUWjNwQNFr447O
TzjGOnirymoG3JoGuxbu/oQ5Dq9749dmYH7rTcwE6SeQuDwTT6XOwLLjMerv
3zpA9WCQJuOfGTiymTlw4l8HPHcSEKKjJcHtBObPFQqd8ODbF14PXhKs13Vd
L0jthPHf1bqJqiRQcyCMD3V2wrLsw4GzeiTw3Ug/8Jq5C/RGT5vGWJKA4qD7
eLJnF8QyFzi5epJAvba9gje3CxIuaKszhpDgnp3qs5iJLmhtabohnUACmoe0
Zx6c+gVJH0yVR3NJQP/3ad0l2W5g65u44jFEAuWgX566dt2gQifX7j5DAldu
3v17H3bDyw9PKHcskeCbXGzkyN9uOI1v71LuIMNy2Xf4ur8H9sQ7SruwkmG3
IfN8ik0PUNSeP3Welwz3LwSbWlT3QDV1+WdtKTLkrVbTKK/2wCfbFJA6QIaR
QOoCbpleSDKfrX+pQAYObnWXhXO9YCN22bNGhQzH0n35WqN7QeO/oy7hQIar
cp/rsit74WrjUuaSJhmel/31DF/uBZqNNCMaXTJQ9F7v07bqA9cvd4R5TMlw
6MKHyN1RfZBnoHJO8DQZbFZngbqiD6THJdXqLcgQGXhgfnCxDybTh79KWpOh
lOtiWumefhD6/XFhrx0ZyGlZpkkW/TAa7NHe7UAGIblxGs+IfqBOiXZUdSaD
fplkwenyfqgsOZR2wpUMXgZ2LocX+mG+jieE7gIZXvek8HFKDQDjUgHHjYtk
6D7fWzd3ZgBKopSVHl0iA/0qv1dz2ADkTntOulwmg3Lg6f1vSwdgQEJA6Pc2
duV61BcyPwBq49e+7nXbjmd8vkaBYxCED779xreNHfl2pqbJDILUci5v2ba/
10DGbXatQVjp1kgR2saxGVrGftaD8LxyUV1+O97ry6P7Zm8NwtzVQ5MU23wq
FAOorGO27dx4PeT8Nr918Z7G14MQ882wptGFDH8qyj/+VzUI6/Ru5Q1O23xD
bcJf9w1CCzxRC9rOh5jxpiP/yiCoM5fxUGznS5kv+Wgw2xD4fSnZc2Q7n0YD
//Gs7BuCkccuxw9Ybn9PRvdvJ40h0FeJ1x7Zroff5Ts17VZDIFwjuHn2FBkS
FPlSNW4OQZx6q2qsERmy1wtuf4gaguacxMZwfTJ8qzAzFn81BHYn7fx0T2zr
zyiOaqtnCF5RsNzm2NYHC598z+WlITCpOqIvokoGqYGWj73bffI7sWw/p0gG
s8ssTsXqw6B6lsNxeh8ZLim+O7rPchhqr1V859y1rdd1PZ7E68OwIpjnRyey
rdeQkJobmcPQPEXzXJedDI1Ge1NHy4fBzE09IJlhW7+8NbdNu4chc8g/+jP1
tn4zaKTlmEfAmufmpt32eblScTecdHUEuo2/BZ/rIMEq+8N3PWEjMMW7e9qw
efs822U1178YgVFYK+T8RoJwila2Vx0jsGBoyi2QT4IsQuKRk+oosBdm50rH
kGCwuCq5n3IMVrT/Uvark8CF4Vdpk8AYvHlsymVwhAS/z5IHPiuMQU+627fE
/STYWOWWeOo0Bi93GErV8pCA74hLxum6MRBVLDd5NDUDRh/pc1qix2F3wp69
Z0NmoJNKpKXs1TikN+RPNHvPgLWJ/Hx2xThY2j6R2ucxA5fmLRQiFsdBkEJm
Ltx8BoIPvv2kc2YCmlhlOUUkZqDsjWF5hegk7NGQ26zOmwbZF3GtedlTcOed
uvdc/RRwJR5aKa+bAoIBTt0qnoL1sCahptEp4KjDm6RXU9t12OE6JjANSxoT
mB48BfYaXpvcQdNAm0+pa6g1BY+G7WVu2czAo7eue+dLJmFDTP6BChsZmsL8
EydTJ2DM0FVoQHkOhnQ7ZW0txiBBIFD4ue0CnIm1K78uNwTLI82Zhm4LQDFr
k6kkNgSn3vHKb3gtAGubqhMl6xBw4KvjpxMWYEz7d14uaRDCnRrdmZsX4HLH
UMndrEHwe89Rcee/RdAmKW0Nig+C6/FnziY8SzCre2pMW7kfVK4W5lA3LsPF
0zlH5O27oWXrP+srv5ahQlM8zFerG5wjypgGxpeh8U8fy9DebojN+na+mHIF
bGe0yiZnt+eN/nbJK0dW4D2dnQX13e0+rTef0J+2Apz6agfOP++CzV3SfkV3
VmFF7A4l3UoHVHY+NXLfswZ3xoUqZcfa4KG92eKSwhoscs6OJH5vA2cyS6I3
roFhM/1v7uI2YKC+NxBydg3e/T7y4kRUGxjJurq9CFsDX+1PfVGqbdB/XzH8
1+wanG8/ZPPs4Q9Yk2uq0ShcBydrnt5w81Zo/Bx4sb5qHeTbpke1NFohRRtZ
jVvX4dSrM31sh1pB/dxHc+vpdYjN7rrdS98KwcGPx24LbUCnxL+zOqUtwDPg
RJ3ttwEnfhyMvSLdAnLhmwSfzj+YpFPXdhdtBvnzG47vzP8BO09th/laEyge
Xws95vgP7nH9y3H62QRKFMsdl+7+A6kjju2rYU2gdp3s9jX/H6RqiC7MrzXC
CavelAsSm9BlWvOJd7ABbPcXb35e3wTTEy/uu3+rA3v6wl0m9FtwsmZImDGj
DhzG83UneLZAwmwjuP5BHTin5sazy28BhfGAfZ5WHVzieiXr7LoFncIFdHI1
tXBrI8Ga9ecWXFd3Z8hvqQHtcdWBQ6cpMH+Z3ln0XzU4t7WTgs5R4JODs0Y9
w9Vwv9xtrd+BAmeths0/1lbD1ydp3BEeFPgsfMv808Nq+O8kg/5UCAXmpMql
MMlWw8HCX4XPP1NgKcTRdTlVAW/o7VgOCUrMpotWNZ6qAKVbHKnn91LiY+60
TocfFXDK8e27cllKbGrOyY0qqYAYYrDW7T9K1HnwqUI+sgIYF7S36k9RouRh
3tF0xQrYsuS9FBBEiR6ulskigV9h4kCB1iKJEt/1sD7tUS0HCZ/LTjILlNgn
VcF/ck85WDXuemD/lxLFk4aUujjLoeVCXFULLRW22lmsmnWXQXGmh8Y7ESq8
aEHseK5eBuHiMurORlT4L/upJRdfKchxp6p1faTCpvMs7dYjJXDJ8bQVazEV
+o18O2H3tQQyPrJ4Hy+nwgfKnGKhz0pAwMSnJK+RCilr2e0MrUqAJspCNWaM
Cp31fISSO4uhYye3si4vNQZaih5X+FkEXhshCp89qfHHufRKrZlP0Hzd4aGn
PzX2vEw8YdjwCcTIakvKwdT454jkB983n6Cqb7Yg/xE1Oj8aDDC/9AmYysxU
c95T4+6vkzbbJkjxF1dPG6fG4xccLCU28+ErXZFhsAkNDs9EhTko5QHX3dic
42dpMCb5rQOPYB44r1xko7WlwRee/VMzWx+BYVLkh/9lGvzs2Gi/WfcRTOru
m3kF02CC65XSzzYfYTTMyMqtlAbJlBf0fGI+wA72yfOnpGnR5qEC0DHnwnKQ
ldazQ7RoJefsZrLyHsY3W8SmlWjRZW6prHDoPXwjFXXe1aDFUa+x020F7yGw
NkzrjRUtKhql4FH790Dnd1CcKooWlWRgOt4rB+hmb3blLNDiWf1wtt0s72DZ
aebj2l9azA/fRdcz+RbGe22itCjokJrf3Ku08i18qz9xvIeJDnfGFfExe76F
wAyBPDopOnye6JZQOfkG6KxLo86doUMnFzWKC82vgbaJVpvxCx3e+vJi60RR
FjBdTnLoq6TDXpX0w2nxWcDFrOCXU0+HXy196vddz4JdBrZFpl102Bk4Kl15
MAs0m4plkhbo0LixOZTvVSbca3JnOyC9A2+tOuYKvcgAiuZfvwwTduANE2Y5
luIXsNPNY1ksZQdGvyg9V5v0AthYdnAuvNiBFt9d9r+++wLEDBX1Ez7sQJ//
FCZGtF4ANEeWDjTtwDK6IQfp9nTwbdZI96DZiRNusYVdK2mw3vzuUuyVnTja
aTbibvEcRFrtnmre3omXPwzfVTz2HI61cdcv+277v6t6xS/9HEI7ffZYhu9E
kytMlFprqcA3aDAsmbkT51c8TwgmpYLSPPl0fu9O1OnbMDre8Aw8OGU1urTp
MXGlP1dcJBkecg9fCTWkR4pncc8PLyXBJ974VDUzehyS/o/NvzEJNgU3/6Xa
0+NJqgyDL15JELGrufC8Dz1i3GRMZe9TeH3YTXb9Az2yVR54VJ/1BMZOZ/OL
iDCgpp5wMtk5ETLO/Kuw2sWAw6vJCmXHE8H1rP6lp9IMWBnP3V0klQjTFtOl
fEcYsH/gXdS+iQSYOyflyGnEgOed6I6QzyfAhkNK9s57DHiGO3S5+2Y8cHpE
aiyMMaCFzqjKjncPod2jjyRHYkADgwrDlJiHEH9lf7zHHwake8CSeubmQ+C7
Vj9J3txev7Wpq4QPQeQmXeQkLyMWDdhyxPyMA2lv364+HUaccnoc9IwuDtSD
3S7XvmNEWtCso/KPAYEPA6cj8xjRYvX2gyKXGFjsMTp2qoQR60h7yuMMYyDj
oALvYO02jmf5kysUA0ydK+UrI4zoZ9wqFF0cDR27/bn2CDChsKYx2exvFFys
jCt5EMiElwT+PdKQjwBNMk2GXgQTLhgsnR7cEQEivDej2R8y4elL7DRFfeHb
/e2MU/JzJiyaEPwpFBoOShzCrPmfmfD6LG3oy7EwoLDLsB/9w4SVZh2MNzND
4dFmIb2GDTPeVzmtuWkaDEx7qt0eOTHjesC53D75YLh/srVt4iIzJufqC0+x
B8PV1Knk8NvMyEMfzRbQEgSGxwTkO2KYUXmY0P1yMgjoAr0szlcx43n7ZE5B
80C4zUy8idrHgkOR9z/R+9+H2cO6bMMHWTCGIfgrhdN9cLY2v6GoxIK/hGvU
hHXuw6kcN/h1jAUr/0uvrma/D3LGz9okrFhwhvvO6PcXATD9kGIjP5IFLXaH
KTxrvQeWQpX6vQsseMMpPZOk6Q/Tl+f/5K+xIG2lYwUh4w+3y0QfR1GyYs98
l1IBuz/E23uPHWNlxa9O5yy4BvzgR9Zh31fSrEh0TPwK8vID3cNZOTftWDG/
dUKUuHkXVA0jONi/s2LNm6X3lzO9oe5ZSeH0T1Zs+z4QlOHtDWfmp6yrelmx
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
t2O9YQ==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
ClS+zc0xyJekPfPO+7HwP6whoGY=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FractionBox[
        RowBox[{"5", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
             RowBox[{"-", "2"}], " ", "t"}]], " ", 
          RowBox[{"sin", "(", 
            RowBox[{"2", " ", 
              SqrtBox["3"], " ", "t"}], ")"}]}], 
        RowBox[{"2", " ", 
          SqrtBox["3"]}]], 
       RowBox[{"5", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
            RowBox[{"-", "2"}], " ", "t"}]], " ", "t"}], 
       FractionBox[
        RowBox[{"5", " ", 
          RowBox[{"(", 
            RowBox[{"10", "+", 
              RowBox[{"3", " ", 
                SqrtBox["11"]}]}], ")"}], " ", 
          RowBox[{"(", 
            RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               FractionBox["t", 
                RowBox[{
                  RowBox[{"-", "10"}], "-", 
                  RowBox[{"3", " ", 
                    SqrtBox["11"]}]}]]], "-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "10"}], "-", 
                    RowBox[{"3", " ", 
                    SqrtBox["11"]}]}], ")"}], " ", "t"}]]}], ")"}]}], 
        RowBox[{"6", " ", 
          RowBox[{"(", 
            RowBox[{"33", "+", 
              RowBox[{"10", " ", 
                SqrtBox["11"]}]}], ")"}]}]]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6386497570300303`*^9, 3.638649772716758*^9}, 
   3.63864986348005*^9}]
}, Open  ]],

Cell[TextData[{
 "In the case of underdamping, because ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Lambda]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is larger than ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Omega]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", the second term dominates the function in a way that overpowers the \
oscillation of the first term. In the case of critical damping, the second \
and third term both overpower the first term , causing the whole function to \
go to zero with no oscillations.  Finally, when the oscillator is \
underdamped, these same last two terms eventually overpower the oscillatory \
motion caused by the first term. The only difference is how quickly the \
second and third term take the function to zero. When underdamped, the \
oscillator actually completes a couple of oscillations before going to zero \
(or stopping)."
}], "Text",
 CellChangeTimes->{{3.638649921487701*^9, 3.6386499277504187`*^9}, {
  3.638649973851013*^9, 3.638650228011969*^9}, {3.638650348954406*^9, 
  3.6386505577892017`*^9}}],

Cell[TextData[{
 "As a part of this explanation, create multiple, well labeled graphs that \
illustrate each of the three cases.  Use at least three curves (if not more) \
in each graph for each case.  (So you should have at least three graphs on \
each of three well-labeled plots/graphical images.)  Be clear with ANY values \
you are using.  If you use a problem from the book or the problems earlier in \
the lab as a starting point, say so and be clear with all steps.  Consider \
these graphs to be your explanation to a fellow undergraduate student of the \
differences in the cases.  ",
 StyleBox["Although you are creating graphs as a goal, you should have \
accompanying text that fully explains your process. Just because you have \
numbers in your ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Mathematica",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" code (which I should see) you need to state all your choices.\n",
  FontColor->RGBColor[0, 0, 1]]
}], "Text",
 CellChangeTimes->{{3.6085146464497695`*^9, 3.6085146574794006`*^9}, {
   3.6085146893882256`*^9, 3.608514691787363*^9}, {3.60851482111876*^9, 
   3.60851487305173*^9}, {3.6085149265027876`*^9, 3.6085150469286757`*^9}, {
   3.608515095030427*^9, 3.6085151709677706`*^9}, {3.608515223136754*^9, 
   3.6085152667162466`*^9}, {3.608515308284624*^9, 3.608515376938551*^9}, {
   3.608515496731403*^9, 3.608515518796665*^9}, {3.608515557150859*^9, 
   3.608515858711107*^9}, {3.6085158971433053`*^9, 3.608516033287092*^9}, {
   3.608516066576996*^9, 3.6085161025810556`*^9}, {3.6085167629998293`*^9, 
   3.6085167919084826`*^9}, {3.617957730131983*^9, 3.617957731614068*^9}, {
   3.617957780039262*^9, 3.6179578194933443`*^9}, {3.6179578857374964`*^9, 
   3.6179579128045373`*^9}, {3.6179580076799884`*^9, 3.617958009146445*^9}, {
   3.6179581298324223`*^9, 3.617958233417737*^9}, 3.6179595217719417`*^9, {
   3.61795957050815*^9, 3.617959574377124*^9}, {3.6179596442682595`*^9, 
   3.617959689214876*^9}, {3.6333549613888655`*^9, 3.6333549656319866`*^9}, {
   3.63336110378596*^9, 3.6333612116867895`*^9}, {3.633361572673644*^9, 
   3.633361615142288*^9}, {3.633428385583096*^9, 3.6334285759691687`*^9}, {
   3.634053375179511*^9, 3.6340533754646535`*^9}, {3.6367345204501762`*^9, 
   3.636734696989667*^9}, {3.6367347270737114`*^9, 3.636734805674693*^9}, {
   3.6367348399356594`*^9, 3.636734878394562*^9}, {3.6367351292770567`*^9, 
   3.6367351410232735`*^9}, {3.6367356668410883`*^9, 3.636735806305645*^9}, {
   3.6367358906636543`*^9, 3.636735973590663*^9}, {3.636736219051365*^9, 
   3.6367362651456084`*^9}, {3.6369773462441463`*^9, 
   3.6369773464623423`*^9}, {3.6369778924782085`*^9, 
   3.6369779001307974`*^9}, {3.6369779757301297`*^9, 
   3.6369780327373133`*^9}, {3.636981303639184*^9, 3.6369813359780345`*^9}},
 FontFamily->"Gill Sans MT",
 FontSize->20]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 651},
WindowMargins->{{151, Automatic}, {Automatic, 2}},
Magnification:>1.25 Inherited,
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 4, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 142, 4, 252, "Title"],
Cell[CellGroupData[{
Cell[747, 30, 102, 1, 81, "Chapter"],
Cell[CellGroupData[{
Cell[874, 35, 158, 2, 80, "Section"],
Cell[1035, 39, 3279, 92, 680, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4351, 136, 113, 1, 80, "Section"],
Cell[4467, 139, 1593, 26, 115, "Text"],
Cell[CellGroupData[{
Cell[6085, 169, 436, 13, 42, "Input"],
Cell[6524, 184, 478, 14, 35, "Output"]
}, Open  ]],
Cell[7017, 201, 1895, 28, 149, "Text"],
Cell[8915, 231, 1311, 36, 478, "Text"],
Cell[CellGroupData[{
Cell[10251, 271, 562, 17, 35, "Input"],
Cell[10816, 290, 355, 12, 68, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[11220, 308, 226, 3, 80, "Section"],
Cell[11449, 313, 1642, 27, 81, "Text"],
Cell[CellGroupData[{
Cell[13116, 344, 514, 14, 42, "Input"],
Cell[13633, 360, 912, 28, 60, "Output"]
}, Open  ]],
Cell[14560, 391, 2009, 36, 157, "Text"],
Cell[16572, 429, 1814, 71, 354, "Text"],
Cell[18389, 502, 333, 6, 85, "Text"],
Cell[CellGroupData[{
Cell[18747, 512, 799, 22, 57, "Input"],
Cell[19549, 536, 328, 10, 50, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[19926, 552, 175, 2, 80, "Section"],
Cell[20104, 556, 1956, 29, 115, "Text"],
Cell[CellGroupData[{
Cell[22085, 589, 845, 22, 89, "Input"],
Cell[22933, 613, 15495, 266, 323, "Output"]
}, Open  ]],
Cell[38443, 882, 805, 18, 85, "Text"],
Cell[CellGroupData[{
Cell[39273, 904, 614, 18, 78, "Input"],
Cell[39890, 924, 26020, 439, 287, "Output"]
}, Open  ]],
Cell[65925, 1366, 156, 3, 37, "Text"],
Cell[66084, 1371, 82, 1, 37, "Text"],
Cell[CellGroupData[{
Cell[66191, 1376, 847, 24, 117, "Input"],
Cell[67041, 1402, 52150, 915, 287, "Output"]
}, Open  ]],
Cell[119206, 2320, 4571, 115, 428, "Text"],
Cell[CellGroupData[{
Cell[123802, 2439, 764, 22, 57, "Input"],
Cell[124569, 2463, 982, 32, 97, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125588, 2500, 1479, 41, 158, InheritFromParent],
Cell[127070, 2543, 5941, 110, 292, "Output"]
}, Open  ]],
Cell[133026, 2656, 1473, 44, 128, "Text"],
Cell[CellGroupData[{
Cell[134524, 2704, 692, 20, 57, "Input"],
Cell[135219, 2726, 949, 31, 96, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[136205, 2762, 1524, 42, 233, "Input"],
Cell[137732, 2806, 5954, 110, 292, "Output"]
}, Open  ]],
Cell[143701, 2919, 1631, 47, 128, "Text"],
Cell[CellGroupData[{
Cell[145357, 2970, 765, 21, 57, "Input"],
Cell[146125, 2993, 1007, 32, 97, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147169, 3030, 1630, 43, 234, "Input"],
Cell[148802, 3075, 4643, 90, 292, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153482, 3170, 2979, 91, 359, "Input"],
Cell[156464, 3263, 27575, 555, 292, "Output"]
}, Open  ]],
Cell[184054, 3821, 272, 5, 85, "Text"],
Cell[184329, 3828, 3774, 82, 297, "Text"],
Cell[CellGroupData[{
Cell[188128, 3914, 668, 20, 57, "Input"],
Cell[188799, 3936, 305, 10, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[189141, 3951, 642, 17, 70, "Input"],
Cell[189786, 3970, 15522, 268, 297, "Output"]
}, Open  ]],
Cell[205323, 4241, 1329, 42, 128, "Text"],
Cell[CellGroupData[{
Cell[206677, 4287, 667, 20, 57, "Input"],
Cell[207347, 4309, 305, 10, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[207689, 4324, 574, 15, 68, "Input"],
Cell[208266, 4341, 21410, 364, 297, "Output"]
}, Open  ]],
Cell[229691, 4708, 1331, 42, 128, "Text"],
Cell[CellGroupData[{
Cell[231047, 4754, 670, 20, 57, "Input"],
Cell[231720, 4776, 303, 10, 41, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[232060, 4791, 570, 15, 67, "Input"],
Cell[232633, 4808, 20365, 347, 297, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[253035, 5160, 838, 23, 68, "Input"],
Cell[253876, 5185, 66502, 1165, 331, "Output"]
}, Open  ]],
Cell[320393, 6353, 3872, 86, 298, "Text"],
Cell[CellGroupData[{
Cell[324290, 6443, 666, 20, 57, "Input"],
Cell[324959, 6465, 460, 15, 68, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[325456, 6485, 913, 24, 151, "Input"],
Cell[326372, 6511, 29883, 502, 292, "Output"]
}, Open  ]],
Cell[356270, 7016, 1330, 42, 128, "Text"],
Cell[CellGroupData[{
Cell[357625, 7062, 645, 20, 57, "Input"],
Cell[358273, 7084, 425, 14, 68, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[358735, 7103, 812, 22, 151, "Input"],
Cell[359550, 7127, 28248, 476, 292, "Output"]
}, Open  ]],
Cell[387813, 7606, 1462, 45, 128, "Text"],
Cell[CellGroupData[{
Cell[389300, 7655, 746, 22, 57, "Input"],
Cell[390049, 7679, 477, 15, 68, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[390563, 7699, 917, 24, 151, "Input"],
Cell[391483, 7725, 35549, 595, 282, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[427069, 8325, 1318, 40, 117, "Input"],
Cell[428390, 8367, 103033, 1772, 326, "Output"]
}, Open  ]],
Cell[531438, 10142, 1844, 27, 81, "Text"],
Cell[CellGroupData[{
Cell[533307, 10173, 1668, 51, 223, "Input"],
Cell[534978, 10226, 61091, 1089, 292, "Output"]
}, Open  ]],
Cell[596084, 11318, 1106, 23, 206, "Text"],
Cell[597193, 11343, 2862, 45, 486, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
